### YamlMime:XRefMap
sorted: true
references:
- uid: PFVR.AI
  name: PFVR.AI
  href: api/PFVR.AI.html
  commentId: N:PFVR.AI
  fullName: PFVR.AI
  nameWithType: PFVR.AI
- uid: PFVR.AI.EnemyBehavior
  name: EnemyBehavior
  href: api/PFVR.AI.EnemyBehavior.html
  commentId: T:PFVR.AI.EnemyBehavior
  fullName: PFVR.AI.EnemyBehavior
  nameWithType: EnemyBehavior
- uid: PFVR.AI.EnemyBehavior.finalMovementVector
  name: finalMovementVector
  href: api/PFVR.AI.EnemyBehavior.html#PFVR_AI_EnemyBehavior_finalMovementVector
  commentId: F:PFVR.AI.EnemyBehavior.finalMovementVector
  fullName: PFVR.AI.EnemyBehavior.finalMovementVector
  nameWithType: EnemyBehavior.finalMovementVector
- uid: PFVR.AI.EnemyBehavior.MoveObject
  name: MoveObject()
  href: api/PFVR.AI.EnemyBehavior.html#PFVR_AI_EnemyBehavior_MoveObject
  commentId: M:PFVR.AI.EnemyBehavior.MoveObject
  fullName: PFVR.AI.EnemyBehavior.MoveObject()
  nameWithType: EnemyBehavior.MoveObject()
- uid: PFVR.AI.EnemyBehavior.MoveObject*
  name: MoveObject
  href: api/PFVR.AI.EnemyBehavior.html#PFVR_AI_EnemyBehavior_MoveObject_
  commentId: Overload:PFVR.AI.EnemyBehavior.MoveObject
  isSpec: "True"
  fullName: PFVR.AI.EnemyBehavior.MoveObject
  nameWithType: EnemyBehavior.MoveObject
- uid: PFVR.AI.EnemyBehavior.Start
  name: Start()
  href: api/PFVR.AI.EnemyBehavior.html#PFVR_AI_EnemyBehavior_Start
  commentId: M:PFVR.AI.EnemyBehavior.Start
  fullName: PFVR.AI.EnemyBehavior.Start()
  nameWithType: EnemyBehavior.Start()
- uid: PFVR.AI.EnemyBehavior.Start*
  name: Start
  href: api/PFVR.AI.EnemyBehavior.html#PFVR_AI_EnemyBehavior_Start_
  commentId: Overload:PFVR.AI.EnemyBehavior.Start
  isSpec: "True"
  fullName: PFVR.AI.EnemyBehavior.Start
  nameWithType: EnemyBehavior.Start
- uid: PFVR.AI.EnemyBehaviorRigid
  name: EnemyBehaviorRigid
  href: api/PFVR.AI.EnemyBehaviorRigid.html
  commentId: T:PFVR.AI.EnemyBehaviorRigid
  fullName: PFVR.AI.EnemyBehaviorRigid
  nameWithType: EnemyBehaviorRigid
- uid: PFVR.AI.EnemyBehaviorRigid.MoveObject
  name: MoveObject()
  href: api/PFVR.AI.EnemyBehaviorRigid.html#PFVR_AI_EnemyBehaviorRigid_MoveObject
  commentId: M:PFVR.AI.EnemyBehaviorRigid.MoveObject
  fullName: PFVR.AI.EnemyBehaviorRigid.MoveObject()
  nameWithType: EnemyBehaviorRigid.MoveObject()
- uid: PFVR.AI.EnemyBehaviorRigid.MoveObject*
  name: MoveObject
  href: api/PFVR.AI.EnemyBehaviorRigid.html#PFVR_AI_EnemyBehaviorRigid_MoveObject_
  commentId: Overload:PFVR.AI.EnemyBehaviorRigid.MoveObject
  isSpec: "True"
  fullName: PFVR.AI.EnemyBehaviorRigid.MoveObject
  nameWithType: EnemyBehaviorRigid.MoveObject
- uid: PFVR.AI.EnemyBehaviorRigid.Start
  name: Start()
  href: api/PFVR.AI.EnemyBehaviorRigid.html#PFVR_AI_EnemyBehaviorRigid_Start
  commentId: M:PFVR.AI.EnemyBehaviorRigid.Start
  fullName: PFVR.AI.EnemyBehaviorRigid.Start()
  nameWithType: EnemyBehaviorRigid.Start()
- uid: PFVR.AI.EnemyBehaviorRigid.Start*
  name: Start
  href: api/PFVR.AI.EnemyBehaviorRigid.html#PFVR_AI_EnemyBehaviorRigid_Start_
  commentId: Overload:PFVR.AI.EnemyBehaviorRigid.Start
  isSpec: "True"
  fullName: PFVR.AI.EnemyBehaviorRigid.Start
  nameWithType: EnemyBehaviorRigid.Start
- uid: PFVR.AI.EnemyBehaviorTranslate
  name: EnemyBehaviorTranslate
  href: api/PFVR.AI.EnemyBehaviorTranslate.html
  commentId: T:PFVR.AI.EnemyBehaviorTranslate
  fullName: PFVR.AI.EnemyBehaviorTranslate
  nameWithType: EnemyBehaviorTranslate
- uid: PFVR.AI.EnemyBehaviorTranslate.MoveObject
  name: MoveObject()
  href: api/PFVR.AI.EnemyBehaviorTranslate.html#PFVR_AI_EnemyBehaviorTranslate_MoveObject
  commentId: M:PFVR.AI.EnemyBehaviorTranslate.MoveObject
  fullName: PFVR.AI.EnemyBehaviorTranslate.MoveObject()
  nameWithType: EnemyBehaviorTranslate.MoveObject()
- uid: PFVR.AI.EnemyBehaviorTranslate.MoveObject*
  name: MoveObject
  href: api/PFVR.AI.EnemyBehaviorTranslate.html#PFVR_AI_EnemyBehaviorTranslate_MoveObject_
  commentId: Overload:PFVR.AI.EnemyBehaviorTranslate.MoveObject
  isSpec: "True"
  fullName: PFVR.AI.EnemyBehaviorTranslate.MoveObject
  nameWithType: EnemyBehaviorTranslate.MoveObject
- uid: PFVR.AI.EnemyEvasion
  name: EnemyEvasion
  href: api/PFVR.AI.EnemyEvasion.html
  commentId: T:PFVR.AI.EnemyEvasion
  fullName: PFVR.AI.EnemyEvasion
  nameWithType: EnemyEvasion
- uid: PFVR.AI.EnemyEvasion.FindEvadeBehavior(System.Int32)
  name: FindEvadeBehavior(Int32)
  href: api/PFVR.AI.EnemyEvasion.html#PFVR_AI_EnemyEvasion_FindEvadeBehavior_System_Int32_
  commentId: M:PFVR.AI.EnemyEvasion.FindEvadeBehavior(System.Int32)
  fullName: PFVR.AI.EnemyEvasion.FindEvadeBehavior(System.Int32)
  nameWithType: EnemyEvasion.FindEvadeBehavior(Int32)
- uid: PFVR.AI.EnemyEvasion.FindEvadeBehavior*
  name: FindEvadeBehavior
  href: api/PFVR.AI.EnemyEvasion.html#PFVR_AI_EnemyEvasion_FindEvadeBehavior_
  commentId: Overload:PFVR.AI.EnemyEvasion.FindEvadeBehavior
  isSpec: "True"
  fullName: PFVR.AI.EnemyEvasion.FindEvadeBehavior
  nameWithType: EnemyEvasion.FindEvadeBehavior
- uid: PFVR.AI.EnemyExplodeStateMachine
  name: EnemyExplodeStateMachine
  href: api/PFVR.AI.EnemyExplodeStateMachine.html
  commentId: T:PFVR.AI.EnemyExplodeStateMachine
  fullName: PFVR.AI.EnemyExplodeStateMachine
  nameWithType: EnemyExplodeStateMachine
- uid: PFVR.AI.EnemyExplodeStateMachine.OnStateExit(UnityEngine.Animator,UnityEngine.AnimatorStateInfo,System.Int32)
  name: OnStateExit(Animator, AnimatorStateInfo, Int32)
  href: api/PFVR.AI.EnemyExplodeStateMachine.html#PFVR_AI_EnemyExplodeStateMachine_OnStateExit_UnityEngine_Animator_UnityEngine_AnimatorStateInfo_System_Int32_
  commentId: M:PFVR.AI.EnemyExplodeStateMachine.OnStateExit(UnityEngine.Animator,UnityEngine.AnimatorStateInfo,System.Int32)
  fullName: PFVR.AI.EnemyExplodeStateMachine.OnStateExit(UnityEngine.Animator, UnityEngine.AnimatorStateInfo, System.Int32)
  nameWithType: EnemyExplodeStateMachine.OnStateExit(Animator, AnimatorStateInfo, Int32)
- uid: PFVR.AI.EnemyExplodeStateMachine.OnStateExit*
  name: OnStateExit
  href: api/PFVR.AI.EnemyExplodeStateMachine.html#PFVR_AI_EnemyExplodeStateMachine_OnStateExit_
  commentId: Overload:PFVR.AI.EnemyExplodeStateMachine.OnStateExit
  isSpec: "True"
  fullName: PFVR.AI.EnemyExplodeStateMachine.OnStateExit
  nameWithType: EnemyExplodeStateMachine.OnStateExit
- uid: PFVR.AI.EnemySpawner
  name: EnemySpawner
  href: api/PFVR.AI.EnemySpawner.html
  commentId: T:PFVR.AI.EnemySpawner
  fullName: PFVR.AI.EnemySpawner
  nameWithType: EnemySpawner
- uid: PFVR.AI.EnemySpawner.enemyCount
  name: enemyCount
  href: api/PFVR.AI.EnemySpawner.html#PFVR_AI_EnemySpawner_enemyCount
  commentId: F:PFVR.AI.EnemySpawner.enemyCount
  fullName: PFVR.AI.EnemySpawner.enemyCount
  nameWithType: EnemySpawner.enemyCount
- uid: PFVR.AI.EnemySpawner.prefab
  name: prefab
  href: api/PFVR.AI.EnemySpawner.html#PFVR_AI_EnemySpawner_prefab
  commentId: F:PFVR.AI.EnemySpawner.prefab
  fullName: PFVR.AI.EnemySpawner.prefab
  nameWithType: EnemySpawner.prefab
- uid: PFVR.AI.LeaderBehavior
  name: LeaderBehavior
  href: api/PFVR.AI.LeaderBehavior.html
  commentId: T:PFVR.AI.LeaderBehavior
  fullName: PFVR.AI.LeaderBehavior
  nameWithType: LeaderBehavior
- uid: PFVR.AI.LeaderBehavior.alphaFactor
  name: alphaFactor
  href: api/PFVR.AI.LeaderBehavior.html#PFVR_AI_LeaderBehavior_alphaFactor
  commentId: F:PFVR.AI.LeaderBehavior.alphaFactor
  fullName: PFVR.AI.LeaderBehavior.alphaFactor
  nameWithType: LeaderBehavior.alphaFactor
- uid: PFVR.AI.LeaderBehavior.ankorThreshold
  name: ankorThreshold
  href: api/PFVR.AI.LeaderBehavior.html#PFVR_AI_LeaderBehavior_ankorThreshold
  commentId: F:PFVR.AI.LeaderBehavior.ankorThreshold
  fullName: PFVR.AI.LeaderBehavior.ankorThreshold
  nameWithType: LeaderBehavior.ankorThreshold
- uid: PFVR.AI.LeaderBehavior.attackPlayerDistance
  name: attackPlayerDistance
  href: api/PFVR.AI.LeaderBehavior.html#PFVR_AI_LeaderBehavior_attackPlayerDistance
  commentId: F:PFVR.AI.LeaderBehavior.attackPlayerDistance
  fullName: PFVR.AI.LeaderBehavior.attackPlayerDistance
  nameWithType: LeaderBehavior.attackPlayerDistance
- uid: PFVR.AI.LeaderBehavior.chasePlayer
  name: chasePlayer
  href: api/PFVR.AI.LeaderBehavior.html#PFVR_AI_LeaderBehavior_chasePlayer
  commentId: F:PFVR.AI.LeaderBehavior.chasePlayer
  fullName: PFVR.AI.LeaderBehavior.chasePlayer
  nameWithType: LeaderBehavior.chasePlayer
- uid: PFVR.AI.LeaderBehavior.GetPlayerMotor
  name: GetPlayerMotor()
  href: api/PFVR.AI.LeaderBehavior.html#PFVR_AI_LeaderBehavior_GetPlayerMotor
  commentId: M:PFVR.AI.LeaderBehavior.GetPlayerMotor
  fullName: PFVR.AI.LeaderBehavior.GetPlayerMotor()
  nameWithType: LeaderBehavior.GetPlayerMotor()
- uid: PFVR.AI.LeaderBehavior.GetPlayerMotor*
  name: GetPlayerMotor
  href: api/PFVR.AI.LeaderBehavior.html#PFVR_AI_LeaderBehavior_GetPlayerMotor_
  commentId: Overload:PFVR.AI.LeaderBehavior.GetPlayerMotor
  isSpec: "True"
  fullName: PFVR.AI.LeaderBehavior.GetPlayerMotor
  nameWithType: LeaderBehavior.GetPlayerMotor
- uid: PFVR.AI.MarsagliaGenerator
  name: MarsagliaGenerator
  href: api/PFVR.AI.MarsagliaGenerator.html
  commentId: T:PFVR.AI.MarsagliaGenerator
  fullName: PFVR.AI.MarsagliaGenerator
  nameWithType: MarsagliaGenerator
- uid: PFVR.AI.MarsagliaGenerator.Next
  name: Next()
  href: api/PFVR.AI.MarsagliaGenerator.html#PFVR_AI_MarsagliaGenerator_Next
  commentId: M:PFVR.AI.MarsagliaGenerator.Next
  fullName: PFVR.AI.MarsagliaGenerator.Next()
  nameWithType: MarsagliaGenerator.Next()
- uid: PFVR.AI.MarsagliaGenerator.Next*
  name: Next
  href: api/PFVR.AI.MarsagliaGenerator.html#PFVR_AI_MarsagliaGenerator_Next_
  commentId: Overload:PFVR.AI.MarsagliaGenerator.Next
  isSpec: "True"
  fullName: PFVR.AI.MarsagliaGenerator.Next
  nameWithType: MarsagliaGenerator.Next
- uid: PFVR.AI.MarsagliaGenerator.NextVector3
  name: NextVector3()
  href: api/PFVR.AI.MarsagliaGenerator.html#PFVR_AI_MarsagliaGenerator_NextVector3
  commentId: M:PFVR.AI.MarsagliaGenerator.NextVector3
  fullName: PFVR.AI.MarsagliaGenerator.NextVector3()
  nameWithType: MarsagliaGenerator.NextVector3()
- uid: PFVR.AI.MarsagliaGenerator.NextVector3*
  name: NextVector3
  href: api/PFVR.AI.MarsagliaGenerator.html#PFVR_AI_MarsagliaGenerator_NextVector3_
  commentId: Overload:PFVR.AI.MarsagliaGenerator.NextVector3
  isSpec: "True"
  fullName: PFVR.AI.MarsagliaGenerator.NextVector3
  nameWithType: MarsagliaGenerator.NextVector3
- uid: PFVR.Backend
  name: PFVR.Backend
  href: api/PFVR.Backend.html
  commentId: N:PFVR.Backend
  fullName: PFVR.Backend
  nameWithType: PFVR.Backend
- uid: PFVR.Backend.DebugScreen
  name: DebugScreen
  href: api/PFVR.Backend.DebugScreen.html
  commentId: T:PFVR.Backend.DebugScreen
  fullName: PFVR.Backend.DebugScreen
  nameWithType: DebugScreen
- uid: PFVR.Backend.GestureDataRecording
  name: GestureDataRecording
  href: api/PFVR.Backend.GestureDataRecording.html
  commentId: T:PFVR.Backend.GestureDataRecording
  fullName: PFVR.Backend.GestureDataRecording
  nameWithType: GestureDataRecording
- uid: PFVR.Backend.GestureDataRecording.CompileGestureSetZIP
  name: CompileGestureSetZIP()
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_CompileGestureSetZIP
  commentId: M:PFVR.Backend.GestureDataRecording.CompileGestureSetZIP
  fullName: PFVR.Backend.GestureDataRecording.CompileGestureSetZIP()
  nameWithType: GestureDataRecording.CompileGestureSetZIP()
- uid: PFVR.Backend.GestureDataRecording.CompileGestureSetZIP*
  name: CompileGestureSetZIP
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_CompileGestureSetZIP_
  commentId: Overload:PFVR.Backend.GestureDataRecording.CompileGestureSetZIP
  isSpec: "True"
  fullName: PFVR.Backend.GestureDataRecording.CompileGestureSetZIP
  nameWithType: GestureDataRecording.CompileGestureSetZIP
- uid: PFVR.Backend.GestureDataRecording.CreateGestureSetCSV
  name: CreateGestureSetCSV()
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_CreateGestureSetCSV
  commentId: M:PFVR.Backend.GestureDataRecording.CreateGestureSetCSV
  fullName: PFVR.Backend.GestureDataRecording.CreateGestureSetCSV()
  nameWithType: GestureDataRecording.CreateGestureSetCSV()
- uid: PFVR.Backend.GestureDataRecording.CreateGestureSetCSV*
  name: CreateGestureSetCSV
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_CreateGestureSetCSV_
  commentId: Overload:PFVR.Backend.GestureDataRecording.CreateGestureSetCSV
  isSpec: "True"
  fullName: PFVR.Backend.GestureDataRecording.CreateGestureSetCSV
  nameWithType: GestureDataRecording.CreateGestureSetCSV
- uid: PFVR.Backend.GestureDataRecording.RecordCurrentGesture
  name: RecordCurrentGesture()
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_RecordCurrentGesture
  commentId: M:PFVR.Backend.GestureDataRecording.RecordCurrentGesture
  fullName: PFVR.Backend.GestureDataRecording.RecordCurrentGesture()
  nameWithType: GestureDataRecording.RecordCurrentGesture()
- uid: PFVR.Backend.GestureDataRecording.RecordCurrentGesture*
  name: RecordCurrentGesture
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_RecordCurrentGesture_
  commentId: Overload:PFVR.Backend.GestureDataRecording.RecordCurrentGesture
  isSpec: "True"
  fullName: PFVR.Backend.GestureDataRecording.RecordCurrentGesture
  nameWithType: GestureDataRecording.RecordCurrentGesture
- uid: PFVR.Backend.GestureDataRecording.RecordCurrentGestureSet
  name: RecordCurrentGestureSet()
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_RecordCurrentGestureSet
  commentId: M:PFVR.Backend.GestureDataRecording.RecordCurrentGestureSet
  fullName: PFVR.Backend.GestureDataRecording.RecordCurrentGestureSet()
  nameWithType: GestureDataRecording.RecordCurrentGestureSet()
- uid: PFVR.Backend.GestureDataRecording.RecordCurrentGestureSet*
  name: RecordCurrentGestureSet
  href: api/PFVR.Backend.GestureDataRecording.html#PFVR_Backend_GestureDataRecording_RecordCurrentGestureSet_
  commentId: Overload:PFVR.Backend.GestureDataRecording.RecordCurrentGestureSet
  isSpec: "True"
  fullName: PFVR.Backend.GestureDataRecording.RecordCurrentGestureSet
  nameWithType: GestureDataRecording.RecordCurrentGestureSet
- uid: PFVR.Backend.GestureRecorder
  name: GestureRecorder
  href: api/PFVR.Backend.GestureRecorder.html
  commentId: T:PFVR.Backend.GestureRecorder
  fullName: PFVR.Backend.GestureRecorder
  nameWithType: GestureRecorder
- uid: PFVR.Backend.GestureRecorder.#ctor(PFVR.ScriptableObjects.GestureProfile,PFVR.ScriptableObjects.Gesture,System.Int32,TMPro.TextMeshProUGUI)
  name: GestureRecorder(GestureProfile, Gesture, Int32, TextMeshProUGUI)
  href: api/PFVR.Backend.GestureRecorder.html#PFVR_Backend_GestureRecorder__ctor_PFVR_ScriptableObjects_GestureProfile_PFVR_ScriptableObjects_Gesture_System_Int32_TMPro_TextMeshProUGUI_
  commentId: M:PFVR.Backend.GestureRecorder.#ctor(PFVR.ScriptableObjects.GestureProfile,PFVR.ScriptableObjects.Gesture,System.Int32,TMPro.TextMeshProUGUI)
  fullName: PFVR.Backend.GestureRecorder.GestureRecorder(PFVR.ScriptableObjects.GestureProfile, PFVR.ScriptableObjects.Gesture, System.Int32, TMPro.TextMeshProUGUI)
  nameWithType: GestureRecorder.GestureRecorder(GestureProfile, Gesture, Int32, TextMeshProUGUI)
- uid: PFVR.Backend.GestureRecorder.#ctor*
  name: GestureRecorder
  href: api/PFVR.Backend.GestureRecorder.html#PFVR_Backend_GestureRecorder__ctor_
  commentId: Overload:PFVR.Backend.GestureRecorder.#ctor
  isSpec: "True"
  fullName: PFVR.Backend.GestureRecorder.GestureRecorder
  nameWithType: GestureRecorder.GestureRecorder
- uid: PFVR.Backend.GestureRecorder.Abort
  name: Abort()
  href: api/PFVR.Backend.GestureRecorder.html#PFVR_Backend_GestureRecorder_Abort
  commentId: M:PFVR.Backend.GestureRecorder.Abort
  fullName: PFVR.Backend.GestureRecorder.Abort()
  nameWithType: GestureRecorder.Abort()
- uid: PFVR.Backend.GestureRecorder.Abort*
  name: Abort
  href: api/PFVR.Backend.GestureRecorder.html#PFVR_Backend_GestureRecorder_Abort_
  commentId: Overload:PFVR.Backend.GestureRecorder.Abort
  isSpec: "True"
  fullName: PFVR.Backend.GestureRecorder.Abort
  nameWithType: GestureRecorder.Abort
- uid: PFVR.Backend.GestureRecorder.Record
  name: Record()
  href: api/PFVR.Backend.GestureRecorder.html#PFVR_Backend_GestureRecorder_Record
  commentId: M:PFVR.Backend.GestureRecorder.Record
  fullName: PFVR.Backend.GestureRecorder.Record()
  nameWithType: GestureRecorder.Record()
- uid: PFVR.Backend.GestureRecorder.Record*
  name: Record
  href: api/PFVR.Backend.GestureRecorder.html#PFVR_Backend_GestureRecorder_Record_
  commentId: Overload:PFVR.Backend.GestureRecorder.Record
  isSpec: "True"
  fullName: PFVR.Backend.GestureRecorder.Record
  nameWithType: GestureRecorder.Record
- uid: PFVR.Backend.PreviewConfig
  name: PreviewConfig
  href: api/PFVR.Backend.PreviewConfig.html
  commentId: T:PFVR.Backend.PreviewConfig
  fullName: PFVR.Backend.PreviewConfig
  nameWithType: PreviewConfig
- uid: PFVR.Backend.RecognizerScreen
  name: RecognizerScreen
  href: api/PFVR.Backend.RecognizerScreen.html
  commentId: T:PFVR.Backend.RecognizerScreen
  fullName: PFVR.Backend.RecognizerScreen
  nameWithType: RecognizerScreen
- uid: PFVR.Backend.StatusScreen
  name: StatusScreen
  href: api/PFVR.Backend.StatusScreen.html
  commentId: T:PFVR.Backend.StatusScreen
  fullName: PFVR.Backend.StatusScreen
  nameWithType: StatusScreen
- uid: PFVR.Canvas
  name: PFVR.Canvas
  href: api/PFVR.Canvas.html
  commentId: N:PFVR.Canvas
  fullName: PFVR.Canvas
  nameWithType: PFVR.Canvas
- uid: PFVR.Canvas.BasicButton
  name: BasicButton
  href: api/PFVR.Canvas.BasicButton.html
  commentId: T:PFVR.Canvas.BasicButton
  fullName: PFVR.Canvas.BasicButton
  nameWithType: BasicButton
- uid: PFVR.Canvas.BasicButton.onClick
  name: onClick
  href: api/PFVR.Canvas.BasicButton.html#PFVR_Canvas_BasicButton_onClick
  commentId: P:PFVR.Canvas.BasicButton.onClick
  fullName: PFVR.Canvas.BasicButton.onClick
  nameWithType: BasicButton.onClick
- uid: PFVR.Canvas.BasicButton.onClick*
  name: onClick
  href: api/PFVR.Canvas.BasicButton.html#PFVR_Canvas_BasicButton_onClick_
  commentId: Overload:PFVR.Canvas.BasicButton.onClick
  isSpec: "True"
  fullName: PFVR.Canvas.BasicButton.onClick
  nameWithType: BasicButton.onClick
- uid: PFVR.Canvas.BasicButton.selected
  name: selected
  href: api/PFVR.Canvas.BasicButton.html#PFVR_Canvas_BasicButton_selected
  commentId: P:PFVR.Canvas.BasicButton.selected
  fullName: PFVR.Canvas.BasicButton.selected
  nameWithType: BasicButton.selected
- uid: PFVR.Canvas.BasicButton.selected*
  name: selected
  href: api/PFVR.Canvas.BasicButton.html#PFVR_Canvas_BasicButton_selected_
  commentId: Overload:PFVR.Canvas.BasicButton.selected
  isSpec: "True"
  fullName: PFVR.Canvas.BasicButton.selected
  nameWithType: BasicButton.selected
- uid: PFVR.Canvas.BasicButton.text
  name: text
  href: api/PFVR.Canvas.BasicButton.html#PFVR_Canvas_BasicButton_text
  commentId: P:PFVR.Canvas.BasicButton.text
  fullName: PFVR.Canvas.BasicButton.text
  nameWithType: BasicButton.text
- uid: PFVR.Canvas.BasicButton.text*
  name: text
  href: api/PFVR.Canvas.BasicButton.html#PFVR_Canvas_BasicButton_text_
  commentId: Overload:PFVR.Canvas.BasicButton.text
  isSpec: "True"
  fullName: PFVR.Canvas.BasicButton.text
  nameWithType: BasicButton.text
- uid: PFVR.Canvas.MainMenuHUD
  name: MainMenuHUD
  href: api/PFVR.Canvas.MainMenuHUD.html
  commentId: T:PFVR.Canvas.MainMenuHUD
  fullName: PFVR.Canvas.MainMenuHUD
  nameWithType: MainMenuHUD
- uid: PFVR.Canvas.PlayerHUD
  name: PlayerHUD
  href: api/PFVR.Canvas.PlayerHUD.html
  commentId: T:PFVR.Canvas.PlayerHUD
  fullName: PFVR.Canvas.PlayerHUD
  nameWithType: PlayerHUD
- uid: PFVR.Canvas.ScriptableObjectManager`1
  name: ScriptableObjectManager<T>
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html
  commentId: T:PFVR.Canvas.ScriptableObjectManager`1
  name.vb: ScriptableObjectManager(Of T)
  fullName: PFVR.Canvas.ScriptableObjectManager<T>
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T)
  nameWithType: ScriptableObjectManager<T>
  nameWithType.vb: ScriptableObjectManager(Of T)
- uid: PFVR.Canvas.ScriptableObjectManager`1.#ctor(UnityEngine.UI.LayoutGroup)
  name: ScriptableObjectManager(LayoutGroup)
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1__ctor_UnityEngine_UI_LayoutGroup_
  commentId: M:PFVR.Canvas.ScriptableObjectManager`1.#ctor(UnityEngine.UI.LayoutGroup)
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.ScriptableObjectManager(UnityEngine.UI.LayoutGroup)
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).ScriptableObjectManager(UnityEngine.UI.LayoutGroup)
  nameWithType: ScriptableObjectManager<T>.ScriptableObjectManager(LayoutGroup)
  nameWithType.vb: ScriptableObjectManager(Of T).ScriptableObjectManager(LayoutGroup)
- uid: PFVR.Canvas.ScriptableObjectManager`1.#ctor(UnityEngine.UI.LayoutGroup,`0[])
  name: ScriptableObjectManager(LayoutGroup, T[])
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1__ctor_UnityEngine_UI_LayoutGroup__0___
  commentId: M:PFVR.Canvas.ScriptableObjectManager`1.#ctor(UnityEngine.UI.LayoutGroup,`0[])
  name.vb: ScriptableObjectManager(LayoutGroup, T())
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.ScriptableObjectManager(UnityEngine.UI.LayoutGroup, T[])
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).ScriptableObjectManager(UnityEngine.UI.LayoutGroup, T())
  nameWithType: ScriptableObjectManager<T>.ScriptableObjectManager(LayoutGroup, T[])
  nameWithType.vb: ScriptableObjectManager(Of T).ScriptableObjectManager(LayoutGroup, T())
- uid: PFVR.Canvas.ScriptableObjectManager`1.#ctor*
  name: ScriptableObjectManager
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1__ctor_
  commentId: Overload:PFVR.Canvas.ScriptableObjectManager`1.#ctor
  isSpec: "True"
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.ScriptableObjectManager
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).ScriptableObjectManager
  nameWithType: ScriptableObjectManager<T>.ScriptableObjectManager
  nameWithType.vb: ScriptableObjectManager(Of T).ScriptableObjectManager
- uid: PFVR.Canvas.ScriptableObjectManager`1.AddClickAction(System.Action{`0,PFVR.Canvas.BasicButton})
  name: AddClickAction(Action<T, BasicButton>)
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_AddClickAction_System_Action__0_PFVR_Canvas_BasicButton__
  commentId: M:PFVR.Canvas.ScriptableObjectManager`1.AddClickAction(System.Action{`0,PFVR.Canvas.BasicButton})
  name.vb: AddClickAction(Action(Of T, BasicButton))
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.AddClickAction(System.Action<T, PFVR.Canvas.BasicButton>)
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).AddClickAction(System.Action(Of T, PFVR.Canvas.BasicButton))
  nameWithType: ScriptableObjectManager<T>.AddClickAction(Action<T, BasicButton>)
  nameWithType.vb: ScriptableObjectManager(Of T).AddClickAction(Action(Of T, BasicButton))
- uid: PFVR.Canvas.ScriptableObjectManager`1.AddClickAction*
  name: AddClickAction
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_AddClickAction_
  commentId: Overload:PFVR.Canvas.ScriptableObjectManager`1.AddClickAction
  isSpec: "True"
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.AddClickAction
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).AddClickAction
  nameWithType: ScriptableObjectManager<T>.AddClickAction
  nameWithType.vb: ScriptableObjectManager(Of T).AddClickAction
- uid: PFVR.Canvas.ScriptableObjectManager`1.elements
  name: elements
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_elements
  commentId: P:PFVR.Canvas.ScriptableObjectManager`1.elements
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.elements
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).elements
  nameWithType: ScriptableObjectManager<T>.elements
  nameWithType.vb: ScriptableObjectManager(Of T).elements
- uid: PFVR.Canvas.ScriptableObjectManager`1.elements*
  name: elements
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_elements_
  commentId: Overload:PFVR.Canvas.ScriptableObjectManager`1.elements
  isSpec: "True"
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.elements
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).elements
  nameWithType: ScriptableObjectManager<T>.elements
  nameWithType.vb: ScriptableObjectManager(Of T).elements
- uid: PFVR.Canvas.ScriptableObjectManager`1.ForAll(System.Action{`0,PFVR.Canvas.BasicButton})
  name: ForAll(Action<T, BasicButton>)
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_ForAll_System_Action__0_PFVR_Canvas_BasicButton__
  commentId: M:PFVR.Canvas.ScriptableObjectManager`1.ForAll(System.Action{`0,PFVR.Canvas.BasicButton})
  name.vb: ForAll(Action(Of T, BasicButton))
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.ForAll(System.Action<T, PFVR.Canvas.BasicButton>)
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).ForAll(System.Action(Of T, PFVR.Canvas.BasicButton))
  nameWithType: ScriptableObjectManager<T>.ForAll(Action<T, BasicButton>)
  nameWithType.vb: ScriptableObjectManager(Of T).ForAll(Action(Of T, BasicButton))
- uid: PFVR.Canvas.ScriptableObjectManager`1.ForAll*
  name: ForAll
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_ForAll_
  commentId: Overload:PFVR.Canvas.ScriptableObjectManager`1.ForAll
  isSpec: "True"
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.ForAll
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).ForAll
  nameWithType: ScriptableObjectManager<T>.ForAll
  nameWithType.vb: ScriptableObjectManager(Of T).ForAll
- uid: PFVR.Canvas.ScriptableObjectManager`1.OnlyShow(System.Func{`0,System.Boolean})
  name: OnlyShow(Func<T, Boolean>)
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_OnlyShow_System_Func__0_System_Boolean__
  commentId: M:PFVR.Canvas.ScriptableObjectManager`1.OnlyShow(System.Func{`0,System.Boolean})
  name.vb: OnlyShow(Func(Of T, Boolean))
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.OnlyShow(System.Func<T, System.Boolean>)
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).OnlyShow(System.Func(Of T, System.Boolean))
  nameWithType: ScriptableObjectManager<T>.OnlyShow(Func<T, Boolean>)
  nameWithType.vb: ScriptableObjectManager(Of T).OnlyShow(Func(Of T, Boolean))
- uid: PFVR.Canvas.ScriptableObjectManager`1.OnlyShow*
  name: OnlyShow
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_OnlyShow_
  commentId: Overload:PFVR.Canvas.ScriptableObjectManager`1.OnlyShow
  isSpec: "True"
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.OnlyShow
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).OnlyShow
  nameWithType: ScriptableObjectManager<T>.OnlyShow
  nameWithType.vb: ScriptableObjectManager(Of T).OnlyShow
- uid: PFVR.Canvas.ScriptableObjectManager`1.SelectObject(`0)
  name: SelectObject(T)
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_SelectObject__0_
  commentId: M:PFVR.Canvas.ScriptableObjectManager`1.SelectObject(`0)
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.SelectObject(T)
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).SelectObject(T)
  nameWithType: ScriptableObjectManager<T>.SelectObject(T)
  nameWithType.vb: ScriptableObjectManager(Of T).SelectObject(T)
- uid: PFVR.Canvas.ScriptableObjectManager`1.SelectObject*
  name: SelectObject
  href: api/PFVR.Canvas.ScriptableObjectManager-1.html#PFVR_Canvas_ScriptableObjectManager_1_SelectObject_
  commentId: Overload:PFVR.Canvas.ScriptableObjectManager`1.SelectObject
  isSpec: "True"
  fullName: PFVR.Canvas.ScriptableObjectManager<T>.SelectObject
  fullName.vb: PFVR.Canvas.ScriptableObjectManager(Of T).SelectObject
  nameWithType: ScriptableObjectManager<T>.SelectObject
  nameWithType.vb: ScriptableObjectManager(Of T).SelectObject
- uid: PFVR.DataModels
  name: PFVR.DataModels
  href: api/PFVR.DataModels.html
  commentId: N:PFVR.DataModels
  fullName: PFVR.DataModels
  nameWithType: PFVR.DataModels
- uid: PFVR.DataModels.GestureModel
  name: GestureModel
  href: api/PFVR.DataModels.GestureModel.html
  commentId: T:PFVR.DataModels.GestureModel
  fullName: PFVR.DataModels.GestureModel
  nameWithType: GestureModel
- uid: PFVR.DataModels.GestureModel.gesture
  name: gesture
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_gesture
  commentId: P:PFVR.DataModels.GestureModel.gesture
  fullName: PFVR.DataModels.GestureModel.gesture
  nameWithType: GestureModel.gesture
- uid: PFVR.DataModels.GestureModel.gesture*
  name: gesture
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_gesture_
  commentId: Overload:PFVR.DataModels.GestureModel.gesture
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.gesture
  nameWithType: GestureModel.gesture
- uid: PFVR.DataModels.GestureModel.indexMedial
  name: indexMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_indexMedial
  commentId: P:PFVR.DataModels.GestureModel.indexMedial
  fullName: PFVR.DataModels.GestureModel.indexMedial
  nameWithType: GestureModel.indexMedial
- uid: PFVR.DataModels.GestureModel.indexMedial*
  name: indexMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_indexMedial_
  commentId: Overload:PFVR.DataModels.GestureModel.indexMedial
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.indexMedial
  nameWithType: GestureModel.indexMedial
- uid: PFVR.DataModels.GestureModel.indexProximal
  name: indexProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_indexProximal
  commentId: P:PFVR.DataModels.GestureModel.indexProximal
  fullName: PFVR.DataModels.GestureModel.indexProximal
  nameWithType: GestureModel.indexProximal
- uid: PFVR.DataModels.GestureModel.indexProximal*
  name: indexProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_indexProximal_
  commentId: Overload:PFVR.DataModels.GestureModel.indexProximal
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.indexProximal
  nameWithType: GestureModel.indexProximal
- uid: PFVR.DataModels.GestureModel.middleMedial
  name: middleMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_middleMedial
  commentId: P:PFVR.DataModels.GestureModel.middleMedial
  fullName: PFVR.DataModels.GestureModel.middleMedial
  nameWithType: GestureModel.middleMedial
- uid: PFVR.DataModels.GestureModel.middleMedial*
  name: middleMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_middleMedial_
  commentId: Overload:PFVR.DataModels.GestureModel.middleMedial
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.middleMedial
  nameWithType: GestureModel.middleMedial
- uid: PFVR.DataModels.GestureModel.middleProximal
  name: middleProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_middleProximal
  commentId: P:PFVR.DataModels.GestureModel.middleProximal
  fullName: PFVR.DataModels.GestureModel.middleProximal
  nameWithType: GestureModel.middleProximal
- uid: PFVR.DataModels.GestureModel.middleProximal*
  name: middleProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_middleProximal_
  commentId: Overload:PFVR.DataModels.GestureModel.middleProximal
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.middleProximal
  nameWithType: GestureModel.middleProximal
- uid: PFVR.DataModels.GestureModel.pinkyMedial
  name: pinkyMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_pinkyMedial
  commentId: P:PFVR.DataModels.GestureModel.pinkyMedial
  fullName: PFVR.DataModels.GestureModel.pinkyMedial
  nameWithType: GestureModel.pinkyMedial
- uid: PFVR.DataModels.GestureModel.pinkyMedial*
  name: pinkyMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_pinkyMedial_
  commentId: Overload:PFVR.DataModels.GestureModel.pinkyMedial
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.pinkyMedial
  nameWithType: GestureModel.pinkyMedial
- uid: PFVR.DataModels.GestureModel.pinkyProximal
  name: pinkyProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_pinkyProximal
  commentId: P:PFVR.DataModels.GestureModel.pinkyProximal
  fullName: PFVR.DataModels.GestureModel.pinkyProximal
  nameWithType: GestureModel.pinkyProximal
- uid: PFVR.DataModels.GestureModel.pinkyProximal*
  name: pinkyProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_pinkyProximal_
  commentId: Overload:PFVR.DataModels.GestureModel.pinkyProximal
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.pinkyProximal
  nameWithType: GestureModel.pinkyProximal
- uid: PFVR.DataModels.GestureModel.ringMedial
  name: ringMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_ringMedial
  commentId: P:PFVR.DataModels.GestureModel.ringMedial
  fullName: PFVR.DataModels.GestureModel.ringMedial
  nameWithType: GestureModel.ringMedial
- uid: PFVR.DataModels.GestureModel.ringMedial*
  name: ringMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_ringMedial_
  commentId: Overload:PFVR.DataModels.GestureModel.ringMedial
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.ringMedial
  nameWithType: GestureModel.ringMedial
- uid: PFVR.DataModels.GestureModel.ringProximal
  name: ringProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_ringProximal
  commentId: P:PFVR.DataModels.GestureModel.ringProximal
  fullName: PFVR.DataModels.GestureModel.ringProximal
  nameWithType: GestureModel.ringProximal
- uid: PFVR.DataModels.GestureModel.ringProximal*
  name: ringProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_ringProximal_
  commentId: Overload:PFVR.DataModels.GestureModel.ringProximal
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.ringProximal
  nameWithType: GestureModel.ringProximal
- uid: PFVR.DataModels.GestureModel.thumbMedial
  name: thumbMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_thumbMedial
  commentId: P:PFVR.DataModels.GestureModel.thumbMedial
  fullName: PFVR.DataModels.GestureModel.thumbMedial
  nameWithType: GestureModel.thumbMedial
- uid: PFVR.DataModels.GestureModel.thumbMedial*
  name: thumbMedial
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_thumbMedial_
  commentId: Overload:PFVR.DataModels.GestureModel.thumbMedial
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.thumbMedial
  nameWithType: GestureModel.thumbMedial
- uid: PFVR.DataModels.GestureModel.thumbProximal
  name: thumbProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_thumbProximal
  commentId: P:PFVR.DataModels.GestureModel.thumbProximal
  fullName: PFVR.DataModels.GestureModel.thumbProximal
  nameWithType: GestureModel.thumbProximal
- uid: PFVR.DataModels.GestureModel.thumbProximal*
  name: thumbProximal
  href: api/PFVR.DataModels.GestureModel.html#PFVR_DataModels_GestureModel_thumbProximal_
  commentId: Overload:PFVR.DataModels.GestureModel.thumbProximal
  isSpec: "True"
  fullName: PFVR.DataModels.GestureModel.thumbProximal
  nameWithType: GestureModel.thumbProximal
- uid: PFVR.DataModels.GestureRecognizer
  name: GestureRecognizer
  href: api/PFVR.DataModels.GestureRecognizer.html
  commentId: T:PFVR.DataModels.GestureRecognizer
  fullName: PFVR.DataModels.GestureRecognizer
  nameWithType: GestureRecognizer
- uid: PFVR.DataModels.GestureRecognizer.#ctor(System.String)
  name: GestureRecognizer(String)
  href: api/PFVR.DataModels.GestureRecognizer.html#PFVR_DataModels_GestureRecognizer__ctor_System_String_
  commentId: M:PFVR.DataModels.GestureRecognizer.#ctor(System.String)
  fullName: PFVR.DataModels.GestureRecognizer.GestureRecognizer(System.String)
  nameWithType: GestureRecognizer.GestureRecognizer(String)
- uid: PFVR.DataModels.GestureRecognizer.#ctor*
  name: GestureRecognizer
  href: api/PFVR.DataModels.GestureRecognizer.html#PFVR_DataModels_GestureRecognizer__ctor_
  commentId: Overload:PFVR.DataModels.GestureRecognizer.#ctor
  isSpec: "True"
  fullName: PFVR.DataModels.GestureRecognizer.GestureRecognizer
  nameWithType: GestureRecognizer.GestureRecognizer
- uid: PFVR.DataModels.GestureRecognizer.Guess(PFVR.DataModels.GestureModel)
  name: Guess(GestureModel)
  href: api/PFVR.DataModels.GestureRecognizer.html#PFVR_DataModels_GestureRecognizer_Guess_PFVR_DataModels_GestureModel_
  commentId: M:PFVR.DataModels.GestureRecognizer.Guess(PFVR.DataModels.GestureModel)
  fullName: PFVR.DataModels.GestureRecognizer.Guess(PFVR.DataModels.GestureModel)
  nameWithType: GestureRecognizer.Guess(GestureModel)
- uid: PFVR.DataModels.GestureRecognizer.Guess*
  name: Guess
  href: api/PFVR.DataModels.GestureRecognizer.html#PFVR_DataModels_GestureRecognizer_Guess_
  commentId: Overload:PFVR.DataModels.GestureRecognizer.Guess
  isSpec: "True"
  fullName: PFVR.DataModels.GestureRecognizer.Guess
  nameWithType: GestureRecognizer.Guess
- uid: PFVR.DataModels.GloveData
  name: GloveData
  href: api/PFVR.DataModels.GloveData.html
  commentId: T:PFVR.DataModels.GloveData
  fullName: PFVR.DataModels.GloveData
  nameWithType: GloveData
- uid: PFVR.DataModels.GloveData.device
  name: device
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_device
  commentId: F:PFVR.DataModels.GloveData.device
  fullName: PFVR.DataModels.GloveData.device
  nameWithType: GloveData.device
- uid: PFVR.DataModels.GloveData.indexMedial
  name: indexMedial
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_indexMedial
  commentId: F:PFVR.DataModels.GloveData.indexMedial
  fullName: PFVR.DataModels.GloveData.indexMedial
  nameWithType: GloveData.indexMedial
- uid: PFVR.DataModels.GloveData.indexProximal
  name: indexProximal
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_indexProximal
  commentId: F:PFVR.DataModels.GloveData.indexProximal
  fullName: PFVR.DataModels.GloveData.indexProximal
  nameWithType: GloveData.indexProximal
- uid: PFVR.DataModels.GloveData.laterality
  name: laterality
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_laterality
  commentId: F:PFVR.DataModels.GloveData.laterality
  fullName: PFVR.DataModels.GloveData.laterality
  nameWithType: GloveData.laterality
- uid: PFVR.DataModels.GloveData.middleMedial
  name: middleMedial
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_middleMedial
  commentId: F:PFVR.DataModels.GloveData.middleMedial
  fullName: PFVR.DataModels.GloveData.middleMedial
  nameWithType: GloveData.middleMedial
- uid: PFVR.DataModels.GloveData.middleProximal
  name: middleProximal
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_middleProximal
  commentId: F:PFVR.DataModels.GloveData.middleProximal
  fullName: PFVR.DataModels.GloveData.middleProximal
  nameWithType: GloveData.middleProximal
- uid: PFVR.DataModels.GloveData.pinkyMedial
  name: pinkyMedial
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_pinkyMedial
  commentId: F:PFVR.DataModels.GloveData.pinkyMedial
  fullName: PFVR.DataModels.GloveData.pinkyMedial
  nameWithType: GloveData.pinkyMedial
- uid: PFVR.DataModels.GloveData.pinkyProximal
  name: pinkyProximal
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_pinkyProximal
  commentId: F:PFVR.DataModels.GloveData.pinkyProximal
  fullName: PFVR.DataModels.GloveData.pinkyProximal
  nameWithType: GloveData.pinkyProximal
- uid: PFVR.DataModels.GloveData.ringMedial
  name: ringMedial
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_ringMedial
  commentId: F:PFVR.DataModels.GloveData.ringMedial
  fullName: PFVR.DataModels.GloveData.ringMedial
  nameWithType: GloveData.ringMedial
- uid: PFVR.DataModels.GloveData.ringProximal
  name: ringProximal
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_ringProximal
  commentId: F:PFVR.DataModels.GloveData.ringProximal
  fullName: PFVR.DataModels.GloveData.ringProximal
  nameWithType: GloveData.ringProximal
- uid: PFVR.DataModels.GloveData.thumbMedial
  name: thumbMedial
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_thumbMedial
  commentId: F:PFVR.DataModels.GloveData.thumbMedial
  fullName: PFVR.DataModels.GloveData.thumbMedial
  nameWithType: GloveData.thumbMedial
- uid: PFVR.DataModels.GloveData.thumbProximal
  name: thumbProximal
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_thumbProximal
  commentId: F:PFVR.DataModels.GloveData.thumbProximal
  fullName: PFVR.DataModels.GloveData.thumbProximal
  nameWithType: GloveData.thumbProximal
- uid: PFVR.DataModels.GloveData.ToGestureModel
  name: ToGestureModel()
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_ToGestureModel
  commentId: M:PFVR.DataModels.GloveData.ToGestureModel
  fullName: PFVR.DataModels.GloveData.ToGestureModel()
  nameWithType: GloveData.ToGestureModel()
- uid: PFVR.DataModels.GloveData.ToGestureModel*
  name: ToGestureModel
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_ToGestureModel_
  commentId: Overload:PFVR.DataModels.GloveData.ToGestureModel
  isSpec: "True"
  fullName: PFVR.DataModels.GloveData.ToGestureModel
  nameWithType: GloveData.ToGestureModel
- uid: PFVR.DataModels.GloveData.tracker
  name: tracker
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_tracker
  commentId: F:PFVR.DataModels.GloveData.tracker
  fullName: PFVR.DataModels.GloveData.tracker
  nameWithType: GloveData.tracker
- uid: PFVR.DataModels.GloveData.wrist
  name: wrist
  href: api/PFVR.DataModels.GloveData.html#PFVR_DataModels_GloveData_wrist
  commentId: F:PFVR.DataModels.GloveData.wrist
  fullName: PFVR.DataModels.GloveData.wrist
  nameWithType: GloveData.wrist
- uid: PFVR.DataModels.ModelMerger
  name: ModelMerger
  href: api/PFVR.DataModels.ModelMerger.html
  commentId: T:PFVR.DataModels.ModelMerger
  fullName: PFVR.DataModels.ModelMerger
  nameWithType: ModelMerger
- uid: PFVR.DataModels.ModelMerger.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name: ModelMerger(IEnumerable<String>)
  href: api/PFVR.DataModels.ModelMerger.html#PFVR_DataModels_ModelMerger__ctor_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:PFVR.DataModels.ModelMerger.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name.vb: ModelMerger(IEnumerable(Of String))
  fullName: PFVR.DataModels.ModelMerger.ModelMerger(System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: PFVR.DataModels.ModelMerger.ModelMerger(System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: ModelMerger.ModelMerger(IEnumerable<String>)
  nameWithType.vb: ModelMerger.ModelMerger(IEnumerable(Of String))
- uid: PFVR.DataModels.ModelMerger.#ctor*
  name: ModelMerger
  href: api/PFVR.DataModels.ModelMerger.html#PFVR_DataModels_ModelMerger__ctor_
  commentId: Overload:PFVR.DataModels.ModelMerger.#ctor
  isSpec: "True"
  fullName: PFVR.DataModels.ModelMerger.ModelMerger
  nameWithType: ModelMerger.ModelMerger
- uid: PFVR.DataModels.ModelMerger.Put(System.String)
  name: Put(String)
  href: api/PFVR.DataModels.ModelMerger.html#PFVR_DataModels_ModelMerger_Put_System_String_
  commentId: M:PFVR.DataModels.ModelMerger.Put(System.String)
  fullName: PFVR.DataModels.ModelMerger.Put(System.String)
  nameWithType: ModelMerger.Put(String)
- uid: PFVR.DataModels.ModelMerger.Put*
  name: Put
  href: api/PFVR.DataModels.ModelMerger.html#PFVR_DataModels_ModelMerger_Put_
  commentId: Overload:PFVR.DataModels.ModelMerger.Put
  isSpec: "True"
  fullName: PFVR.DataModels.ModelMerger.Put
  nameWithType: ModelMerger.Put
- uid: PFVR.DataModels.ModelWriter`1
  name: ModelWriter<T>
  href: api/PFVR.DataModels.ModelWriter-1.html
  commentId: T:PFVR.DataModels.ModelWriter`1
  name.vb: ModelWriter(Of T)
  fullName: PFVR.DataModels.ModelWriter<T>
  fullName.vb: PFVR.DataModels.ModelWriter(Of T)
  nameWithType: ModelWriter<T>
  nameWithType.vb: ModelWriter(Of T)
- uid: PFVR.DataModels.ModelWriter`1.#ctor(System.String)
  name: ModelWriter(String)
  href: api/PFVR.DataModels.ModelWriter-1.html#PFVR_DataModels_ModelWriter_1__ctor_System_String_
  commentId: M:PFVR.DataModels.ModelWriter`1.#ctor(System.String)
  fullName: PFVR.DataModels.ModelWriter<T>.ModelWriter(System.String)
  fullName.vb: PFVR.DataModels.ModelWriter(Of T).ModelWriter(System.String)
  nameWithType: ModelWriter<T>.ModelWriter(String)
  nameWithType.vb: ModelWriter(Of T).ModelWriter(String)
- uid: PFVR.DataModels.ModelWriter`1.#ctor*
  name: ModelWriter
  href: api/PFVR.DataModels.ModelWriter-1.html#PFVR_DataModels_ModelWriter_1__ctor_
  commentId: Overload:PFVR.DataModels.ModelWriter`1.#ctor
  isSpec: "True"
  fullName: PFVR.DataModels.ModelWriter<T>.ModelWriter
  fullName.vb: PFVR.DataModels.ModelWriter(Of T).ModelWriter
  nameWithType: ModelWriter<T>.ModelWriter
  nameWithType.vb: ModelWriter(Of T).ModelWriter
- uid: PFVR.DataModels.ModelWriter`1.Append(`0)
  name: Append(T)
  href: api/PFVR.DataModels.ModelWriter-1.html#PFVR_DataModels_ModelWriter_1_Append__0_
  commentId: M:PFVR.DataModels.ModelWriter`1.Append(`0)
  fullName: PFVR.DataModels.ModelWriter<T>.Append(T)
  fullName.vb: PFVR.DataModels.ModelWriter(Of T).Append(T)
  nameWithType: ModelWriter<T>.Append(T)
  nameWithType.vb: ModelWriter(Of T).Append(T)
- uid: PFVR.DataModels.ModelWriter`1.Append*
  name: Append
  href: api/PFVR.DataModels.ModelWriter-1.html#PFVR_DataModels_ModelWriter_1_Append_
  commentId: Overload:PFVR.DataModels.ModelWriter`1.Append
  isSpec: "True"
  fullName: PFVR.DataModels.ModelWriter<T>.Append
  fullName.vb: PFVR.DataModels.ModelWriter(Of T).Append
  nameWithType: ModelWriter<T>.Append
  nameWithType.vb: ModelWriter(Of T).Append
- uid: PFVR.DataModels.ModelWriter`1.Finish
  name: Finish()
  href: api/PFVR.DataModels.ModelWriter-1.html#PFVR_DataModels_ModelWriter_1_Finish
  commentId: M:PFVR.DataModels.ModelWriter`1.Finish
  fullName: PFVR.DataModels.ModelWriter<T>.Finish()
  fullName.vb: PFVR.DataModels.ModelWriter(Of T).Finish()
  nameWithType: ModelWriter<T>.Finish()
  nameWithType.vb: ModelWriter(Of T).Finish()
- uid: PFVR.DataModels.ModelWriter`1.Finish*
  name: Finish
  href: api/PFVR.DataModels.ModelWriter-1.html#PFVR_DataModels_ModelWriter_1_Finish_
  commentId: Overload:PFVR.DataModels.ModelWriter`1.Finish
  isSpec: "True"
  fullName: PFVR.DataModels.ModelWriter<T>.Finish
  fullName.vb: PFVR.DataModels.ModelWriter(Of T).Finish
  nameWithType: ModelWriter<T>.Finish
  nameWithType.vb: ModelWriter(Of T).Finish
- uid: PFVR.DataModels.StringPrediction
  name: StringPrediction
  href: api/PFVR.DataModels.StringPrediction.html
  commentId: T:PFVR.DataModels.StringPrediction
  fullName: PFVR.DataModels.StringPrediction
  nameWithType: StringPrediction
- uid: PFVR.DataModels.StringPrediction.Prediction
  name: Prediction
  href: api/PFVR.DataModels.StringPrediction.html#PFVR_DataModels_StringPrediction_Prediction
  commentId: P:PFVR.DataModels.StringPrediction.Prediction
  fullName: PFVR.DataModels.StringPrediction.Prediction
  nameWithType: StringPrediction.Prediction
- uid: PFVR.DataModels.StringPrediction.Prediction*
  name: Prediction
  href: api/PFVR.DataModels.StringPrediction.html#PFVR_DataModels_StringPrediction_Prediction_
  commentId: Overload:PFVR.DataModels.StringPrediction.Prediction
  isSpec: "True"
  fullName: PFVR.DataModels.StringPrediction.Prediction
  nameWithType: StringPrediction.Prediction
- uid: PFVR.DataModels.StringPrediction.Score
  name: Score
  href: api/PFVR.DataModels.StringPrediction.html#PFVR_DataModels_StringPrediction_Score
  commentId: P:PFVR.DataModels.StringPrediction.Score
  fullName: PFVR.DataModels.StringPrediction.Score
  nameWithType: StringPrediction.Score
- uid: PFVR.DataModels.StringPrediction.Score*
  name: Score
  href: api/PFVR.DataModels.StringPrediction.html#PFVR_DataModels_StringPrediction_Score_
  commentId: Overload:PFVR.DataModels.StringPrediction.Score
  isSpec: "True"
  fullName: PFVR.DataModels.StringPrediction.Score
  nameWithType: StringPrediction.Score
- uid: PFVR.Disaster
  name: PFVR.Disaster
  href: api/PFVR.Disaster.html
  commentId: N:PFVR.Disaster
  fullName: PFVR.Disaster
  nameWithType: PFVR.Disaster
- uid: PFVR.Disaster.ObjectCannon
  name: ObjectCannon
  href: api/PFVR.Disaster.ObjectCannon.html
  commentId: T:PFVR.Disaster.ObjectCannon
  fullName: PFVR.Disaster.ObjectCannon
  nameWithType: ObjectCannon
- uid: PFVR.Environment
  name: PFVR.Environment
  href: api/PFVR.Environment.html
  commentId: N:PFVR.Environment
  fullName: PFVR.Environment
  nameWithType: PFVR.Environment
- uid: PFVR.Environment.CoinBehaviour
  name: CoinBehaviour
  href: api/PFVR.Environment.CoinBehaviour.html
  commentId: T:PFVR.Environment.CoinBehaviour
  fullName: PFVR.Environment.CoinBehaviour
  nameWithType: CoinBehaviour
- uid: PFVR.Environment.LevelObject
  name: LevelObject
  href: api/PFVR.Environment.LevelObject.html
  commentId: T:PFVR.Environment.LevelObject
  fullName: PFVR.Environment.LevelObject
  nameWithType: LevelObject
- uid: PFVR.Environment.LevelObject.waterPlaneObjectName
  name: waterPlaneObjectName
  href: api/PFVR.Environment.LevelObject.html#PFVR_Environment_LevelObject_waterPlaneObjectName
  commentId: F:PFVR.Environment.LevelObject.waterPlaneObjectName
  fullName: PFVR.Environment.LevelObject.waterPlaneObjectName
  nameWithType: LevelObject.waterPlaneObjectName
- uid: PFVR.Environment.LevelObject.waterPlaneSaveLocation
  name: waterPlaneSaveLocation
  href: api/PFVR.Environment.LevelObject.html#PFVR_Environment_LevelObject_waterPlaneSaveLocation
  commentId: F:PFVR.Environment.LevelObject.waterPlaneSaveLocation
  fullName: PFVR.Environment.LevelObject.waterPlaneSaveLocation
  nameWithType: LevelObject.waterPlaneSaveLocation
- uid: PFVR.Environment.Magnetic
  name: Magnetic
  href: api/PFVR.Environment.Magnetic.html
  commentId: T:PFVR.Environment.Magnetic
  fullName: PFVR.Environment.Magnetic
  nameWithType: Magnetic
- uid: PFVR.Events
  name: PFVR.Events
  href: api/PFVR.Events.html
  commentId: N:PFVR.Events
  fullName: PFVR.Events
  nameWithType: PFVR.Events
- uid: PFVR.Events.GameEvent
  name: GameEvent
  href: api/PFVR.Events.GameEvent.html
  commentId: T:PFVR.Events.GameEvent
  fullName: PFVR.Events.GameEvent
  nameWithType: GameEvent
- uid: PFVR.Events.GameEvent.source
  name: source
  href: api/PFVR.Events.GameEvent.html#PFVR_Events_GameEvent_source
  commentId: P:PFVR.Events.GameEvent.source
  fullName: PFVR.Events.GameEvent.source
  nameWithType: GameEvent.source
- uid: PFVR.Events.GameEvent.source*
  name: source
  href: api/PFVR.Events.GameEvent.html#PFVR_Events_GameEvent_source_
  commentId: Overload:PFVR.Events.GameEvent.source
  isSpec: "True"
  fullName: PFVR.Events.GameEvent.source
  nameWithType: GameEvent.source
- uid: PFVR.Events.GameEvent.timestamp
  name: timestamp
  href: api/PFVR.Events.GameEvent.html#PFVR_Events_GameEvent_timestamp
  commentId: P:PFVR.Events.GameEvent.timestamp
  fullName: PFVR.Events.GameEvent.timestamp
  nameWithType: GameEvent.timestamp
- uid: PFVR.Events.GameEvent.timestamp*
  name: timestamp
  href: api/PFVR.Events.GameEvent.html#PFVR_Events_GameEvent_timestamp_
  commentId: Overload:PFVR.Events.GameEvent.timestamp
  isSpec: "True"
  fullName: PFVR.Events.GameEvent.timestamp
  nameWithType: GameEvent.timestamp
- uid: PFVR.Events.GameEvent.type
  name: type
  href: api/PFVR.Events.GameEvent.html#PFVR_Events_GameEvent_type
  commentId: P:PFVR.Events.GameEvent.type
  fullName: PFVR.Events.GameEvent.type
  nameWithType: GameEvent.type
- uid: PFVR.Events.GameEvent.type*
  name: type
  href: api/PFVR.Events.GameEvent.html#PFVR_Events_GameEvent_type_
  commentId: Overload:PFVR.Events.GameEvent.type
  isSpec: "True"
  fullName: PFVR.Events.GameEvent.type
  nameWithType: GameEvent.type
- uid: PFVR.Events.GameEventListener
  name: GameEventListener
  href: api/PFVR.Events.GameEventListener.html
  commentId: T:PFVR.Events.GameEventListener
  fullName: PFVR.Events.GameEventListener
  nameWithType: GameEventListener
- uid: PFVR.Events.GameEventResponse
  name: GameEventResponse
  href: api/PFVR.Events.GameEventResponse.html
  commentId: T:PFVR.Events.GameEventResponse
  fullName: PFVR.Events.GameEventResponse
  nameWithType: GameEventResponse
- uid: PFVR.Events.GameEventSource
  name: GameEventSource
  href: api/PFVR.Events.GameEventSource.html
  commentId: T:PFVR.Events.GameEventSource
  fullName: PFVR.Events.GameEventSource
  nameWithType: GameEventSource
- uid: PFVR.Events.GameEventSource.Raise(PFVR.Events.GameEventType)
  name: Raise(GameEventType)
  href: api/PFVR.Events.GameEventSource.html#PFVR_Events_GameEventSource_Raise_PFVR_Events_GameEventType_
  commentId: M:PFVR.Events.GameEventSource.Raise(PFVR.Events.GameEventType)
  fullName: PFVR.Events.GameEventSource.Raise(PFVR.Events.GameEventType)
  nameWithType: GameEventSource.Raise(GameEventType)
- uid: PFVR.Events.GameEventSource.Raise*
  name: Raise
  href: api/PFVR.Events.GameEventSource.html#PFVR_Events_GameEventSource_Raise_
  commentId: Overload:PFVR.Events.GameEventSource.Raise
  isSpec: "True"
  fullName: PFVR.Events.GameEventSource.Raise
  nameWithType: GameEventSource.Raise
- uid: PFVR.Events.GameEventType
  name: GameEventType
  href: api/PFVR.Events.GameEventType.html
  commentId: T:PFVR.Events.GameEventType
  fullName: PFVR.Events.GameEventType
  nameWithType: GameEventType
- uid: PFVR.Events.GameEventType.CoinCollected
  name: CoinCollected
  href: api/PFVR.Events.GameEventType.html#PFVR_Events_GameEventType_CoinCollected
  commentId: F:PFVR.Events.GameEventType.CoinCollected
  fullName: PFVR.Events.GameEventType.CoinCollected
  nameWithType: GameEventType.CoinCollected
- uid: PFVR.Events.GameEventType.PlayerHpChanged
  name: PlayerHpChanged
  href: api/PFVR.Events.GameEventType.html#PFVR_Events_GameEventType_PlayerHpChanged
  commentId: F:PFVR.Events.GameEventType.PlayerHpChanged
  fullName: PFVR.Events.GameEventType.PlayerHpChanged
  nameWithType: GameEventType.PlayerHpChanged
- uid: PFVR.Events.GameEventType.PowerUpCollected
  name: PowerUpCollected
  href: api/PFVR.Events.GameEventType.html#PFVR_Events_GameEventType_PowerUpCollected
  commentId: F:PFVR.Events.GameEventType.PowerUpCollected
  fullName: PFVR.Events.GameEventType.PowerUpCollected
  nameWithType: GameEventType.PowerUpCollected
- uid: PFVR.Events.GameEventTypeExtensions
  name: GameEventTypeExtensions
  href: api/PFVR.Events.GameEventTypeExtensions.html
  commentId: T:PFVR.Events.GameEventTypeExtensions
  fullName: PFVR.Events.GameEventTypeExtensions
  nameWithType: GameEventTypeExtensions
- uid: PFVR.Events.GameEventTypeExtensions.AddEventListener(PFVR.Events.GameEventType,PFVR.Events.GameEventResponse)
  name: AddEventListener(GameEventType, GameEventResponse)
  href: api/PFVR.Events.GameEventTypeExtensions.html#PFVR_Events_GameEventTypeExtensions_AddEventListener_PFVR_Events_GameEventType_PFVR_Events_GameEventResponse_
  commentId: M:PFVR.Events.GameEventTypeExtensions.AddEventListener(PFVR.Events.GameEventType,PFVR.Events.GameEventResponse)
  fullName: PFVR.Events.GameEventTypeExtensions.AddEventListener(PFVR.Events.GameEventType, PFVR.Events.GameEventResponse)
  nameWithType: GameEventTypeExtensions.AddEventListener(GameEventType, GameEventResponse)
- uid: PFVR.Events.GameEventTypeExtensions.AddEventListener*
  name: AddEventListener
  href: api/PFVR.Events.GameEventTypeExtensions.html#PFVR_Events_GameEventTypeExtensions_AddEventListener_
  commentId: Overload:PFVR.Events.GameEventTypeExtensions.AddEventListener
  isSpec: "True"
  fullName: PFVR.Events.GameEventTypeExtensions.AddEventListener
  nameWithType: GameEventTypeExtensions.AddEventListener
- uid: PFVR.Events.GameEventTypeExtensions.DispatchEvent(PFVR.Events.GameEventType,PFVR.Events.GameEvent)
  name: DispatchEvent(GameEventType, GameEvent)
  href: api/PFVR.Events.GameEventTypeExtensions.html#PFVR_Events_GameEventTypeExtensions_DispatchEvent_PFVR_Events_GameEventType_PFVR_Events_GameEvent_
  commentId: M:PFVR.Events.GameEventTypeExtensions.DispatchEvent(PFVR.Events.GameEventType,PFVR.Events.GameEvent)
  fullName: PFVR.Events.GameEventTypeExtensions.DispatchEvent(PFVR.Events.GameEventType, PFVR.Events.GameEvent)
  nameWithType: GameEventTypeExtensions.DispatchEvent(GameEventType, GameEvent)
- uid: PFVR.Events.GameEventTypeExtensions.DispatchEvent*
  name: DispatchEvent
  href: api/PFVR.Events.GameEventTypeExtensions.html#PFVR_Events_GameEventTypeExtensions_DispatchEvent_
  commentId: Overload:PFVR.Events.GameEventTypeExtensions.DispatchEvent
  isSpec: "True"
  fullName: PFVR.Events.GameEventTypeExtensions.DispatchEvent
  nameWithType: GameEventTypeExtensions.DispatchEvent
- uid: PFVR.Events.GameEventTypeExtensions.RemoveEventListener(PFVR.Events.GameEventType,PFVR.Events.GameEventResponse)
  name: RemoveEventListener(GameEventType, GameEventResponse)
  href: api/PFVR.Events.GameEventTypeExtensions.html#PFVR_Events_GameEventTypeExtensions_RemoveEventListener_PFVR_Events_GameEventType_PFVR_Events_GameEventResponse_
  commentId: M:PFVR.Events.GameEventTypeExtensions.RemoveEventListener(PFVR.Events.GameEventType,PFVR.Events.GameEventResponse)
  fullName: PFVR.Events.GameEventTypeExtensions.RemoveEventListener(PFVR.Events.GameEventType, PFVR.Events.GameEventResponse)
  nameWithType: GameEventTypeExtensions.RemoveEventListener(GameEventType, GameEventResponse)
- uid: PFVR.Events.GameEventTypeExtensions.RemoveEventListener*
  name: RemoveEventListener
  href: api/PFVR.Events.GameEventTypeExtensions.html#PFVR_Events_GameEventTypeExtensions_RemoveEventListener_
  commentId: Overload:PFVR.Events.GameEventTypeExtensions.RemoveEventListener
  isSpec: "True"
  fullName: PFVR.Events.GameEventTypeExtensions.RemoveEventListener
  nameWithType: GameEventTypeExtensions.RemoveEventListener
- uid: PFVR.OurPhysics
  name: PFVR.OurPhysics
  href: api/PFVR.OurPhysics.html
  commentId: N:PFVR.OurPhysics
  fullName: PFVR.OurPhysics
  nameWithType: PFVR.OurPhysics
- uid: PFVR.OurPhysics.AnimatedDestroyable
  name: AnimatedDestroyable
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html
  commentId: T:PFVR.OurPhysics.AnimatedDestroyable
  fullName: PFVR.OurPhysics.AnimatedDestroyable
  nameWithType: AnimatedDestroyable
- uid: PFVR.OurPhysics.AnimatedDestroyable.currentHP
  name: currentHP
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_currentHP
  commentId: P:PFVR.OurPhysics.AnimatedDestroyable.currentHP
  fullName: PFVR.OurPhysics.AnimatedDestroyable.currentHP
  nameWithType: AnimatedDestroyable.currentHP
- uid: PFVR.OurPhysics.AnimatedDestroyable.currentHP*
  name: currentHP
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_currentHP_
  commentId: Overload:PFVR.OurPhysics.AnimatedDestroyable.currentHP
  isSpec: "True"
  fullName: PFVR.OurPhysics.AnimatedDestroyable.currentHP
  nameWithType: AnimatedDestroyable.currentHP
- uid: PFVR.OurPhysics.AnimatedDestroyable.isAlive
  name: isAlive
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_isAlive
  commentId: P:PFVR.OurPhysics.AnimatedDestroyable.isAlive
  fullName: PFVR.OurPhysics.AnimatedDestroyable.isAlive
  nameWithType: AnimatedDestroyable.isAlive
- uid: PFVR.OurPhysics.AnimatedDestroyable.isAlive*
  name: isAlive
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_isAlive_
  commentId: Overload:PFVR.OurPhysics.AnimatedDestroyable.isAlive
  isSpec: "True"
  fullName: PFVR.OurPhysics.AnimatedDestroyable.isAlive
  nameWithType: AnimatedDestroyable.isAlive
- uid: PFVR.OurPhysics.AnimatedDestroyable.position
  name: position
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_position
  commentId: P:PFVR.OurPhysics.AnimatedDestroyable.position
  fullName: PFVR.OurPhysics.AnimatedDestroyable.position
  nameWithType: AnimatedDestroyable.position
- uid: PFVR.OurPhysics.AnimatedDestroyable.position*
  name: position
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_position_
  commentId: Overload:PFVR.OurPhysics.AnimatedDestroyable.position
  isSpec: "True"
  fullName: PFVR.OurPhysics.AnimatedDestroyable.position
  nameWithType: AnimatedDestroyable.position
- uid: PFVR.OurPhysics.AnimatedDestroyable.rigidbody
  name: rigidbody
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_rigidbody
  commentId: P:PFVR.OurPhysics.AnimatedDestroyable.rigidbody
  fullName: PFVR.OurPhysics.AnimatedDestroyable.rigidbody
  nameWithType: AnimatedDestroyable.rigidbody
- uid: PFVR.OurPhysics.AnimatedDestroyable.rigidbody*
  name: rigidbody
  href: api/PFVR.OurPhysics.AnimatedDestroyable.html#PFVR_OurPhysics_AnimatedDestroyable_rigidbody_
  commentId: Overload:PFVR.OurPhysics.AnimatedDestroyable.rigidbody
  isSpec: "True"
  fullName: PFVR.OurPhysics.AnimatedDestroyable.rigidbody
  nameWithType: AnimatedDestroyable.rigidbody
- uid: PFVR.OurPhysics.BasicDestroyable
  name: BasicDestroyable
  href: api/PFVR.OurPhysics.BasicDestroyable.html
  commentId: T:PFVR.OurPhysics.BasicDestroyable
  fullName: PFVR.OurPhysics.BasicDestroyable
  nameWithType: BasicDestroyable
- uid: PFVR.OurPhysics.BasicDestroyable.currentHP
  name: currentHP
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_currentHP
  commentId: P:PFVR.OurPhysics.BasicDestroyable.currentHP
  fullName: PFVR.OurPhysics.BasicDestroyable.currentHP
  nameWithType: BasicDestroyable.currentHP
- uid: PFVR.OurPhysics.BasicDestroyable.currentHP*
  name: currentHP
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_currentHP_
  commentId: Overload:PFVR.OurPhysics.BasicDestroyable.currentHP
  isSpec: "True"
  fullName: PFVR.OurPhysics.BasicDestroyable.currentHP
  nameWithType: BasicDestroyable.currentHP
- uid: PFVR.OurPhysics.BasicDestroyable.damageHealedPrefab
  name: damageHealedPrefab
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_damageHealedPrefab
  commentId: F:PFVR.OurPhysics.BasicDestroyable.damageHealedPrefab
  fullName: PFVR.OurPhysics.BasicDestroyable.damageHealedPrefab
  nameWithType: BasicDestroyable.damageHealedPrefab
- uid: PFVR.OurPhysics.BasicDestroyable.damageTakenPrefab
  name: damageTakenPrefab
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_damageTakenPrefab
  commentId: F:PFVR.OurPhysics.BasicDestroyable.damageTakenPrefab
  fullName: PFVR.OurPhysics.BasicDestroyable.damageTakenPrefab
  nameWithType: BasicDestroyable.damageTakenPrefab
- uid: PFVR.OurPhysics.BasicDestroyable.deadPrefab
  name: deadPrefab
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_deadPrefab
  commentId: F:PFVR.OurPhysics.BasicDestroyable.deadPrefab
  fullName: PFVR.OurPhysics.BasicDestroyable.deadPrefab
  nameWithType: BasicDestroyable.deadPrefab
- uid: PFVR.OurPhysics.BasicDestroyable.isAlive
  name: isAlive
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_isAlive
  commentId: P:PFVR.OurPhysics.BasicDestroyable.isAlive
  fullName: PFVR.OurPhysics.BasicDestroyable.isAlive
  nameWithType: BasicDestroyable.isAlive
- uid: PFVR.OurPhysics.BasicDestroyable.isAlive*
  name: isAlive
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_isAlive_
  commentId: Overload:PFVR.OurPhysics.BasicDestroyable.isAlive
  isSpec: "True"
  fullName: PFVR.OurPhysics.BasicDestroyable.isAlive
  nameWithType: BasicDestroyable.isAlive
- uid: PFVR.OurPhysics.BasicDestroyable.maxHP
  name: maxHP
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_maxHP
  commentId: F:PFVR.OurPhysics.BasicDestroyable.maxHP
  fullName: PFVR.OurPhysics.BasicDestroyable.maxHP
  nameWithType: BasicDestroyable.maxHP
- uid: PFVR.OurPhysics.BasicDestroyable.position
  name: position
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_position
  commentId: P:PFVR.OurPhysics.BasicDestroyable.position
  fullName: PFVR.OurPhysics.BasicDestroyable.position
  nameWithType: BasicDestroyable.position
- uid: PFVR.OurPhysics.BasicDestroyable.position*
  name: position
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_position_
  commentId: Overload:PFVR.OurPhysics.BasicDestroyable.position
  isSpec: "True"
  fullName: PFVR.OurPhysics.BasicDestroyable.position
  nameWithType: BasicDestroyable.position
- uid: PFVR.OurPhysics.BasicDestroyable.rigidbody
  name: rigidbody
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_rigidbody
  commentId: P:PFVR.OurPhysics.BasicDestroyable.rigidbody
  fullName: PFVR.OurPhysics.BasicDestroyable.rigidbody
  nameWithType: BasicDestroyable.rigidbody
- uid: PFVR.OurPhysics.BasicDestroyable.rigidbody*
  name: rigidbody
  href: api/PFVR.OurPhysics.BasicDestroyable.html#PFVR_OurPhysics_BasicDestroyable_rigidbody_
  commentId: Overload:PFVR.OurPhysics.BasicDestroyable.rigidbody
  isSpec: "True"
  fullName: PFVR.OurPhysics.BasicDestroyable.rigidbody
  nameWithType: BasicDestroyable.rigidbody
- uid: PFVR.OurPhysics.CenterOfMass
  name: CenterOfMass
  href: api/PFVR.OurPhysics.CenterOfMass.html
  commentId: T:PFVR.OurPhysics.CenterOfMass
  fullName: PFVR.OurPhysics.CenterOfMass
  nameWithType: CenterOfMass
- uid: PFVR.OurPhysics.CharacterControllerMotor
  name: CharacterControllerMotor
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html
  commentId: T:PFVR.OurPhysics.CharacterControllerMotor
  fullName: PFVR.OurPhysics.CharacterControllerMotor
  nameWithType: CharacterControllerMotor
- uid: PFVR.OurPhysics.CharacterControllerMotor.AddVelocity(UnityEngine.Vector3)
  name: AddVelocity(Vector3)
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_AddVelocity_UnityEngine_Vector3_
  commentId: M:PFVR.OurPhysics.CharacterControllerMotor.AddVelocity(UnityEngine.Vector3)
  fullName: PFVR.OurPhysics.CharacterControllerMotor.AddVelocity(UnityEngine.Vector3)
  nameWithType: CharacterControllerMotor.AddVelocity(Vector3)
- uid: PFVR.OurPhysics.CharacterControllerMotor.AddVelocity*
  name: AddVelocity
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_AddVelocity_
  commentId: Overload:PFVR.OurPhysics.CharacterControllerMotor.AddVelocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.CharacterControllerMotor.AddVelocity
  nameWithType: CharacterControllerMotor.AddVelocity
- uid: PFVR.OurPhysics.CharacterControllerMotor.Break(System.Single)
  name: Break(Single)
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_Break_System_Single_
  commentId: M:PFVR.OurPhysics.CharacterControllerMotor.Break(System.Single)
  fullName: PFVR.OurPhysics.CharacterControllerMotor.Break(System.Single)
  nameWithType: CharacterControllerMotor.Break(Single)
- uid: PFVR.OurPhysics.CharacterControllerMotor.Break*
  name: Break
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_Break_
  commentId: Overload:PFVR.OurPhysics.CharacterControllerMotor.Break
  isSpec: "True"
  fullName: PFVR.OurPhysics.CharacterControllerMotor.Break
  nameWithType: CharacterControllerMotor.Break
- uid: PFVR.OurPhysics.CharacterControllerMotor.LerpVelocity(UnityEngine.Vector3,System.Single)
  name: LerpVelocity(Vector3, Single)
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_LerpVelocity_UnityEngine_Vector3_System_Single_
  commentId: M:PFVR.OurPhysics.CharacterControllerMotor.LerpVelocity(UnityEngine.Vector3,System.Single)
  fullName: PFVR.OurPhysics.CharacterControllerMotor.LerpVelocity(UnityEngine.Vector3, System.Single)
  nameWithType: CharacterControllerMotor.LerpVelocity(Vector3, Single)
- uid: PFVR.OurPhysics.CharacterControllerMotor.LerpVelocity*
  name: LerpVelocity
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_LerpVelocity_
  commentId: Overload:PFVR.OurPhysics.CharacterControllerMotor.LerpVelocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.CharacterControllerMotor.LerpVelocity
  nameWithType: CharacterControllerMotor.LerpVelocity
- uid: PFVR.OurPhysics.CharacterControllerMotor.position
  name: position
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_position
  commentId: P:PFVR.OurPhysics.CharacterControllerMotor.position
  fullName: PFVR.OurPhysics.CharacterControllerMotor.position
  nameWithType: CharacterControllerMotor.position
- uid: PFVR.OurPhysics.CharacterControllerMotor.position*
  name: position
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_position_
  commentId: Overload:PFVR.OurPhysics.CharacterControllerMotor.position
  isSpec: "True"
  fullName: PFVR.OurPhysics.CharacterControllerMotor.position
  nameWithType: CharacterControllerMotor.position
- uid: PFVR.OurPhysics.CharacterControllerMotor.speed
  name: speed
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_speed
  commentId: P:PFVR.OurPhysics.CharacterControllerMotor.speed
  fullName: PFVR.OurPhysics.CharacterControllerMotor.speed
  nameWithType: CharacterControllerMotor.speed
- uid: PFVR.OurPhysics.CharacterControllerMotor.speed*
  name: speed
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_speed_
  commentId: Overload:PFVR.OurPhysics.CharacterControllerMotor.speed
  isSpec: "True"
  fullName: PFVR.OurPhysics.CharacterControllerMotor.speed
  nameWithType: CharacterControllerMotor.speed
- uid: PFVR.OurPhysics.CharacterControllerMotor.velocity
  name: velocity
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_velocity
  commentId: P:PFVR.OurPhysics.CharacterControllerMotor.velocity
  fullName: PFVR.OurPhysics.CharacterControllerMotor.velocity
  nameWithType: CharacterControllerMotor.velocity
- uid: PFVR.OurPhysics.CharacterControllerMotor.velocity*
  name: velocity
  href: api/PFVR.OurPhysics.CharacterControllerMotor.html#PFVR_OurPhysics_CharacterControllerMotor_velocity_
  commentId: Overload:PFVR.OurPhysics.CharacterControllerMotor.velocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.CharacterControllerMotor.velocity
  nameWithType: CharacterControllerMotor.velocity
- uid: PFVR.OurPhysics.DeathZone
  name: DeathZone
  href: api/PFVR.OurPhysics.DeathZone.html
  commentId: T:PFVR.OurPhysics.DeathZone
  fullName: PFVR.OurPhysics.DeathZone
  nameWithType: DeathZone
- uid: PFVR.OurPhysics.DestroyOnCollision
  name: DestroyOnCollision
  href: api/PFVR.OurPhysics.DestroyOnCollision.html
  commentId: T:PFVR.OurPhysics.DestroyOnCollision
  fullName: PFVR.OurPhysics.DestroyOnCollision
  nameWithType: DestroyOnCollision
- uid: PFVR.OurPhysics.FakeGravity
  name: FakeGravity
  href: api/PFVR.OurPhysics.FakeGravity.html
  commentId: T:PFVR.OurPhysics.FakeGravity
  fullName: PFVR.OurPhysics.FakeGravity
  nameWithType: FakeGravity
- uid: PFVR.OurPhysics.Floater
  name: Floater
  href: api/PFVR.OurPhysics.Floater.html
  commentId: T:PFVR.OurPhysics.Floater
  fullName: PFVR.OurPhysics.Floater
  nameWithType: Floater
- uid: PFVR.OurPhysics.Floater.amplitude
  name: amplitude
  href: api/PFVR.OurPhysics.Floater.html#PFVR_OurPhysics_Floater_amplitude
  commentId: F:PFVR.OurPhysics.Floater.amplitude
  fullName: PFVR.OurPhysics.Floater.amplitude
  nameWithType: Floater.amplitude
- uid: PFVR.OurPhysics.Floater.degreesPerSecond
  name: degreesPerSecond
  href: api/PFVR.OurPhysics.Floater.html#PFVR_OurPhysics_Floater_degreesPerSecond
  commentId: F:PFVR.OurPhysics.Floater.degreesPerSecond
  fullName: PFVR.OurPhysics.Floater.degreesPerSecond
  nameWithType: Floater.degreesPerSecond
- uid: PFVR.OurPhysics.Floater.frequency
  name: frequency
  href: api/PFVR.OurPhysics.Floater.html#PFVR_OurPhysics_Floater_frequency
  commentId: F:PFVR.OurPhysics.Floater.frequency
  fullName: PFVR.OurPhysics.Floater.frequency
  nameWithType: Floater.frequency
- uid: PFVR.OurPhysics.IDestroyable
  name: IDestroyable
  href: api/PFVR.OurPhysics.IDestroyable.html
  commentId: T:PFVR.OurPhysics.IDestroyable
  fullName: PFVR.OurPhysics.IDestroyable
  nameWithType: IDestroyable
- uid: PFVR.OurPhysics.IDestroyable.currentHP
  name: currentHP
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_currentHP
  commentId: P:PFVR.OurPhysics.IDestroyable.currentHP
  fullName: PFVR.OurPhysics.IDestroyable.currentHP
  nameWithType: IDestroyable.currentHP
- uid: PFVR.OurPhysics.IDestroyable.currentHP*
  name: currentHP
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_currentHP_
  commentId: Overload:PFVR.OurPhysics.IDestroyable.currentHP
  isSpec: "True"
  fullName: PFVR.OurPhysics.IDestroyable.currentHP
  nameWithType: IDestroyable.currentHP
- uid: PFVR.OurPhysics.IDestroyable.isAlive
  name: isAlive
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_isAlive
  commentId: P:PFVR.OurPhysics.IDestroyable.isAlive
  fullName: PFVR.OurPhysics.IDestroyable.isAlive
  nameWithType: IDestroyable.isAlive
- uid: PFVR.OurPhysics.IDestroyable.isAlive*
  name: isAlive
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_isAlive_
  commentId: Overload:PFVR.OurPhysics.IDestroyable.isAlive
  isSpec: "True"
  fullName: PFVR.OurPhysics.IDestroyable.isAlive
  nameWithType: IDestroyable.isAlive
- uid: PFVR.OurPhysics.IDestroyable.position
  name: position
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_position
  commentId: P:PFVR.OurPhysics.IDestroyable.position
  fullName: PFVR.OurPhysics.IDestroyable.position
  nameWithType: IDestroyable.position
- uid: PFVR.OurPhysics.IDestroyable.position*
  name: position
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_position_
  commentId: Overload:PFVR.OurPhysics.IDestroyable.position
  isSpec: "True"
  fullName: PFVR.OurPhysics.IDestroyable.position
  nameWithType: IDestroyable.position
- uid: PFVR.OurPhysics.IDestroyable.rigidbody
  name: rigidbody
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_rigidbody
  commentId: P:PFVR.OurPhysics.IDestroyable.rigidbody
  fullName: PFVR.OurPhysics.IDestroyable.rigidbody
  nameWithType: IDestroyable.rigidbody
- uid: PFVR.OurPhysics.IDestroyable.rigidbody*
  name: rigidbody
  href: api/PFVR.OurPhysics.IDestroyable.html#PFVR_OurPhysics_IDestroyable_rigidbody_
  commentId: Overload:PFVR.OurPhysics.IDestroyable.rigidbody
  isSpec: "True"
  fullName: PFVR.OurPhysics.IDestroyable.rigidbody
  nameWithType: IDestroyable.rigidbody
- uid: PFVR.OurPhysics.IMotor
  name: IMotor
  href: api/PFVR.OurPhysics.IMotor.html
  commentId: T:PFVR.OurPhysics.IMotor
  fullName: PFVR.OurPhysics.IMotor
  nameWithType: IMotor
- uid: PFVR.OurPhysics.IMotor.AddVelocity(UnityEngine.Vector3)
  name: AddVelocity(Vector3)
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_AddVelocity_UnityEngine_Vector3_
  commentId: M:PFVR.OurPhysics.IMotor.AddVelocity(UnityEngine.Vector3)
  fullName: PFVR.OurPhysics.IMotor.AddVelocity(UnityEngine.Vector3)
  nameWithType: IMotor.AddVelocity(Vector3)
- uid: PFVR.OurPhysics.IMotor.AddVelocity*
  name: AddVelocity
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_AddVelocity_
  commentId: Overload:PFVR.OurPhysics.IMotor.AddVelocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.IMotor.AddVelocity
  nameWithType: IMotor.AddVelocity
- uid: PFVR.OurPhysics.IMotor.Break(System.Single)
  name: Break(Single)
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_Break_System_Single_
  commentId: M:PFVR.OurPhysics.IMotor.Break(System.Single)
  fullName: PFVR.OurPhysics.IMotor.Break(System.Single)
  nameWithType: IMotor.Break(Single)
- uid: PFVR.OurPhysics.IMotor.Break*
  name: Break
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_Break_
  commentId: Overload:PFVR.OurPhysics.IMotor.Break
  isSpec: "True"
  fullName: PFVR.OurPhysics.IMotor.Break
  nameWithType: IMotor.Break
- uid: PFVR.OurPhysics.IMotor.LerpVelocity(UnityEngine.Vector3,System.Single)
  name: LerpVelocity(Vector3, Single)
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_LerpVelocity_UnityEngine_Vector3_System_Single_
  commentId: M:PFVR.OurPhysics.IMotor.LerpVelocity(UnityEngine.Vector3,System.Single)
  fullName: PFVR.OurPhysics.IMotor.LerpVelocity(UnityEngine.Vector3, System.Single)
  nameWithType: IMotor.LerpVelocity(Vector3, Single)
- uid: PFVR.OurPhysics.IMotor.LerpVelocity*
  name: LerpVelocity
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_LerpVelocity_
  commentId: Overload:PFVR.OurPhysics.IMotor.LerpVelocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.IMotor.LerpVelocity
  nameWithType: IMotor.LerpVelocity
- uid: PFVR.OurPhysics.IMotor.position
  name: position
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_position
  commentId: P:PFVR.OurPhysics.IMotor.position
  fullName: PFVR.OurPhysics.IMotor.position
  nameWithType: IMotor.position
- uid: PFVR.OurPhysics.IMotor.position*
  name: position
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_position_
  commentId: Overload:PFVR.OurPhysics.IMotor.position
  isSpec: "True"
  fullName: PFVR.OurPhysics.IMotor.position
  nameWithType: IMotor.position
- uid: PFVR.OurPhysics.IMotor.speed
  name: speed
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_speed
  commentId: P:PFVR.OurPhysics.IMotor.speed
  fullName: PFVR.OurPhysics.IMotor.speed
  nameWithType: IMotor.speed
- uid: PFVR.OurPhysics.IMotor.speed*
  name: speed
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_speed_
  commentId: Overload:PFVR.OurPhysics.IMotor.speed
  isSpec: "True"
  fullName: PFVR.OurPhysics.IMotor.speed
  nameWithType: IMotor.speed
- uid: PFVR.OurPhysics.IMotor.velocity
  name: velocity
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_velocity
  commentId: P:PFVR.OurPhysics.IMotor.velocity
  fullName: PFVR.OurPhysics.IMotor.velocity
  nameWithType: IMotor.velocity
- uid: PFVR.OurPhysics.IMotor.velocity*
  name: velocity
  href: api/PFVR.OurPhysics.IMotor.html#PFVR_OurPhysics_IMotor_velocity_
  commentId: Overload:PFVR.OurPhysics.IMotor.velocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.IMotor.velocity
  nameWithType: IMotor.velocity
- uid: PFVR.OurPhysics.KinematicRigidbody
  name: KinematicRigidbody
  href: api/PFVR.OurPhysics.KinematicRigidbody.html
  commentId: T:PFVR.OurPhysics.KinematicRigidbody
  fullName: PFVR.OurPhysics.KinematicRigidbody
  nameWithType: KinematicRigidbody
- uid: PFVR.OurPhysics.KinematicRigidbody.mass
  name: mass
  href: api/PFVR.OurPhysics.KinematicRigidbody.html#PFVR_OurPhysics_KinematicRigidbody_mass
  commentId: F:PFVR.OurPhysics.KinematicRigidbody.mass
  fullName: PFVR.OurPhysics.KinematicRigidbody.mass
  nameWithType: KinematicRigidbody.mass
- uid: PFVR.OurPhysics.KinematicRigidbody.transferForce
  name: transferForce
  href: api/PFVR.OurPhysics.KinematicRigidbody.html#PFVR_OurPhysics_KinematicRigidbody_transferForce
  commentId: F:PFVR.OurPhysics.KinematicRigidbody.transferForce
  fullName: PFVR.OurPhysics.KinematicRigidbody.transferForce
  nameWithType: KinematicRigidbody.transferForce
- uid: PFVR.OurPhysics.KinematicRigidbody.velocity
  name: velocity
  href: api/PFVR.OurPhysics.KinematicRigidbody.html#PFVR_OurPhysics_KinematicRigidbody_velocity
  commentId: F:PFVR.OurPhysics.KinematicRigidbody.velocity
  fullName: PFVR.OurPhysics.KinematicRigidbody.velocity
  nameWithType: KinematicRigidbody.velocity
- uid: PFVR.OurPhysics.ReverseNormals
  name: ReverseNormals
  href: api/PFVR.OurPhysics.ReverseNormals.html
  commentId: T:PFVR.OurPhysics.ReverseNormals
  fullName: PFVR.OurPhysics.ReverseNormals
  nameWithType: ReverseNormals
- uid: PFVR.OurPhysics.RigidbodyDensity
  name: RigidbodyDensity
  href: api/PFVR.OurPhysics.RigidbodyDensity.html
  commentId: T:PFVR.OurPhysics.RigidbodyDensity
  fullName: PFVR.OurPhysics.RigidbodyDensity
  nameWithType: RigidbodyDensity
- uid: PFVR.OurPhysics.RigidbodyMotor
  name: RigidbodyMotor
  href: api/PFVR.OurPhysics.RigidbodyMotor.html
  commentId: T:PFVR.OurPhysics.RigidbodyMotor
  fullName: PFVR.OurPhysics.RigidbodyMotor
  nameWithType: RigidbodyMotor
- uid: PFVR.OurPhysics.RigidbodyMotor.AddVelocity(UnityEngine.Vector3)
  name: AddVelocity(Vector3)
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_AddVelocity_UnityEngine_Vector3_
  commentId: M:PFVR.OurPhysics.RigidbodyMotor.AddVelocity(UnityEngine.Vector3)
  fullName: PFVR.OurPhysics.RigidbodyMotor.AddVelocity(UnityEngine.Vector3)
  nameWithType: RigidbodyMotor.AddVelocity(Vector3)
- uid: PFVR.OurPhysics.RigidbodyMotor.AddVelocity*
  name: AddVelocity
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_AddVelocity_
  commentId: Overload:PFVR.OurPhysics.RigidbodyMotor.AddVelocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.RigidbodyMotor.AddVelocity
  nameWithType: RigidbodyMotor.AddVelocity
- uid: PFVR.OurPhysics.RigidbodyMotor.Break(System.Single)
  name: Break(Single)
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_Break_System_Single_
  commentId: M:PFVR.OurPhysics.RigidbodyMotor.Break(System.Single)
  fullName: PFVR.OurPhysics.RigidbodyMotor.Break(System.Single)
  nameWithType: RigidbodyMotor.Break(Single)
- uid: PFVR.OurPhysics.RigidbodyMotor.Break*
  name: Break
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_Break_
  commentId: Overload:PFVR.OurPhysics.RigidbodyMotor.Break
  isSpec: "True"
  fullName: PFVR.OurPhysics.RigidbodyMotor.Break
  nameWithType: RigidbodyMotor.Break
- uid: PFVR.OurPhysics.RigidbodyMotor.downwardsDrag
  name: downwardsDrag
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_downwardsDrag
  commentId: F:PFVR.OurPhysics.RigidbodyMotor.downwardsDrag
  fullName: PFVR.OurPhysics.RigidbodyMotor.downwardsDrag
  nameWithType: RigidbodyMotor.downwardsDrag
- uid: PFVR.OurPhysics.RigidbodyMotor.horizontalDrag
  name: horizontalDrag
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_horizontalDrag
  commentId: F:PFVR.OurPhysics.RigidbodyMotor.horizontalDrag
  fullName: PFVR.OurPhysics.RigidbodyMotor.horizontalDrag
  nameWithType: RigidbodyMotor.horizontalDrag
- uid: PFVR.OurPhysics.RigidbodyMotor.LerpVelocity(UnityEngine.Vector3,System.Single)
  name: LerpVelocity(Vector3, Single)
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_LerpVelocity_UnityEngine_Vector3_System_Single_
  commentId: M:PFVR.OurPhysics.RigidbodyMotor.LerpVelocity(UnityEngine.Vector3,System.Single)
  fullName: PFVR.OurPhysics.RigidbodyMotor.LerpVelocity(UnityEngine.Vector3, System.Single)
  nameWithType: RigidbodyMotor.LerpVelocity(Vector3, Single)
- uid: PFVR.OurPhysics.RigidbodyMotor.LerpVelocity*
  name: LerpVelocity
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_LerpVelocity_
  commentId: Overload:PFVR.OurPhysics.RigidbodyMotor.LerpVelocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.RigidbodyMotor.LerpVelocity
  nameWithType: RigidbodyMotor.LerpVelocity
- uid: PFVR.OurPhysics.RigidbodyMotor.position
  name: position
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_position
  commentId: P:PFVR.OurPhysics.RigidbodyMotor.position
  fullName: PFVR.OurPhysics.RigidbodyMotor.position
  nameWithType: RigidbodyMotor.position
- uid: PFVR.OurPhysics.RigidbodyMotor.position*
  name: position
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_position_
  commentId: Overload:PFVR.OurPhysics.RigidbodyMotor.position
  isSpec: "True"
  fullName: PFVR.OurPhysics.RigidbodyMotor.position
  nameWithType: RigidbodyMotor.position
- uid: PFVR.OurPhysics.RigidbodyMotor.speed
  name: speed
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_speed
  commentId: P:PFVR.OurPhysics.RigidbodyMotor.speed
  fullName: PFVR.OurPhysics.RigidbodyMotor.speed
  nameWithType: RigidbodyMotor.speed
- uid: PFVR.OurPhysics.RigidbodyMotor.speed*
  name: speed
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_speed_
  commentId: Overload:PFVR.OurPhysics.RigidbodyMotor.speed
  isSpec: "True"
  fullName: PFVR.OurPhysics.RigidbodyMotor.speed
  nameWithType: RigidbodyMotor.speed
- uid: PFVR.OurPhysics.RigidbodyMotor.upwardsDrag
  name: upwardsDrag
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_upwardsDrag
  commentId: F:PFVR.OurPhysics.RigidbodyMotor.upwardsDrag
  fullName: PFVR.OurPhysics.RigidbodyMotor.upwardsDrag
  nameWithType: RigidbodyMotor.upwardsDrag
- uid: PFVR.OurPhysics.RigidbodyMotor.velocity
  name: velocity
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_velocity
  commentId: P:PFVR.OurPhysics.RigidbodyMotor.velocity
  fullName: PFVR.OurPhysics.RigidbodyMotor.velocity
  nameWithType: RigidbodyMotor.velocity
- uid: PFVR.OurPhysics.RigidbodyMotor.velocity*
  name: velocity
  href: api/PFVR.OurPhysics.RigidbodyMotor.html#PFVR_OurPhysics_RigidbodyMotor_velocity_
  commentId: Overload:PFVR.OurPhysics.RigidbodyMotor.velocity
  isSpec: "True"
  fullName: PFVR.OurPhysics.RigidbodyMotor.velocity
  nameWithType: RigidbodyMotor.velocity
- uid: PFVR.OurPhysics.ScalableObject
  name: ScalableObject
  href: api/PFVR.OurPhysics.ScalableObject.html
  commentId: T:PFVR.OurPhysics.ScalableObject
  fullName: PFVR.OurPhysics.ScalableObject
  nameWithType: ScalableObject
- uid: PFVR.OurPhysics.ScalableObject.maximumScaling
  name: maximumScaling
  href: api/PFVR.OurPhysics.ScalableObject.html#PFVR_OurPhysics_ScalableObject_maximumScaling
  commentId: F:PFVR.OurPhysics.ScalableObject.maximumScaling
  fullName: PFVR.OurPhysics.ScalableObject.maximumScaling
  nameWithType: ScalableObject.maximumScaling
- uid: PFVR.OurPhysics.ScalableObject.scaledScaling
  name: scaledScaling
  href: api/PFVR.OurPhysics.ScalableObject.html#PFVR_OurPhysics_ScalableObject_scaledScaling
  commentId: P:PFVR.OurPhysics.ScalableObject.scaledScaling
  fullName: PFVR.OurPhysics.ScalableObject.scaledScaling
  nameWithType: ScalableObject.scaledScaling
- uid: PFVR.OurPhysics.ScalableObject.scaledScaling*
  name: scaledScaling
  href: api/PFVR.OurPhysics.ScalableObject.html#PFVR_OurPhysics_ScalableObject_scaledScaling_
  commentId: Overload:PFVR.OurPhysics.ScalableObject.scaledScaling
  isSpec: "True"
  fullName: PFVR.OurPhysics.ScalableObject.scaledScaling
  nameWithType: ScalableObject.scaledScaling
- uid: PFVR.OurPhysics.ScalableObject.scaling
  name: scaling
  href: api/PFVR.OurPhysics.ScalableObject.html#PFVR_OurPhysics_ScalableObject_scaling
  commentId: P:PFVR.OurPhysics.ScalableObject.scaling
  fullName: PFVR.OurPhysics.ScalableObject.scaling
  nameWithType: ScalableObject.scaling
- uid: PFVR.OurPhysics.ScalableObject.scaling*
  name: scaling
  href: api/PFVR.OurPhysics.ScalableObject.html#PFVR_OurPhysics_ScalableObject_scaling_
  commentId: Overload:PFVR.OurPhysics.ScalableObject.scaling
  isSpec: "True"
  fullName: PFVR.OurPhysics.ScalableObject.scaling
  nameWithType: ScalableObject.scaling
- uid: PFVR.Player
  name: PFVR.Player
  href: api/PFVR.Player.html
  commentId: N:PFVR.Player
  fullName: PFVR.Player
  nameWithType: PFVR.Player
- uid: PFVR.Player.FPSController
  name: FPSController
  href: api/PFVR.Player.FPSController.html
  commentId: T:PFVR.Player.FPSController
  fullName: PFVR.Player.FPSController
  nameWithType: FPSController
- uid: PFVR.Player.GestureConnector
  name: GestureConnector
  href: api/PFVR.Player.GestureConnector.html
  commentId: T:PFVR.Player.GestureConnector
  fullName: PFVR.Player.GestureConnector
  nameWithType: GestureConnector
- uid: PFVR.Player.GestureConnector.availableGestures
  name: availableGestures
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_availableGestures
  commentId: P:PFVR.Player.GestureConnector.availableGestures
  fullName: PFVR.Player.GestureConnector.availableGestures
  nameWithType: GestureConnector.availableGestures
- uid: PFVR.Player.GestureConnector.availableGestures*
  name: availableGestures
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_availableGestures_
  commentId: Overload:PFVR.Player.GestureConnector.availableGestures
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.availableGestures
  nameWithType: GestureConnector.availableGestures
- uid: PFVR.Player.GestureConnector.CanStartComplexGesture(PFVR.ScriptableObjects.Gesture)
  name: CanStartComplexGesture(Gesture)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_CanStartComplexGesture_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.Player.GestureConnector.CanStartComplexGesture(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.Player.GestureConnector.CanStartComplexGesture(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureConnector.CanStartComplexGesture(Gesture)
- uid: PFVR.Player.GestureConnector.CanStartComplexGesture*
  name: CanStartComplexGesture
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_CanStartComplexGesture_
  commentId: Overload:PFVR.Player.GestureConnector.CanStartComplexGesture
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.CanStartComplexGesture
  nameWithType: GestureConnector.CanStartComplexGesture
- uid: PFVR.Player.GestureConnector.instance
  name: instance
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_instance
  commentId: P:PFVR.Player.GestureConnector.instance
  fullName: PFVR.Player.GestureConnector.instance
  nameWithType: GestureConnector.instance
- uid: PFVR.Player.GestureConnector.instance*
  name: instance
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_instance_
  commentId: Overload:PFVR.Player.GestureConnector.instance
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.instance
  nameWithType: GestureConnector.instance
- uid: PFVR.Player.GestureConnector.IsUnlocked(PFVR.ScriptableObjects.Gesture)
  name: IsUnlocked(Gesture)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_IsUnlocked_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.Player.GestureConnector.IsUnlocked(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.Player.GestureConnector.IsUnlocked(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureConnector.IsUnlocked(Gesture)
- uid: PFVR.Player.GestureConnector.IsUnlocked(System.String)
  name: IsUnlocked(String)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_IsUnlocked_System_String_
  commentId: M:PFVR.Player.GestureConnector.IsUnlocked(System.String)
  fullName: PFVR.Player.GestureConnector.IsUnlocked(System.String)
  nameWithType: GestureConnector.IsUnlocked(String)
- uid: PFVR.Player.GestureConnector.IsUnlocked*
  name: IsUnlocked
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_IsUnlocked_
  commentId: Overload:PFVR.Player.GestureConnector.IsUnlocked
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.IsUnlocked
  nameWithType: GestureConnector.IsUnlocked
- uid: PFVR.Player.GestureConnector.Lock(PFVR.ScriptableObjects.Gesture)
  name: Lock(Gesture)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_Lock_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.Player.GestureConnector.Lock(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.Player.GestureConnector.Lock(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureConnector.Lock(Gesture)
- uid: PFVR.Player.GestureConnector.Lock(System.String)
  name: Lock(String)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_Lock_System_String_
  commentId: M:PFVR.Player.GestureConnector.Lock(System.String)
  fullName: PFVR.Player.GestureConnector.Lock(System.String)
  nameWithType: GestureConnector.Lock(String)
- uid: PFVR.Player.GestureConnector.Lock*
  name: Lock
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_Lock_
  commentId: Overload:PFVR.Player.GestureConnector.Lock
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.Lock
  nameWithType: GestureConnector.Lock
- uid: PFVR.Player.GestureConnector.NewGesture
  name: GestureConnector.NewGesture
  href: api/PFVR.Player.GestureConnector.NewGesture.html
  commentId: T:PFVR.Player.GestureConnector.NewGesture
  fullName: PFVR.Player.GestureConnector.NewGesture
  nameWithType: GestureConnector.NewGesture
- uid: PFVR.Player.GestureConnector.onGestureLock
  name: onGestureLock
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_onGestureLock
  commentId: E:PFVR.Player.GestureConnector.onGestureLock
  fullName: PFVR.Player.GestureConnector.onGestureLock
  nameWithType: GestureConnector.onGestureLock
- uid: PFVR.Player.GestureConnector.onGestureUnlock
  name: onGestureUnlock
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_onGestureUnlock
  commentId: E:PFVR.Player.GestureConnector.onGestureUnlock
  fullName: PFVR.Player.GestureConnector.onGestureUnlock
  nameWithType: GestureConnector.onGestureUnlock
- uid: PFVR.Player.GestureConnector.onLeftGesture
  name: onLeftGesture
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_onLeftGesture
  commentId: E:PFVR.Player.GestureConnector.onLeftGesture
  fullName: PFVR.Player.GestureConnector.onLeftGesture
  nameWithType: GestureConnector.onLeftGesture
- uid: PFVR.Player.GestureConnector.onRightGesture
  name: onRightGesture
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_onRightGesture
  commentId: E:PFVR.Player.GestureConnector.onRightGesture
  fullName: PFVR.Player.GestureConnector.onRightGesture
  nameWithType: GestureConnector.onRightGesture
- uid: PFVR.Player.GestureConnector.StartComplexGesture(PFVR.ScriptableObjects.Gesture)
  name: StartComplexGesture(Gesture)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_StartComplexGesture_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.Player.GestureConnector.StartComplexGesture(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.Player.GestureConnector.StartComplexGesture(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureConnector.StartComplexGesture(Gesture)
- uid: PFVR.Player.GestureConnector.StartComplexGesture*
  name: StartComplexGesture
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_StartComplexGesture_
  commentId: Overload:PFVR.Player.GestureConnector.StartComplexGesture
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.StartComplexGesture
  nameWithType: GestureConnector.StartComplexGesture
- uid: PFVR.Player.GestureConnector.StopComplexGesture(PFVR.ScriptableObjects.Gesture)
  name: StopComplexGesture(Gesture)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_StopComplexGesture_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.Player.GestureConnector.StopComplexGesture(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.Player.GestureConnector.StopComplexGesture(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureConnector.StopComplexGesture(Gesture)
- uid: PFVR.Player.GestureConnector.StopComplexGesture*
  name: StopComplexGesture
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_StopComplexGesture_
  commentId: Overload:PFVR.Player.GestureConnector.StopComplexGesture
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.StopComplexGesture
  nameWithType: GestureConnector.StopComplexGesture
- uid: PFVR.Player.GestureConnector.Unlock(PFVR.ScriptableObjects.Gesture)
  name: Unlock(Gesture)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_Unlock_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.Player.GestureConnector.Unlock(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.Player.GestureConnector.Unlock(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureConnector.Unlock(Gesture)
- uid: PFVR.Player.GestureConnector.Unlock(System.String)
  name: Unlock(String)
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_Unlock_System_String_
  commentId: M:PFVR.Player.GestureConnector.Unlock(System.String)
  fullName: PFVR.Player.GestureConnector.Unlock(System.String)
  nameWithType: GestureConnector.Unlock(String)
- uid: PFVR.Player.GestureConnector.Unlock*
  name: Unlock
  href: api/PFVR.Player.GestureConnector.html#PFVR_Player_GestureConnector_Unlock_
  commentId: Overload:PFVR.Player.GestureConnector.Unlock
  isSpec: "True"
  fullName: PFVR.Player.GestureConnector.Unlock
  nameWithType: GestureConnector.Unlock
- uid: PFVR.Player.Gestures
  name: PFVR.Player.Gestures
  href: api/PFVR.Player.Gestures.html
  commentId: N:PFVR.Player.Gestures
  fullName: PFVR.Player.Gestures
  nameWithType: PFVR.Player.Gestures
- uid: PFVR.Player.Gestures.AbstractDetector
  name: AbstractDetector
  href: api/PFVR.Player.Gestures.AbstractDetector.html
  commentId: T:PFVR.Player.Gestures.AbstractDetector
  fullName: PFVR.Player.Gestures.AbstractDetector
  nameWithType: AbstractDetector
- uid: PFVR.Player.Gestures.AbstractDetector.isOn
  name: isOn
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_isOn
  commentId: P:PFVR.Player.Gestures.AbstractDetector.isOn
  fullName: PFVR.Player.Gestures.AbstractDetector.isOn
  nameWithType: AbstractDetector.isOn
- uid: PFVR.Player.Gestures.AbstractDetector.isOn*
  name: isOn
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_isOn_
  commentId: Overload:PFVR.Player.Gestures.AbstractDetector.isOn
  isSpec: "True"
  fullName: PFVR.Player.Gestures.AbstractDetector.isOn
  nameWithType: AbstractDetector.isOn
- uid: PFVR.Player.Gestures.AbstractDetector.isTurningOff
  name: isTurningOff
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_isTurningOff
  commentId: P:PFVR.Player.Gestures.AbstractDetector.isTurningOff
  fullName: PFVR.Player.Gestures.AbstractDetector.isTurningOff
  nameWithType: AbstractDetector.isTurningOff
- uid: PFVR.Player.Gestures.AbstractDetector.isTurningOff*
  name: isTurningOff
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_isTurningOff_
  commentId: Overload:PFVR.Player.Gestures.AbstractDetector.isTurningOff
  isSpec: "True"
  fullName: PFVR.Player.Gestures.AbstractDetector.isTurningOff
  nameWithType: AbstractDetector.isTurningOff
- uid: PFVR.Player.Gestures.AbstractDetector.isTurningOn
  name: isTurningOn
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_isTurningOn
  commentId: P:PFVR.Player.Gestures.AbstractDetector.isTurningOn
  fullName: PFVR.Player.Gestures.AbstractDetector.isTurningOn
  nameWithType: AbstractDetector.isTurningOn
- uid: PFVR.Player.Gestures.AbstractDetector.isTurningOn*
  name: isTurningOn
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_isTurningOn_
  commentId: Overload:PFVR.Player.Gestures.AbstractDetector.isTurningOn
  isSpec: "True"
  fullName: PFVR.Player.Gestures.AbstractDetector.isTurningOn
  nameWithType: AbstractDetector.isTurningOn
- uid: PFVR.Player.Gestures.AbstractDetector.TurnOff
  name: TurnOff()
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_TurnOff
  commentId: M:PFVR.Player.Gestures.AbstractDetector.TurnOff
  fullName: PFVR.Player.Gestures.AbstractDetector.TurnOff()
  nameWithType: AbstractDetector.TurnOff()
- uid: PFVR.Player.Gestures.AbstractDetector.TurnOff*
  name: TurnOff
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_TurnOff_
  commentId: Overload:PFVR.Player.Gestures.AbstractDetector.TurnOff
  isSpec: "True"
  fullName: PFVR.Player.Gestures.AbstractDetector.TurnOff
  nameWithType: AbstractDetector.TurnOff
- uid: PFVR.Player.Gestures.AbstractDetector.TurnOn
  name: TurnOn()
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_TurnOn
  commentId: M:PFVR.Player.Gestures.AbstractDetector.TurnOn
  fullName: PFVR.Player.Gestures.AbstractDetector.TurnOn()
  nameWithType: AbstractDetector.TurnOn()
- uid: PFVR.Player.Gestures.AbstractDetector.TurnOn*
  name: TurnOn
  href: api/PFVR.Player.Gestures.AbstractDetector.html#PFVR_Player_Gestures_AbstractDetector_TurnOn_
  commentId: Overload:PFVR.Player.Gestures.AbstractDetector.TurnOn
  isSpec: "True"
  fullName: PFVR.Player.Gestures.AbstractDetector.TurnOn
  nameWithType: AbstractDetector.TurnOn
- uid: PFVR.Player.Gestures.BasicDetector
  name: BasicDetector
  href: api/PFVR.Player.Gestures.BasicDetector.html
  commentId: T:PFVR.Player.Gestures.BasicDetector
  fullName: PFVR.Player.Gestures.BasicDetector
  nameWithType: BasicDetector
- uid: PFVR.Player.Gestures.BasicDetector.TurnOff
  name: TurnOff()
  href: api/PFVR.Player.Gestures.BasicDetector.html#PFVR_Player_Gestures_BasicDetector_TurnOff
  commentId: M:PFVR.Player.Gestures.BasicDetector.TurnOff
  fullName: PFVR.Player.Gestures.BasicDetector.TurnOff()
  nameWithType: BasicDetector.TurnOff()
- uid: PFVR.Player.Gestures.BasicDetector.TurnOff*
  name: TurnOff
  href: api/PFVR.Player.Gestures.BasicDetector.html#PFVR_Player_Gestures_BasicDetector_TurnOff_
  commentId: Overload:PFVR.Player.Gestures.BasicDetector.TurnOff
  isSpec: "True"
  fullName: PFVR.Player.Gestures.BasicDetector.TurnOff
  nameWithType: BasicDetector.TurnOff
- uid: PFVR.Player.Gestures.BasicDetector.TurnOn
  name: TurnOn()
  href: api/PFVR.Player.Gestures.BasicDetector.html#PFVR_Player_Gestures_BasicDetector_TurnOn
  commentId: M:PFVR.Player.Gestures.BasicDetector.TurnOn
  fullName: PFVR.Player.Gestures.BasicDetector.TurnOn()
  nameWithType: BasicDetector.TurnOn()
- uid: PFVR.Player.Gestures.BasicDetector.TurnOn*
  name: TurnOn
  href: api/PFVR.Player.Gestures.BasicDetector.html#PFVR_Player_Gestures_BasicDetector_TurnOn_
  commentId: Overload:PFVR.Player.Gestures.BasicDetector.TurnOn
  isSpec: "True"
  fullName: PFVR.Player.Gestures.BasicDetector.TurnOn
  nameWithType: BasicDetector.TurnOn
- uid: PFVR.Player.Gestures.ClapDetector
  name: ClapDetector
  href: api/PFVR.Player.Gestures.ClapDetector.html
  commentId: T:PFVR.Player.Gestures.ClapDetector
  fullName: PFVR.Player.Gestures.ClapDetector
  nameWithType: ClapDetector
- uid: PFVR.Player.Gestures.HandGatheringDetector
  name: HandGatheringDetector
  href: api/PFVR.Player.Gestures.HandGatheringDetector.html
  commentId: T:PFVR.Player.Gestures.HandGatheringDetector
  fullName: PFVR.Player.Gestures.HandGatheringDetector
  nameWithType: HandGatheringDetector
- uid: PFVR.Player.Gestures.HandGatheringDetector.TurnOff
  name: TurnOff()
  href: api/PFVR.Player.Gestures.HandGatheringDetector.html#PFVR_Player_Gestures_HandGatheringDetector_TurnOff
  commentId: M:PFVR.Player.Gestures.HandGatheringDetector.TurnOff
  fullName: PFVR.Player.Gestures.HandGatheringDetector.TurnOff()
  nameWithType: HandGatheringDetector.TurnOff()
- uid: PFVR.Player.Gestures.HandGatheringDetector.TurnOff*
  name: TurnOff
  href: api/PFVR.Player.Gestures.HandGatheringDetector.html#PFVR_Player_Gestures_HandGatheringDetector_TurnOff_
  commentId: Overload:PFVR.Player.Gestures.HandGatheringDetector.TurnOff
  isSpec: "True"
  fullName: PFVR.Player.Gestures.HandGatheringDetector.TurnOff
  nameWithType: HandGatheringDetector.TurnOff
- uid: PFVR.Player.Gestures.HandGatheringDetector.TurnOn
  name: TurnOn()
  href: api/PFVR.Player.Gestures.HandGatheringDetector.html#PFVR_Player_Gestures_HandGatheringDetector_TurnOn
  commentId: M:PFVR.Player.Gestures.HandGatheringDetector.TurnOn
  fullName: PFVR.Player.Gestures.HandGatheringDetector.TurnOn()
  nameWithType: HandGatheringDetector.TurnOn()
- uid: PFVR.Player.Gestures.HandGatheringDetector.TurnOn*
  name: TurnOn
  href: api/PFVR.Player.Gestures.HandGatheringDetector.html#PFVR_Player_Gestures_HandGatheringDetector_TurnOn_
  commentId: Overload:PFVR.Player.Gestures.HandGatheringDetector.TurnOn
  isSpec: "True"
  fullName: PFVR.Player.Gestures.HandGatheringDetector.TurnOn
  nameWithType: HandGatheringDetector.TurnOn
- uid: PFVR.Player.InterfaceType
  name: InterfaceType
  href: api/PFVR.Player.InterfaceType.html
  commentId: T:PFVR.Player.InterfaceType
  fullName: PFVR.Player.InterfaceType
  nameWithType: InterfaceType
- uid: PFVR.Player.InterfaceType.ManusVR
  name: ManusVR
  href: api/PFVR.Player.InterfaceType.html#PFVR_Player_InterfaceType_ManusVR
  commentId: F:PFVR.Player.InterfaceType.ManusVR
  fullName: PFVR.Player.InterfaceType.ManusVR
  nameWithType: InterfaceType.ManusVR
- uid: PFVR.Player.InterfaceType.MouseAndKeyboard
  name: MouseAndKeyboard
  href: api/PFVR.Player.InterfaceType.html#PFVR_Player_InterfaceType_MouseAndKeyboard
  commentId: F:PFVR.Player.InterfaceType.MouseAndKeyboard
  fullName: PFVR.Player.InterfaceType.MouseAndKeyboard
  nameWithType: InterfaceType.MouseAndKeyboard
- uid: PFVR.Player.ManusConnector
  name: ManusConnector
  href: api/PFVR.Player.ManusConnector.html
  commentId: T:PFVR.Player.ManusConnector
  fullName: PFVR.Player.ManusConnector
  nameWithType: ManusConnector
- uid: PFVR.Player.ManusConnector.NewGloveData
  name: ManusConnector.NewGloveData
  href: api/PFVR.Player.ManusConnector.NewGloveData.html
  commentId: T:PFVR.Player.ManusConnector.NewGloveData
  fullName: PFVR.Player.ManusConnector.NewGloveData
  nameWithType: ManusConnector.NewGloveData
- uid: PFVR.Player.ManusConnector.onLeftGloveData
  name: onLeftGloveData
  href: api/PFVR.Player.ManusConnector.html#PFVR_Player_ManusConnector_onLeftGloveData
  commentId: E:PFVR.Player.ManusConnector.onLeftGloveData
  fullName: PFVR.Player.ManusConnector.onLeftGloveData
  nameWithType: ManusConnector.onLeftGloveData
- uid: PFVR.Player.ManusConnector.onRightGloveData
  name: onRightGloveData
  href: api/PFVR.Player.ManusConnector.html#PFVR_Player_ManusConnector_onRightGloveData
  commentId: E:PFVR.Player.ManusConnector.onRightGloveData
  fullName: PFVR.Player.ManusConnector.onRightGloveData
  nameWithType: ManusConnector.onRightGloveData
- uid: PFVR.Player.ManusConnector.Rumble(ManusVR.Core.Apollo.GloveLaterality,System.UInt16,System.Single)
  name: Rumble(GloveLaterality, UInt16, Single)
  href: api/PFVR.Player.ManusConnector.html#PFVR_Player_ManusConnector_Rumble_ManusVR_Core_Apollo_GloveLaterality_System_UInt16_System_Single_
  commentId: M:PFVR.Player.ManusConnector.Rumble(ManusVR.Core.Apollo.GloveLaterality,System.UInt16,System.Single)
  fullName: PFVR.Player.ManusConnector.Rumble(ManusVR.Core.Apollo.GloveLaterality, System.UInt16, System.Single)
  nameWithType: ManusConnector.Rumble(GloveLaterality, UInt16, Single)
- uid: PFVR.Player.ManusConnector.Rumble*
  name: Rumble
  href: api/PFVR.Player.ManusConnector.html#PFVR_Player_ManusConnector_Rumble_
  commentId: Overload:PFVR.Player.ManusConnector.Rumble
  isSpec: "True"
  fullName: PFVR.Player.ManusConnector.Rumble
  nameWithType: ManusConnector.Rumble
- uid: PFVR.Player.PlayerBehaviour
  name: PlayerBehaviour
  href: api/PFVR.Player.PlayerBehaviour.html
  commentId: T:PFVR.Player.PlayerBehaviour
  fullName: PFVR.Player.PlayerBehaviour
  nameWithType: PlayerBehaviour
- uid: PFVR.Player.PlayerBehaviour.leftHand
  name: leftHand
  href: api/PFVR.Player.PlayerBehaviour.html#PFVR_Player_PlayerBehaviour_leftHand
  commentId: F:PFVR.Player.PlayerBehaviour.leftHand
  fullName: PFVR.Player.PlayerBehaviour.leftHand
  nameWithType: PlayerBehaviour.leftHand
- uid: PFVR.Player.PlayerBehaviour.motor
  name: motor
  href: api/PFVR.Player.PlayerBehaviour.html#PFVR_Player_PlayerBehaviour_motor
  commentId: P:PFVR.Player.PlayerBehaviour.motor
  fullName: PFVR.Player.PlayerBehaviour.motor
  nameWithType: PlayerBehaviour.motor
- uid: PFVR.Player.PlayerBehaviour.motor*
  name: motor
  href: api/PFVR.Player.PlayerBehaviour.html#PFVR_Player_PlayerBehaviour_motor_
  commentId: Overload:PFVR.Player.PlayerBehaviour.motor
  isSpec: "True"
  fullName: PFVR.Player.PlayerBehaviour.motor
  nameWithType: PlayerBehaviour.motor
- uid: PFVR.Player.PlayerBehaviour.rightHand
  name: rightHand
  href: api/PFVR.Player.PlayerBehaviour.html#PFVR_Player_PlayerBehaviour_rightHand
  commentId: F:PFVR.Player.PlayerBehaviour.rightHand
  fullName: PFVR.Player.PlayerBehaviour.rightHand
  nameWithType: PlayerBehaviour.rightHand
- uid: PFVR.Player.PlayerHandBehaviour
  name: PlayerHandBehaviour
  href: api/PFVR.Player.PlayerHandBehaviour.html
  commentId: T:PFVR.Player.PlayerHandBehaviour
  fullName: PFVR.Player.PlayerHandBehaviour
  nameWithType: PlayerHandBehaviour
- uid: PFVR.Player.PlayerHandBehaviour.acceleration
  name: acceleration
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_acceleration
  commentId: P:PFVR.Player.PlayerHandBehaviour.acceleration
  fullName: PFVR.Player.PlayerHandBehaviour.acceleration
  nameWithType: PlayerHandBehaviour.acceleration
- uid: PFVR.Player.PlayerHandBehaviour.acceleration*
  name: acceleration
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_acceleration_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.acceleration
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.acceleration
  nameWithType: PlayerHandBehaviour.acceleration
- uid: PFVR.Player.PlayerHandBehaviour.angle
  name: angle
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_angle
  commentId: P:PFVR.Player.PlayerHandBehaviour.angle
  fullName: PFVR.Player.PlayerHandBehaviour.angle
  nameWithType: PlayerHandBehaviour.angle
- uid: PFVR.Player.PlayerHandBehaviour.angle*
  name: angle
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_angle_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.angle
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.angle
  nameWithType: PlayerHandBehaviour.angle
- uid: PFVR.Player.PlayerHandBehaviour.enableDebugging
  name: enableDebugging
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_enableDebugging
  commentId: F:PFVR.Player.PlayerHandBehaviour.enableDebugging
  fullName: PFVR.Player.PlayerHandBehaviour.enableDebugging
  nameWithType: PlayerHandBehaviour.enableDebugging
- uid: PFVR.Player.PlayerHandBehaviour.gatheringCenter
  name: gatheringCenter
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_gatheringCenter
  commentId: F:PFVR.Player.PlayerHandBehaviour.gatheringCenter
  fullName: PFVR.Player.PlayerHandBehaviour.gatheringCenter
  nameWithType: PlayerHandBehaviour.gatheringCenter
- uid: PFVR.Player.PlayerHandBehaviour.indexFinger
  name: indexFinger
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_indexFinger
  commentId: F:PFVR.Player.PlayerHandBehaviour.indexFinger
  fullName: PFVR.Player.PlayerHandBehaviour.indexFinger
  nameWithType: PlayerHandBehaviour.indexFinger
- uid: PFVR.Player.PlayerHandBehaviour.infinityStone
  name: infinityStone
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_infinityStone
  commentId: F:PFVR.Player.PlayerHandBehaviour.infinityStone
  fullName: PFVR.Player.PlayerHandBehaviour.infinityStone
  nameWithType: PlayerHandBehaviour.infinityStone
- uid: PFVR.Player.PlayerHandBehaviour.isShaking
  name: isShaking
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_isShaking
  commentId: P:PFVR.Player.PlayerHandBehaviour.isShaking
  fullName: PFVR.Player.PlayerHandBehaviour.isShaking
  nameWithType: PlayerHandBehaviour.isShaking
- uid: PFVR.Player.PlayerHandBehaviour.isShaking*
  name: isShaking
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_isShaking_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.isShaking
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.isShaking
  nameWithType: PlayerHandBehaviour.isShaking
- uid: PFVR.Player.PlayerHandBehaviour.laterality
  name: laterality
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_laterality
  commentId: P:PFVR.Player.PlayerHandBehaviour.laterality
  fullName: PFVR.Player.PlayerHandBehaviour.laterality
  nameWithType: PlayerHandBehaviour.laterality
- uid: PFVR.Player.PlayerHandBehaviour.laterality*
  name: laterality
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_laterality_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.laterality
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.laterality
  nameWithType: PlayerHandBehaviour.laterality
- uid: PFVR.Player.PlayerHandBehaviour.middleFinger
  name: middleFinger
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_middleFinger
  commentId: F:PFVR.Player.PlayerHandBehaviour.middleFinger
  fullName: PFVR.Player.PlayerHandBehaviour.middleFinger
  nameWithType: PlayerHandBehaviour.middleFinger
- uid: PFVR.Player.PlayerHandBehaviour.owner
  name: owner
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_owner
  commentId: P:PFVR.Player.PlayerHandBehaviour.owner
  fullName: PFVR.Player.PlayerHandBehaviour.owner
  nameWithType: PlayerHandBehaviour.owner
- uid: PFVR.Player.PlayerHandBehaviour.owner*
  name: owner
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_owner_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.owner
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.owner
  nameWithType: PlayerHandBehaviour.owner
- uid: PFVR.Player.PlayerHandBehaviour.SetGesture(PFVR.ScriptableObjects.Gesture)
  name: SetGesture(Gesture)
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_SetGesture_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.Player.PlayerHandBehaviour.SetGesture(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.Player.PlayerHandBehaviour.SetGesture(PFVR.ScriptableObjects.Gesture)
  nameWithType: PlayerHandBehaviour.SetGesture(Gesture)
- uid: PFVR.Player.PlayerHandBehaviour.SetGesture*
  name: SetGesture
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_SetGesture_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.SetGesture
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.SetGesture
  nameWithType: PlayerHandBehaviour.SetGesture
- uid: PFVR.Player.PlayerHandBehaviour.status
  name: status
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_status
  commentId: F:PFVR.Player.PlayerHandBehaviour.status
  fullName: PFVR.Player.PlayerHandBehaviour.status
  nameWithType: PlayerHandBehaviour.status
- uid: PFVR.Player.PlayerHandBehaviour.tracker
  name: tracker
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_tracker
  commentId: P:PFVR.Player.PlayerHandBehaviour.tracker
  fullName: PFVR.Player.PlayerHandBehaviour.tracker
  nameWithType: PlayerHandBehaviour.tracker
- uid: PFVR.Player.PlayerHandBehaviour.tracker*
  name: tracker
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_tracker_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.tracker
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.tracker
  nameWithType: PlayerHandBehaviour.tracker
- uid: PFVR.Player.PlayerHandBehaviour.velocity
  name: velocity
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_velocity
  commentId: P:PFVR.Player.PlayerHandBehaviour.velocity
  fullName: PFVR.Player.PlayerHandBehaviour.velocity
  nameWithType: PlayerHandBehaviour.velocity
- uid: PFVR.Player.PlayerHandBehaviour.velocity*
  name: velocity
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_velocity_
  commentId: Overload:PFVR.Player.PlayerHandBehaviour.velocity
  isSpec: "True"
  fullName: PFVR.Player.PlayerHandBehaviour.velocity
  nameWithType: PlayerHandBehaviour.velocity
- uid: PFVR.Player.PlayerHandBehaviour.wrist
  name: wrist
  href: api/PFVR.Player.PlayerHandBehaviour.html#PFVR_Player_PlayerHandBehaviour_wrist
  commentId: F:PFVR.Player.PlayerHandBehaviour.wrist
  fullName: PFVR.Player.PlayerHandBehaviour.wrist
  nameWithType: PlayerHandBehaviour.wrist
- uid: PFVR.Player.PowerUp
  name: PowerUp
  href: api/PFVR.Player.PowerUp.html
  commentId: T:PFVR.Player.PowerUp
  fullName: PFVR.Player.PowerUp
  nameWithType: PowerUp
- uid: PFVR.Player.RumbleMixer
  name: RumbleMixer
  href: api/PFVR.Player.RumbleMixer.html
  commentId: T:PFVR.Player.RumbleMixer
  fullName: PFVR.Player.RumbleMixer
  nameWithType: RumbleMixer
- uid: PFVR.Player.RumbleMixer.#ctor(ManusVR.Core.Apollo.GloveLaterality,System.UInt16,System.Boolean)
  name: RumbleMixer(GloveLaterality, UInt16, Boolean)
  href: api/PFVR.Player.RumbleMixer.html#PFVR_Player_RumbleMixer__ctor_ManusVR_Core_Apollo_GloveLaterality_System_UInt16_System_Boolean_
  commentId: M:PFVR.Player.RumbleMixer.#ctor(ManusVR.Core.Apollo.GloveLaterality,System.UInt16,System.Boolean)
  fullName: PFVR.Player.RumbleMixer.RumbleMixer(ManusVR.Core.Apollo.GloveLaterality, System.UInt16, System.Boolean)
  nameWithType: RumbleMixer.RumbleMixer(GloveLaterality, UInt16, Boolean)
- uid: PFVR.Player.RumbleMixer.#ctor*
  name: RumbleMixer
  href: api/PFVR.Player.RumbleMixer.html#PFVR_Player_RumbleMixer__ctor_
  commentId: Overload:PFVR.Player.RumbleMixer.#ctor
  isSpec: "True"
  fullName: PFVR.Player.RumbleMixer.RumbleMixer
  nameWithType: RumbleMixer.RumbleMixer
- uid: PFVR.Player.RumbleMixer.Rumble(System.UInt16,System.Single)
  name: Rumble(UInt16, Single)
  href: api/PFVR.Player.RumbleMixer.html#PFVR_Player_RumbleMixer_Rumble_System_UInt16_System_Single_
  commentId: M:PFVR.Player.RumbleMixer.Rumble(System.UInt16,System.Single)
  fullName: PFVR.Player.RumbleMixer.Rumble(System.UInt16, System.Single)
  nameWithType: RumbleMixer.Rumble(UInt16, Single)
- uid: PFVR.Player.RumbleMixer.Rumble*
  name: Rumble
  href: api/PFVR.Player.RumbleMixer.html#PFVR_Player_RumbleMixer_Rumble_
  commentId: Overload:PFVR.Player.RumbleMixer.Rumble
  isSpec: "True"
  fullName: PFVR.Player.RumbleMixer.Rumble
  nameWithType: RumbleMixer.Rumble
- uid: PFVR.Player.RumbleMixer.RumbleMixerRoutine
  name: RumbleMixerRoutine()
  href: api/PFVR.Player.RumbleMixer.html#PFVR_Player_RumbleMixer_RumbleMixerRoutine
  commentId: M:PFVR.Player.RumbleMixer.RumbleMixerRoutine
  fullName: PFVR.Player.RumbleMixer.RumbleMixerRoutine()
  nameWithType: RumbleMixer.RumbleMixerRoutine()
- uid: PFVR.Player.RumbleMixer.RumbleMixerRoutine*
  name: RumbleMixerRoutine
  href: api/PFVR.Player.RumbleMixer.html#PFVR_Player_RumbleMixer_RumbleMixerRoutine_
  commentId: Overload:PFVR.Player.RumbleMixer.RumbleMixerRoutine
  isSpec: "True"
  fullName: PFVR.Player.RumbleMixer.RumbleMixerRoutine
  nameWithType: RumbleMixer.RumbleMixerRoutine
- uid: PFVR.Player.SpawnPoint
  name: SpawnPoint
  href: api/PFVR.Player.SpawnPoint.html
  commentId: T:PFVR.Player.SpawnPoint
  fullName: PFVR.Player.SpawnPoint
  nameWithType: SpawnPoint
- uid: PFVR.Player.SteamConnector
  name: SteamConnector
  href: api/PFVR.Player.SteamConnector.html
  commentId: T:PFVR.Player.SteamConnector
  fullName: PFVR.Player.SteamConnector
  nameWithType: SteamConnector
- uid: PFVR.Player.SteamConnector.leftTracker
  name: leftTracker
  href: api/PFVR.Player.SteamConnector.html#PFVR_Player_SteamConnector_leftTracker
  commentId: P:PFVR.Player.SteamConnector.leftTracker
  fullName: PFVR.Player.SteamConnector.leftTracker
  nameWithType: SteamConnector.leftTracker
- uid: PFVR.Player.SteamConnector.leftTracker*
  name: leftTracker
  href: api/PFVR.Player.SteamConnector.html#PFVR_Player_SteamConnector_leftTracker_
  commentId: Overload:PFVR.Player.SteamConnector.leftTracker
  isSpec: "True"
  fullName: PFVR.Player.SteamConnector.leftTracker
  nameWithType: SteamConnector.leftTracker
- uid: PFVR.Player.SteamConnector.rightTracker
  name: rightTracker
  href: api/PFVR.Player.SteamConnector.html#PFVR_Player_SteamConnector_rightTracker
  commentId: P:PFVR.Player.SteamConnector.rightTracker
  fullName: PFVR.Player.SteamConnector.rightTracker
  nameWithType: SteamConnector.rightTracker
- uid: PFVR.Player.SteamConnector.rightTracker*
  name: rightTracker
  href: api/PFVR.Player.SteamConnector.html#PFVR_Player_SteamConnector_rightTracker_
  commentId: Overload:PFVR.Player.SteamConnector.rightTracker
  isSpec: "True"
  fullName: PFVR.Player.SteamConnector.rightTracker
  nameWithType: SteamConnector.rightTracker
- uid: PFVR.Player.VRCollider
  name: VRCollider
  href: api/PFVR.Player.VRCollider.html
  commentId: T:PFVR.Player.VRCollider
  fullName: PFVR.Player.VRCollider
  nameWithType: VRCollider
- uid: PFVR.ScriptableObjects
  name: PFVR.ScriptableObjects
  href: api/PFVR.ScriptableObjects.html
  commentId: N:PFVR.ScriptableObjects
  fullName: PFVR.ScriptableObjects
  nameWithType: PFVR.ScriptableObjects
- uid: PFVR.ScriptableObjects.Gesture
  name: Gesture
  href: api/PFVR.ScriptableObjects.Gesture.html
  commentId: T:PFVR.ScriptableObjects.Gesture
  fullName: PFVR.ScriptableObjects.Gesture
  nameWithType: Gesture
- uid: PFVR.ScriptableObjects.Gesture.icon
  name: icon
  href: api/PFVR.ScriptableObjects.Gesture.html#PFVR_ScriptableObjects_Gesture_icon
  commentId: F:PFVR.ScriptableObjects.Gesture.icon
  fullName: PFVR.ScriptableObjects.Gesture.icon
  nameWithType: Gesture.icon
- uid: PFVR.ScriptableObjects.Gesture.isComplex
  name: isComplex
  href: api/PFVR.ScriptableObjects.Gesture.html#PFVR_ScriptableObjects_Gesture_isComplex
  commentId: F:PFVR.ScriptableObjects.Gesture.isComplex
  fullName: PFVR.ScriptableObjects.Gesture.isComplex
  nameWithType: Gesture.isComplex
- uid: PFVR.ScriptableObjects.Gesture.spellColor
  name: spellColor
  href: api/PFVR.ScriptableObjects.Gesture.html#PFVR_ScriptableObjects_Gesture_spellColor
  commentId: P:PFVR.ScriptableObjects.Gesture.spellColor
  fullName: PFVR.ScriptableObjects.Gesture.spellColor
  nameWithType: Gesture.spellColor
- uid: PFVR.ScriptableObjects.Gesture.spellColor*
  name: spellColor
  href: api/PFVR.ScriptableObjects.Gesture.html#PFVR_ScriptableObjects_Gesture_spellColor_
  commentId: Overload:PFVR.ScriptableObjects.Gesture.spellColor
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.Gesture.spellColor
  nameWithType: Gesture.spellColor
- uid: PFVR.ScriptableObjects.Gesture.spellPrefab
  name: spellPrefab
  href: api/PFVR.ScriptableObjects.Gesture.html#PFVR_ScriptableObjects_Gesture_spellPrefab
  commentId: F:PFVR.ScriptableObjects.Gesture.spellPrefab
  fullName: PFVR.ScriptableObjects.Gesture.spellPrefab
  nameWithType: Gesture.spellPrefab
- uid: PFVR.ScriptableObjects.GestureProfile
  name: GestureProfile
  href: api/PFVR.ScriptableObjects.GestureProfile.html
  commentId: T:PFVR.ScriptableObjects.GestureProfile
  fullName: PFVR.ScriptableObjects.GestureProfile
  nameWithType: GestureProfile
- uid: PFVR.ScriptableObjects.GestureProfile.gestureSet
  name: gestureSet
  href: api/PFVR.ScriptableObjects.GestureProfile.html#PFVR_ScriptableObjects_GestureProfile_gestureSet
  commentId: F:PFVR.ScriptableObjects.GestureProfile.gestureSet
  fullName: PFVR.ScriptableObjects.GestureProfile.gestureSet
  nameWithType: GestureProfile.gestureSet
- uid: PFVR.ScriptableObjects.GestureProfile.modelDataPath
  name: modelDataPath
  href: api/PFVR.ScriptableObjects.GestureProfile.html#PFVR_ScriptableObjects_GestureProfile_modelDataPath
  commentId: P:PFVR.ScriptableObjects.GestureProfile.modelDataPath
  fullName: PFVR.ScriptableObjects.GestureProfile.modelDataPath
  nameWithType: GestureProfile.modelDataPath
- uid: PFVR.ScriptableObjects.GestureProfile.modelDataPath*
  name: modelDataPath
  href: api/PFVR.ScriptableObjects.GestureProfile.html#PFVR_ScriptableObjects_GestureProfile_modelDataPath_
  commentId: Overload:PFVR.ScriptableObjects.GestureProfile.modelDataPath
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureProfile.modelDataPath
  nameWithType: GestureProfile.modelDataPath
- uid: PFVR.ScriptableObjects.GestureProfile.trackingDataPath
  name: trackingDataPath
  href: api/PFVR.ScriptableObjects.GestureProfile.html#PFVR_ScriptableObjects_GestureProfile_trackingDataPath
  commentId: P:PFVR.ScriptableObjects.GestureProfile.trackingDataPath
  fullName: PFVR.ScriptableObjects.GestureProfile.trackingDataPath
  nameWithType: GestureProfile.trackingDataPath
- uid: PFVR.ScriptableObjects.GestureProfile.trackingDataPath*
  name: trackingDataPath
  href: api/PFVR.ScriptableObjects.GestureProfile.html#PFVR_ScriptableObjects_GestureProfile_trackingDataPath_
  commentId: Overload:PFVR.ScriptableObjects.GestureProfile.trackingDataPath
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureProfile.trackingDataPath
  nameWithType: GestureProfile.trackingDataPath
- uid: PFVR.ScriptableObjects.GestureSet
  name: GestureSet
  href: api/PFVR.ScriptableObjects.GestureSet.html
  commentId: T:PFVR.ScriptableObjects.GestureSet
  fullName: PFVR.ScriptableObjects.GestureSet
  nameWithType: GestureSet
- uid: PFVR.ScriptableObjects.GestureSet.Append(PFVR.ScriptableObjects.Gesture)
  name: Append(Gesture)
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Append_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.ScriptableObjects.GestureSet.Append(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.ScriptableObjects.GestureSet.Append(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureSet.Append(Gesture)
- uid: PFVR.ScriptableObjects.GestureSet.Append*
  name: Append
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Append_
  commentId: Overload:PFVR.ScriptableObjects.GestureSet.Append
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureSet.Append
  nameWithType: GestureSet.Append
- uid: PFVR.ScriptableObjects.GestureSet.Contains(PFVR.ScriptableObjects.Gesture)
  name: Contains(Gesture)
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Contains_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.ScriptableObjects.GestureSet.Contains(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.ScriptableObjects.GestureSet.Contains(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureSet.Contains(Gesture)
- uid: PFVR.ScriptableObjects.GestureSet.Contains*
  name: Contains
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Contains_
  commentId: Overload:PFVR.ScriptableObjects.GestureSet.Contains
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureSet.Contains
  nameWithType: GestureSet.Contains
- uid: PFVR.ScriptableObjects.GestureSet.GestureDictionary
  name: GestureSet.GestureDictionary
  href: api/PFVR.ScriptableObjects.GestureSet.GestureDictionary.html
  commentId: T:PFVR.ScriptableObjects.GestureSet.GestureDictionary
  fullName: PFVR.ScriptableObjects.GestureSet.GestureDictionary
  nameWithType: GestureSet.GestureDictionary
- uid: PFVR.ScriptableObjects.GestureSet.gestureNames
  name: gestureNames
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_gestureNames
  commentId: P:PFVR.ScriptableObjects.GestureSet.gestureNames
  fullName: PFVR.ScriptableObjects.GestureSet.gestureNames
  nameWithType: GestureSet.gestureNames
- uid: PFVR.ScriptableObjects.GestureSet.gestureNames*
  name: gestureNames
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_gestureNames_
  commentId: Overload:PFVR.ScriptableObjects.GestureSet.gestureNames
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureSet.gestureNames
  nameWithType: GestureSet.gestureNames
- uid: PFVR.ScriptableObjects.GestureSet.gestureObjects
  name: gestureObjects
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_gestureObjects
  commentId: P:PFVR.ScriptableObjects.GestureSet.gestureObjects
  fullName: PFVR.ScriptableObjects.GestureSet.gestureObjects
  nameWithType: GestureSet.gestureObjects
- uid: PFVR.ScriptableObjects.GestureSet.gestureObjects*
  name: gestureObjects
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_gestureObjects_
  commentId: Overload:PFVR.ScriptableObjects.GestureSet.gestureObjects
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureSet.gestureObjects
  nameWithType: GestureSet.gestureObjects
- uid: PFVR.ScriptableObjects.GestureSet.Item(System.String)
  name: Item[String]
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Item_System_String_
  commentId: P:PFVR.ScriptableObjects.GestureSet.Item(System.String)
  name.vb: Item(String)
  fullName: PFVR.ScriptableObjects.GestureSet.Item[System.String]
  fullName.vb: PFVR.ScriptableObjects.GestureSet.Item(System.String)
  nameWithType: GestureSet.Item[String]
  nameWithType.vb: GestureSet.Item(String)
- uid: PFVR.ScriptableObjects.GestureSet.Item*
  name: Item
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Item_
  commentId: Overload:PFVR.ScriptableObjects.GestureSet.Item
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureSet.Item
  nameWithType: GestureSet.Item
- uid: PFVR.ScriptableObjects.GestureSet.Remove(PFVR.ScriptableObjects.Gesture)
  name: Remove(Gesture)
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Remove_PFVR_ScriptableObjects_Gesture_
  commentId: M:PFVR.ScriptableObjects.GestureSet.Remove(PFVR.ScriptableObjects.Gesture)
  fullName: PFVR.ScriptableObjects.GestureSet.Remove(PFVR.ScriptableObjects.Gesture)
  nameWithType: GestureSet.Remove(Gesture)
- uid: PFVR.ScriptableObjects.GestureSet.Remove*
  name: Remove
  href: api/PFVR.ScriptableObjects.GestureSet.html#PFVR_ScriptableObjects_GestureSet_Remove_
  commentId: Overload:PFVR.ScriptableObjects.GestureSet.Remove
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.GestureSet.Remove
  nameWithType: GestureSet.Remove
- uid: PFVR.ScriptableObjects.Level
  name: Level
  href: api/PFVR.ScriptableObjects.Level.html
  commentId: T:PFVR.ScriptableObjects.Level
  fullName: PFVR.ScriptableObjects.Level
  nameWithType: Level
- uid: PFVR.ScriptableObjects.Level.scene
  name: scene
  href: api/PFVR.ScriptableObjects.Level.html#PFVR_ScriptableObjects_Level_scene
  commentId: F:PFVR.ScriptableObjects.Level.scene
  fullName: PFVR.ScriptableObjects.Level.scene
  nameWithType: Level.scene
- uid: PFVR.ScriptableObjects.SerializableDictionary`2
  name: SerializableDictionary<TKey, TValue>
  href: api/PFVR.ScriptableObjects.SerializableDictionary-2.html
  commentId: T:PFVR.ScriptableObjects.SerializableDictionary`2
  name.vb: SerializableDictionary(Of TKey, TValue)
  fullName: PFVR.ScriptableObjects.SerializableDictionary<TKey, TValue>
  fullName.vb: PFVR.ScriptableObjects.SerializableDictionary(Of TKey, TValue)
  nameWithType: SerializableDictionary<TKey, TValue>
  nameWithType.vb: SerializableDictionary(Of TKey, TValue)
- uid: PFVR.ScriptableObjects.SerializableDictionary`2.OnAfterDeserialize
  name: OnAfterDeserialize()
  href: api/PFVR.ScriptableObjects.SerializableDictionary-2.html#PFVR_ScriptableObjects_SerializableDictionary_2_OnAfterDeserialize
  commentId: M:PFVR.ScriptableObjects.SerializableDictionary`2.OnAfterDeserialize
  fullName: PFVR.ScriptableObjects.SerializableDictionary<TKey, TValue>.OnAfterDeserialize()
  fullName.vb: PFVR.ScriptableObjects.SerializableDictionary(Of TKey, TValue).OnAfterDeserialize()
  nameWithType: SerializableDictionary<TKey, TValue>.OnAfterDeserialize()
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnAfterDeserialize()
- uid: PFVR.ScriptableObjects.SerializableDictionary`2.OnAfterDeserialize*
  name: OnAfterDeserialize
  href: api/PFVR.ScriptableObjects.SerializableDictionary-2.html#PFVR_ScriptableObjects_SerializableDictionary_2_OnAfterDeserialize_
  commentId: Overload:PFVR.ScriptableObjects.SerializableDictionary`2.OnAfterDeserialize
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.SerializableDictionary<TKey, TValue>.OnAfterDeserialize
  fullName.vb: PFVR.ScriptableObjects.SerializableDictionary(Of TKey, TValue).OnAfterDeserialize
  nameWithType: SerializableDictionary<TKey, TValue>.OnAfterDeserialize
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnAfterDeserialize
- uid: PFVR.ScriptableObjects.SerializableDictionary`2.OnBeforeSerialize
  name: OnBeforeSerialize()
  href: api/PFVR.ScriptableObjects.SerializableDictionary-2.html#PFVR_ScriptableObjects_SerializableDictionary_2_OnBeforeSerialize
  commentId: M:PFVR.ScriptableObjects.SerializableDictionary`2.OnBeforeSerialize
  fullName: PFVR.ScriptableObjects.SerializableDictionary<TKey, TValue>.OnBeforeSerialize()
  fullName.vb: PFVR.ScriptableObjects.SerializableDictionary(Of TKey, TValue).OnBeforeSerialize()
  nameWithType: SerializableDictionary<TKey, TValue>.OnBeforeSerialize()
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnBeforeSerialize()
- uid: PFVR.ScriptableObjects.SerializableDictionary`2.OnBeforeSerialize*
  name: OnBeforeSerialize
  href: api/PFVR.ScriptableObjects.SerializableDictionary-2.html#PFVR_ScriptableObjects_SerializableDictionary_2_OnBeforeSerialize_
  commentId: Overload:PFVR.ScriptableObjects.SerializableDictionary`2.OnBeforeSerialize
  isSpec: "True"
  fullName: PFVR.ScriptableObjects.SerializableDictionary<TKey, TValue>.OnBeforeSerialize
  fullName.vb: PFVR.ScriptableObjects.SerializableDictionary(Of TKey, TValue).OnBeforeSerialize
  nameWithType: SerializableDictionary<TKey, TValue>.OnBeforeSerialize
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnBeforeSerialize
- uid: PFVR.Settings
  name: PFVR.Settings
  href: api/PFVR.Settings.html
  commentId: N:PFVR.Settings
  fullName: PFVR.Settings
  nameWithType: PFVR.Settings
- uid: PFVR.Settings.GameManager
  name: GameManager
  href: api/PFVR.Settings.GameManager.html
  commentId: T:PFVR.Settings.GameManager
  fullName: PFVR.Settings.GameManager
  nameWithType: GameManager
- uid: PFVR.Settings.GameManager.Exit
  name: Exit()
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_Exit
  commentId: M:PFVR.Settings.GameManager.Exit
  fullName: PFVR.Settings.GameManager.Exit()
  nameWithType: GameManager.Exit()
- uid: PFVR.Settings.GameManager.Exit*
  name: Exit
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_Exit_
  commentId: Overload:PFVR.Settings.GameManager.Exit
  isSpec: "True"
  fullName: PFVR.Settings.GameManager.Exit
  nameWithType: GameManager.Exit
- uid: PFVR.Settings.GameManager.instance
  name: instance
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_instance
  commentId: P:PFVR.Settings.GameManager.instance
  fullName: PFVR.Settings.GameManager.instance
  nameWithType: GameManager.instance
- uid: PFVR.Settings.GameManager.instance*
  name: instance
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_instance_
  commentId: Overload:PFVR.Settings.GameManager.instance
  isSpec: "True"
  fullName: PFVR.Settings.GameManager.instance
  nameWithType: GameManager.instance
- uid: PFVR.Settings.GameManager.LoadLevel(PFVR.ScriptableObjects.Level)
  name: LoadLevel(Level)
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_LoadLevel_PFVR_ScriptableObjects_Level_
  commentId: M:PFVR.Settings.GameManager.LoadLevel(PFVR.ScriptableObjects.Level)
  fullName: PFVR.Settings.GameManager.LoadLevel(PFVR.ScriptableObjects.Level)
  nameWithType: GameManager.LoadLevel(Level)
- uid: PFVR.Settings.GameManager.LoadLevel*
  name: LoadLevel
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_LoadLevel_
  commentId: Overload:PFVR.Settings.GameManager.LoadLevel
  isSpec: "True"
  fullName: PFVR.Settings.GameManager.LoadLevel
  nameWithType: GameManager.LoadLevel
- uid: PFVR.Settings.GameManager.LoadMainMenu
  name: LoadMainMenu()
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_LoadMainMenu
  commentId: M:PFVR.Settings.GameManager.LoadMainMenu
  fullName: PFVR.Settings.GameManager.LoadMainMenu()
  nameWithType: GameManager.LoadMainMenu()
- uid: PFVR.Settings.GameManager.LoadMainMenu*
  name: LoadMainMenu
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_LoadMainMenu_
  commentId: Overload:PFVR.Settings.GameManager.LoadMainMenu
  isSpec: "True"
  fullName: PFVR.Settings.GameManager.LoadMainMenu
  nameWithType: GameManager.LoadMainMenu
- uid: PFVR.Settings.GameManager.settings
  name: settings
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_settings
  commentId: F:PFVR.Settings.GameManager.settings
  fullName: PFVR.Settings.GameManager.settings
  nameWithType: GameManager.settings
- uid: PFVR.Settings.GameManager.TakeScreenshot
  name: TakeScreenshot()
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_TakeScreenshot
  commentId: M:PFVR.Settings.GameManager.TakeScreenshot
  fullName: PFVR.Settings.GameManager.TakeScreenshot()
  nameWithType: GameManager.TakeScreenshot()
- uid: PFVR.Settings.GameManager.TakeScreenshot*
  name: TakeScreenshot
  href: api/PFVR.Settings.GameManager.html#PFVR_Settings_GameManager_TakeScreenshot_
  commentId: Overload:PFVR.Settings.GameManager.TakeScreenshot
  isSpec: "True"
  fullName: PFVR.Settings.GameManager.TakeScreenshot
  nameWithType: GameManager.TakeScreenshot
- uid: PFVR.Settings.GameSettings
  name: GameSettings
  href: api/PFVR.Settings.GameSettings.html
  commentId: T:PFVR.Settings.GameSettings
  fullName: PFVR.Settings.GameSettings
  nameWithType: GameSettings
- uid: PFVR.Settings.GameSettings.instance
  name: instance
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_instance
  commentId: P:PFVR.Settings.GameSettings.instance
  fullName: PFVR.Settings.GameSettings.instance
  nameWithType: GameSettings.instance
- uid: PFVR.Settings.GameSettings.instance*
  name: instance
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_instance_
  commentId: Overload:PFVR.Settings.GameSettings.instance
  isSpec: "True"
  fullName: PFVR.Settings.GameSettings.instance
  nameWithType: GameSettings.instance
- uid: PFVR.Settings.GameSettings.interfaceType
  name: interfaceType
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_interfaceType
  commentId: F:PFVR.Settings.GameSettings.interfaceType
  fullName: PFVR.Settings.GameSettings.interfaceType
  nameWithType: GameSettings.interfaceType
- uid: PFVR.Settings.GameSettings.levels
  name: levels
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_levels
  commentId: F:PFVR.Settings.GameSettings.levels
  fullName: PFVR.Settings.GameSettings.levels
  nameWithType: GameSettings.levels
- uid: PFVR.Settings.GameSettings.mainMenu
  name: mainMenu
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_mainMenu
  commentId: F:PFVR.Settings.GameSettings.mainMenu
  fullName: PFVR.Settings.GameSettings.mainMenu
  nameWithType: GameSettings.mainMenu
- uid: PFVR.Settings.GameSettings.menuKey
  name: menuKey
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_menuKey
  commentId: F:PFVR.Settings.GameSettings.menuKey
  fullName: PFVR.Settings.GameSettings.menuKey
  nameWithType: GameSettings.menuKey
- uid: PFVR.Settings.GameSettings.screenshotKey
  name: screenshotKey
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_screenshotKey
  commentId: F:PFVR.Settings.GameSettings.screenshotKey
  fullName: PFVR.Settings.GameSettings.screenshotKey
  nameWithType: GameSettings.screenshotKey
- uid: PFVR.Settings.GameSettings.screenshotPath
  name: screenshotPath
  href: api/PFVR.Settings.GameSettings.html#PFVR_Settings_GameSettings_screenshotPath
  commentId: F:PFVR.Settings.GameSettings.screenshotPath
  fullName: PFVR.Settings.GameSettings.screenshotPath
  nameWithType: GameSettings.screenshotPath
- uid: PFVR.SFX
  name: PFVR.SFX
  href: api/PFVR.SFX.html
  commentId: N:PFVR.SFX
  fullName: PFVR.SFX
  nameWithType: PFVR.SFX
- uid: PFVR.SFX.OneShot
  name: OneShot
  href: api/PFVR.SFX.OneShot.html
  commentId: T:PFVR.SFX.OneShot
  fullName: PFVR.SFX.OneShot
  nameWithType: OneShot
- uid: PFVR.SFX.OneShot.IncreasePitch(System.Single)
  name: IncreasePitch(Single)
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_IncreasePitch_System_Single_
  commentId: M:PFVR.SFX.OneShot.IncreasePitch(System.Single)
  fullName: PFVR.SFX.OneShot.IncreasePitch(System.Single)
  nameWithType: OneShot.IncreasePitch(Single)
- uid: PFVR.SFX.OneShot.IncreasePitch*
  name: IncreasePitch
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_IncreasePitch_
  commentId: Overload:PFVR.SFX.OneShot.IncreasePitch
  isSpec: "True"
  fullName: PFVR.SFX.OneShot.IncreasePitch
  nameWithType: OneShot.IncreasePitch
- uid: PFVR.SFX.OneShot.Pause
  name: Pause()
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_Pause
  commentId: M:PFVR.SFX.OneShot.Pause
  fullName: PFVR.SFX.OneShot.Pause()
  nameWithType: OneShot.Pause()
- uid: PFVR.SFX.OneShot.Pause*
  name: Pause
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_Pause_
  commentId: Overload:PFVR.SFX.OneShot.Pause
  isSpec: "True"
  fullName: PFVR.SFX.OneShot.Pause
  nameWithType: OneShot.Pause
- uid: PFVR.SFX.OneShot.Play
  name: Play()
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_Play
  commentId: M:PFVR.SFX.OneShot.Play
  fullName: PFVR.SFX.OneShot.Play()
  nameWithType: OneShot.Play()
- uid: PFVR.SFX.OneShot.Play*
  name: Play
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_Play_
  commentId: Overload:PFVR.SFX.OneShot.Play
  isSpec: "True"
  fullName: PFVR.SFX.OneShot.Play
  nameWithType: OneShot.Play
- uid: PFVR.SFX.OneShot.UnPause
  name: UnPause()
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_UnPause
  commentId: M:PFVR.SFX.OneShot.UnPause
  fullName: PFVR.SFX.OneShot.UnPause()
  nameWithType: OneShot.UnPause()
- uid: PFVR.SFX.OneShot.UnPause*
  name: UnPause
  href: api/PFVR.SFX.OneShot.html#PFVR_SFX_OneShot_UnPause_
  commentId: Overload:PFVR.SFX.OneShot.UnPause
  isSpec: "True"
  fullName: PFVR.SFX.OneShot.UnPause
  nameWithType: OneShot.UnPause
- uid: PFVR.Spells
  name: PFVR.Spells
  href: api/PFVR.Spells.html
  commentId: N:PFVR.Spells
  fullName: PFVR.Spells
  nameWithType: PFVR.Spells
- uid: PFVR.Spells.AbstractSpell
  name: AbstractSpell
  href: api/PFVR.Spells.AbstractSpell.html
  commentId: T:PFVR.Spells.AbstractSpell
  fullName: PFVR.Spells.AbstractSpell
  nameWithType: AbstractSpell
- uid: PFVR.Spells.AbstractSpell.glowColor
  name: glowColor
  href: api/PFVR.Spells.AbstractSpell.html#PFVR_Spells_AbstractSpell_glowColor
  commentId: F:PFVR.Spells.AbstractSpell.glowColor
  fullName: PFVR.Spells.AbstractSpell.glowColor
  nameWithType: AbstractSpell.glowColor
- uid: PFVR.Spells.AbstractSpell.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.AbstractSpell.html#PFVR_Spells_AbstractSpell_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.AbstractSpell.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.AbstractSpell.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: AbstractSpell.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.AbstractSpell.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.AbstractSpell.html#PFVR_Spells_AbstractSpell_OnEnter_
  commentId: Overload:PFVR.Spells.AbstractSpell.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.AbstractSpell.OnEnter
  nameWithType: AbstractSpell.OnEnter
- uid: PFVR.Spells.AbstractSpell.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.AbstractSpell.html#PFVR_Spells_AbstractSpell_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.AbstractSpell.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.AbstractSpell.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: AbstractSpell.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.AbstractSpell.OnExit*
  name: OnExit
  href: api/PFVR.Spells.AbstractSpell.html#PFVR_Spells_AbstractSpell_OnExit_
  commentId: Overload:PFVR.Spells.AbstractSpell.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.AbstractSpell.OnExit
  nameWithType: AbstractSpell.OnExit
- uid: PFVR.Spells.AbstractSpell.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.AbstractSpell.html#PFVR_Spells_AbstractSpell_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.AbstractSpell.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.AbstractSpell.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: AbstractSpell.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.AbstractSpell.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.AbstractSpell.html#PFVR_Spells_AbstractSpell_OnUpdate_
  commentId: Overload:PFVR.Spells.AbstractSpell.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.AbstractSpell.OnUpdate
  nameWithType: AbstractSpell.OnUpdate
- uid: PFVR.Spells.EnergyWave
  name: PFVR.Spells.EnergyWave
  href: api/PFVR.Spells.EnergyWave.html
  commentId: N:PFVR.Spells.EnergyWave
  fullName: PFVR.Spells.EnergyWave
  nameWithType: PFVR.Spells.EnergyWave
- uid: PFVR.Spells.EnergyWave.MetroidWave
  name: MetroidWave
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html
  commentId: T:PFVR.Spells.EnergyWave.MetroidWave
  fullName: PFVR.Spells.EnergyWave.MetroidWave
  nameWithType: MetroidWave
- uid: PFVR.Spells.EnergyWave.MetroidWave.activateCharge
  name: activateCharge
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_activateCharge
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.activateCharge
  fullName: PFVR.Spells.EnergyWave.MetroidWave.activateCharge
  nameWithType: MetroidWave.activateCharge
- uid: PFVR.Spells.EnergyWave.MetroidWave.cannonParticleShooter
  name: cannonParticleShooter
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_cannonParticleShooter
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.cannonParticleShooter
  fullName: PFVR.Spells.EnergyWave.MetroidWave.cannonParticleShooter
  nameWithType: MetroidWave.cannonParticleShooter
- uid: PFVR.Spells.EnergyWave.MetroidWave.charged
  name: charged
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_charged
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.charged
  fullName: PFVR.Spells.EnergyWave.MetroidWave.charged
  nameWithType: MetroidWave.charged
- uid: PFVR.Spells.EnergyWave.MetroidWave.chargedCannonParticle
  name: chargedCannonParticle
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_chargedCannonParticle
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.chargedCannonParticle
  fullName: PFVR.Spells.EnergyWave.MetroidWave.chargedCannonParticle
  nameWithType: MetroidWave.chargedCannonParticle
- uid: PFVR.Spells.EnergyWave.MetroidWave.chargedEmission
  name: chargedEmission
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_chargedEmission
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.chargedEmission
  fullName: PFVR.Spells.EnergyWave.MetroidWave.chargedEmission
  nameWithType: MetroidWave.chargedEmission
- uid: PFVR.Spells.EnergyWave.MetroidWave.chargedParticle
  name: chargedParticle
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_chargedParticle
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.chargedParticle
  fullName: PFVR.Spells.EnergyWave.MetroidWave.chargedParticle
  nameWithType: MetroidWave.chargedParticle
- uid: PFVR.Spells.EnergyWave.MetroidWave.chargeTime
  name: chargeTime
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_chargeTime
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.chargeTime
  fullName: PFVR.Spells.EnergyWave.MetroidWave.chargeTime
  nameWithType: MetroidWave.chargeTime
- uid: PFVR.Spells.EnergyWave.MetroidWave.charging
  name: charging
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_charging
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.charging
  fullName: PFVR.Spells.EnergyWave.MetroidWave.charging
  nameWithType: MetroidWave.charging
- uid: PFVR.Spells.EnergyWave.MetroidWave.chargingParticle
  name: chargingParticle
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_chargingParticle
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.chargingParticle
  fullName: PFVR.Spells.EnergyWave.MetroidWave.chargingParticle
  nameWithType: MetroidWave.chargingParticle
- uid: PFVR.Spells.EnergyWave.MetroidWave.finalEmissionColor
  name: finalEmissionColor
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_finalEmissionColor
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.finalEmissionColor
  fullName: PFVR.Spells.EnergyWave.MetroidWave.finalEmissionColor
  nameWithType: MetroidWave.finalEmissionColor
- uid: PFVR.Spells.EnergyWave.MetroidWave.holdTime
  name: holdTime
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_holdTime
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.holdTime
  fullName: PFVR.Spells.EnergyWave.MetroidWave.holdTime
  nameWithType: MetroidWave.holdTime
- uid: PFVR.Spells.EnergyWave.MetroidWave.lineParticles
  name: lineParticles
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_lineParticles
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.lineParticles
  fullName: PFVR.Spells.EnergyWave.MetroidWave.lineParticles
  nameWithType: MetroidWave.lineParticles
- uid: PFVR.Spells.EnergyWave.MetroidWave.muzzleFlash
  name: muzzleFlash
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_muzzleFlash
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.muzzleFlash
  fullName: PFVR.Spells.EnergyWave.MetroidWave.muzzleFlash
  nameWithType: MetroidWave.muzzleFlash
- uid: PFVR.Spells.EnergyWave.MetroidWave.normalEmissionColor
  name: normalEmissionColor
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_normalEmissionColor
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.normalEmissionColor
  fullName: PFVR.Spells.EnergyWave.MetroidWave.normalEmissionColor
  nameWithType: MetroidWave.normalEmissionColor
- uid: PFVR.Spells.EnergyWave.MetroidWave.punchDuration
  name: punchDuration
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_punchDuration
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.punchDuration
  fullName: PFVR.Spells.EnergyWave.MetroidWave.punchDuration
  nameWithType: MetroidWave.punchDuration
- uid: PFVR.Spells.EnergyWave.MetroidWave.punchElasticity
  name: punchElasticity
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_punchElasticity
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.punchElasticity
  fullName: PFVR.Spells.EnergyWave.MetroidWave.punchElasticity
  nameWithType: MetroidWave.punchElasticity
- uid: PFVR.Spells.EnergyWave.MetroidWave.punchStrenght
  name: punchStrenght
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_punchStrenght
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.punchStrenght
  fullName: PFVR.Spells.EnergyWave.MetroidWave.punchStrenght
  nameWithType: MetroidWave.punchStrenght
- uid: PFVR.Spells.EnergyWave.MetroidWave.punchVibrato
  name: punchVibrato
  href: api/PFVR.Spells.EnergyWave.MetroidWave.html#PFVR_Spells_EnergyWave_MetroidWave_punchVibrato
  commentId: F:PFVR.Spells.EnergyWave.MetroidWave.punchVibrato
  fullName: PFVR.Spells.EnergyWave.MetroidWave.punchVibrato
  nameWithType: MetroidWave.punchVibrato
- uid: PFVR.Spells.EnergyWave.SpellState
  name: SpellState
  href: api/PFVR.Spells.EnergyWave.SpellState.html
  commentId: T:PFVR.Spells.EnergyWave.SpellState
  fullName: PFVR.Spells.EnergyWave.SpellState
  nameWithType: SpellState
- uid: PFVR.Spells.EnergyWave.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.EnergyWave.SpellState.html#PFVR_Spells_EnergyWave_SpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.EnergyWave.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.EnergyWave.SpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.EnergyWave.SpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.EnergyWave.SpellState.html#PFVR_Spells_EnergyWave_SpellState_OnEnter_
  commentId: Overload:PFVR.Spells.EnergyWave.SpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.SpellState.OnEnter
  nameWithType: SpellState.OnEnter
- uid: PFVR.Spells.EnergyWave.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.EnergyWave.SpellState.html#PFVR_Spells_EnergyWave_SpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.EnergyWave.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.EnergyWave.SpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.EnergyWave.SpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.EnergyWave.SpellState.html#PFVR_Spells_EnergyWave_SpellState_OnExit_
  commentId: Overload:PFVR.Spells.EnergyWave.SpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.SpellState.OnExit
  nameWithType: SpellState.OnExit
- uid: PFVR.Spells.EnergyWave.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.EnergyWave.SpellState.html#PFVR_Spells_EnergyWave_SpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.EnergyWave.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.EnergyWave.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.EnergyWave.SpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.EnergyWave.SpellState.html#PFVR_Spells_EnergyWave_SpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.EnergyWave.SpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.SpellState.OnUpdate
  nameWithType: SpellState.OnUpdate
- uid: PFVR.Spells.EnergyWave.Wave
  name: Wave
  href: api/PFVR.Spells.EnergyWave.Wave.html
  commentId: T:PFVR.Spells.EnergyWave.Wave
  fullName: PFVR.Spells.EnergyWave.Wave
  nameWithType: Wave
- uid: PFVR.Spells.EnergyWave.Wave.collider
  name: collider
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_collider
  commentId: P:PFVR.Spells.EnergyWave.Wave.collider
  fullName: PFVR.Spells.EnergyWave.Wave.collider
  nameWithType: Wave.collider
- uid: PFVR.Spells.EnergyWave.Wave.collider*
  name: collider
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_collider_
  commentId: Overload:PFVR.Spells.EnergyWave.Wave.collider
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.Wave.collider
  nameWithType: Wave.collider
- uid: PFVR.Spells.EnergyWave.Wave.currentHP
  name: currentHP
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_currentHP
  commentId: P:PFVR.Spells.EnergyWave.Wave.currentHP
  fullName: PFVR.Spells.EnergyWave.Wave.currentHP
  nameWithType: Wave.currentHP
- uid: PFVR.Spells.EnergyWave.Wave.currentHP*
  name: currentHP
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_currentHP_
  commentId: Overload:PFVR.Spells.EnergyWave.Wave.currentHP
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.Wave.currentHP
  nameWithType: Wave.currentHP
- uid: PFVR.Spells.EnergyWave.Wave.explodable
  name: explodable
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_explodable
  commentId: P:PFVR.Spells.EnergyWave.Wave.explodable
  fullName: PFVR.Spells.EnergyWave.Wave.explodable
  nameWithType: Wave.explodable
- uid: PFVR.Spells.EnergyWave.Wave.explodable*
  name: explodable
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_explodable_
  commentId: Overload:PFVR.Spells.EnergyWave.Wave.explodable
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.Wave.explodable
  nameWithType: Wave.explodable
- uid: PFVR.Spells.EnergyWave.Wave.isAlive
  name: isAlive
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_isAlive
  commentId: P:PFVR.Spells.EnergyWave.Wave.isAlive
  fullName: PFVR.Spells.EnergyWave.Wave.isAlive
  nameWithType: Wave.isAlive
- uid: PFVR.Spells.EnergyWave.Wave.isAlive*
  name: isAlive
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_isAlive_
  commentId: Overload:PFVR.Spells.EnergyWave.Wave.isAlive
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.Wave.isAlive
  nameWithType: Wave.isAlive
- uid: PFVR.Spells.EnergyWave.Wave.position
  name: position
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_position
  commentId: P:PFVR.Spells.EnergyWave.Wave.position
  fullName: PFVR.Spells.EnergyWave.Wave.position
  nameWithType: Wave.position
- uid: PFVR.Spells.EnergyWave.Wave.position*
  name: position
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_position_
  commentId: Overload:PFVR.Spells.EnergyWave.Wave.position
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.Wave.position
  nameWithType: Wave.position
- uid: PFVR.Spells.EnergyWave.Wave.RegularExplode
  name: RegularExplode()
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_RegularExplode
  commentId: M:PFVR.Spells.EnergyWave.Wave.RegularExplode
  fullName: PFVR.Spells.EnergyWave.Wave.RegularExplode()
  nameWithType: Wave.RegularExplode()
- uid: PFVR.Spells.EnergyWave.Wave.RegularExplode*
  name: RegularExplode
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_RegularExplode_
  commentId: Overload:PFVR.Spells.EnergyWave.Wave.RegularExplode
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.Wave.RegularExplode
  nameWithType: Wave.RegularExplode
- uid: PFVR.Spells.EnergyWave.Wave.rigidbody
  name: rigidbody
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_rigidbody
  commentId: P:PFVR.Spells.EnergyWave.Wave.rigidbody
  fullName: PFVR.Spells.EnergyWave.Wave.rigidbody
  nameWithType: Wave.rigidbody
- uid: PFVR.Spells.EnergyWave.Wave.rigidbody*
  name: rigidbody
  href: api/PFVR.Spells.EnergyWave.Wave.html#PFVR_Spells_EnergyWave_Wave_rigidbody_
  commentId: Overload:PFVR.Spells.EnergyWave.Wave.rigidbody
  isSpec: "True"
  fullName: PFVR.Spells.EnergyWave.Wave.rigidbody
  nameWithType: Wave.rigidbody
- uid: PFVR.Spells.Explosion
  name: Explosion
  href: api/PFVR.Spells.Explosion.html
  commentId: T:PFVR.Spells.Explosion
  fullName: PFVR.Spells.Explosion
  nameWithType: Explosion
- uid: PFVR.Spells.FireBall
  name: PFVR.Spells.FireBall
  href: api/PFVR.Spells.FireBall.html
  commentId: N:PFVR.Spells.FireBall
  fullName: PFVR.Spells.FireBall
  nameWithType: PFVR.Spells.FireBall
- uid: PFVR.Spells.FireBall.Anchor
  name: Anchor
  href: api/PFVR.Spells.FireBall.Anchor.html
  commentId: T:PFVR.Spells.FireBall.Anchor
  fullName: PFVR.Spells.FireBall.Anchor
  nameWithType: Anchor
- uid: PFVR.Spells.FireBall.Anchor.ConnectTo(PFVR.Spells.FireBall.Ball)
  name: ConnectTo(Ball)
  href: api/PFVR.Spells.FireBall.Anchor.html#PFVR_Spells_FireBall_Anchor_ConnectTo_PFVR_Spells_FireBall_Ball_
  commentId: M:PFVR.Spells.FireBall.Anchor.ConnectTo(PFVR.Spells.FireBall.Ball)
  fullName: PFVR.Spells.FireBall.Anchor.ConnectTo(PFVR.Spells.FireBall.Ball)
  nameWithType: Anchor.ConnectTo(Ball)
- uid: PFVR.Spells.FireBall.Anchor.ConnectTo*
  name: ConnectTo
  href: api/PFVR.Spells.FireBall.Anchor.html#PFVR_Spells_FireBall_Anchor_ConnectTo_
  commentId: Overload:PFVR.Spells.FireBall.Anchor.ConnectTo
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Anchor.ConnectTo
  nameWithType: Anchor.ConnectTo
- uid: PFVR.Spells.FireBall.Anchor.ReleaseFrom(PFVR.Spells.FireBall.Ball)
  name: ReleaseFrom(Ball)
  href: api/PFVR.Spells.FireBall.Anchor.html#PFVR_Spells_FireBall_Anchor_ReleaseFrom_PFVR_Spells_FireBall_Ball_
  commentId: M:PFVR.Spells.FireBall.Anchor.ReleaseFrom(PFVR.Spells.FireBall.Ball)
  fullName: PFVR.Spells.FireBall.Anchor.ReleaseFrom(PFVR.Spells.FireBall.Ball)
  nameWithType: Anchor.ReleaseFrom(Ball)
- uid: PFVR.Spells.FireBall.Anchor.ReleaseFrom*
  name: ReleaseFrom
  href: api/PFVR.Spells.FireBall.Anchor.html#PFVR_Spells_FireBall_Anchor_ReleaseFrom_
  commentId: Overload:PFVR.Spells.FireBall.Anchor.ReleaseFrom
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Anchor.ReleaseFrom
  nameWithType: Anchor.ReleaseFrom
- uid: PFVR.Spells.FireBall.Ball
  name: Ball
  href: api/PFVR.Spells.FireBall.Ball.html
  commentId: T:PFVR.Spells.FireBall.Ball
  fullName: PFVR.Spells.FireBall.Ball
  nameWithType: Ball
- uid: PFVR.Spells.FireBall.Ball.collider
  name: collider
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_collider
  commentId: P:PFVR.Spells.FireBall.Ball.collider
  fullName: PFVR.Spells.FireBall.Ball.collider
  nameWithType: Ball.collider
- uid: PFVR.Spells.FireBall.Ball.collider*
  name: collider
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_collider_
  commentId: Overload:PFVR.Spells.FireBall.Ball.collider
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.collider
  nameWithType: Ball.collider
- uid: PFVR.Spells.FireBall.Ball.currentHP
  name: currentHP
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_currentHP
  commentId: P:PFVR.Spells.FireBall.Ball.currentHP
  fullName: PFVR.Spells.FireBall.Ball.currentHP
  nameWithType: Ball.currentHP
- uid: PFVR.Spells.FireBall.Ball.currentHP*
  name: currentHP
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_currentHP_
  commentId: Overload:PFVR.Spells.FireBall.Ball.currentHP
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.currentHP
  nameWithType: Ball.currentHP
- uid: PFVR.Spells.FireBall.Ball.explodable
  name: explodable
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_explodable
  commentId: P:PFVR.Spells.FireBall.Ball.explodable
  fullName: PFVR.Spells.FireBall.Ball.explodable
  nameWithType: Ball.explodable
- uid: PFVR.Spells.FireBall.Ball.explodable*
  name: explodable
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_explodable_
  commentId: Overload:PFVR.Spells.FireBall.Ball.explodable
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.explodable
  nameWithType: Ball.explodable
- uid: PFVR.Spells.FireBall.Ball.isAlive
  name: isAlive
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_isAlive
  commentId: P:PFVR.Spells.FireBall.Ball.isAlive
  fullName: PFVR.Spells.FireBall.Ball.isAlive
  nameWithType: Ball.isAlive
- uid: PFVR.Spells.FireBall.Ball.isAlive*
  name: isAlive
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_isAlive_
  commentId: Overload:PFVR.Spells.FireBall.Ball.isAlive
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.isAlive
  nameWithType: Ball.isAlive
- uid: PFVR.Spells.FireBall.Ball.LaserExplode
  name: LaserExplode()
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_LaserExplode
  commentId: M:PFVR.Spells.FireBall.Ball.LaserExplode
  fullName: PFVR.Spells.FireBall.Ball.LaserExplode()
  nameWithType: Ball.LaserExplode()
- uid: PFVR.Spells.FireBall.Ball.LaserExplode*
  name: LaserExplode
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_LaserExplode_
  commentId: Overload:PFVR.Spells.FireBall.Ball.LaserExplode
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.LaserExplode
  nameWithType: Ball.LaserExplode
- uid: PFVR.Spells.FireBall.Ball.position
  name: position
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_position
  commentId: P:PFVR.Spells.FireBall.Ball.position
  fullName: PFVR.Spells.FireBall.Ball.position
  nameWithType: Ball.position
- uid: PFVR.Spells.FireBall.Ball.position*
  name: position
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_position_
  commentId: Overload:PFVR.Spells.FireBall.Ball.position
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.position
  nameWithType: Ball.position
- uid: PFVR.Spells.FireBall.Ball.RegularExplode
  name: RegularExplode()
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_RegularExplode
  commentId: M:PFVR.Spells.FireBall.Ball.RegularExplode
  fullName: PFVR.Spells.FireBall.Ball.RegularExplode()
  nameWithType: Ball.RegularExplode()
- uid: PFVR.Spells.FireBall.Ball.RegularExplode*
  name: RegularExplode
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_RegularExplode_
  commentId: Overload:PFVR.Spells.FireBall.Ball.RegularExplode
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.RegularExplode
  nameWithType: Ball.RegularExplode
- uid: PFVR.Spells.FireBall.Ball.rigidbody
  name: rigidbody
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_rigidbody
  commentId: P:PFVR.Spells.FireBall.Ball.rigidbody
  fullName: PFVR.Spells.FireBall.Ball.rigidbody
  nameWithType: Ball.rigidbody
- uid: PFVR.Spells.FireBall.Ball.rigidbody*
  name: rigidbody
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_rigidbody_
  commentId: Overload:PFVR.Spells.FireBall.Ball.rigidbody
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.rigidbody
  nameWithType: Ball.rigidbody
- uid: PFVR.Spells.FireBall.Ball.trailRenderer
  name: trailRenderer
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_trailRenderer
  commentId: P:PFVR.Spells.FireBall.Ball.trailRenderer
  fullName: PFVR.Spells.FireBall.Ball.trailRenderer
  nameWithType: Ball.trailRenderer
- uid: PFVR.Spells.FireBall.Ball.trailRenderer*
  name: trailRenderer
  href: api/PFVR.Spells.FireBall.Ball.html#PFVR_Spells_FireBall_Ball_trailRenderer_
  commentId: Overload:PFVR.Spells.FireBall.Ball.trailRenderer
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.Ball.trailRenderer
  nameWithType: Ball.trailRenderer
- uid: PFVR.Spells.FireBall.SpellState
  name: SpellState
  href: api/PFVR.Spells.FireBall.SpellState.html
  commentId: T:PFVR.Spells.FireBall.SpellState
  fullName: PFVR.Spells.FireBall.SpellState
  nameWithType: SpellState
- uid: PFVR.Spells.FireBall.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.FireBall.SpellState.html#PFVR_Spells_FireBall_SpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.FireBall.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.FireBall.SpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.FireBall.SpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.FireBall.SpellState.html#PFVR_Spells_FireBall_SpellState_OnEnter_
  commentId: Overload:PFVR.Spells.FireBall.SpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.SpellState.OnEnter
  nameWithType: SpellState.OnEnter
- uid: PFVR.Spells.FireBall.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.FireBall.SpellState.html#PFVR_Spells_FireBall_SpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.FireBall.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.FireBall.SpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.FireBall.SpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.FireBall.SpellState.html#PFVR_Spells_FireBall_SpellState_OnExit_
  commentId: Overload:PFVR.Spells.FireBall.SpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.SpellState.OnExit
  nameWithType: SpellState.OnExit
- uid: PFVR.Spells.FireBall.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.FireBall.SpellState.html#PFVR_Spells_FireBall_SpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.FireBall.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.FireBall.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.FireBall.SpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.FireBall.SpellState.html#PFVR_Spells_FireBall_SpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.FireBall.SpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.FireBall.SpellState.OnUpdate
  nameWithType: SpellState.OnUpdate
- uid: PFVR.Spells.ISpellState
  name: ISpellState
  href: api/PFVR.Spells.ISpellState.html
  commentId: T:PFVR.Spells.ISpellState
  fullName: PFVR.Spells.ISpellState
  nameWithType: ISpellState
- uid: PFVR.Spells.ISpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.ISpellState.html#PFVR_Spells_ISpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.ISpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.ISpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: ISpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.ISpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.ISpellState.html#PFVR_Spells_ISpellState_OnEnter_
  commentId: Overload:PFVR.Spells.ISpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.ISpellState.OnEnter
  nameWithType: ISpellState.OnEnter
- uid: PFVR.Spells.ISpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.ISpellState.html#PFVR_Spells_ISpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.ISpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.ISpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: ISpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.ISpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.ISpellState.html#PFVR_Spells_ISpellState_OnExit_
  commentId: Overload:PFVR.Spells.ISpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.ISpellState.OnExit
  nameWithType: ISpellState.OnExit
- uid: PFVR.Spells.ISpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.ISpellState.html#PFVR_Spells_ISpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.ISpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.ISpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: ISpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.ISpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.ISpellState.html#PFVR_Spells_ISpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.ISpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.ISpellState.OnUpdate
  nameWithType: ISpellState.OnUpdate
- uid: PFVR.Spells.JetPack
  name: PFVR.Spells.JetPack
  href: api/PFVR.Spells.JetPack.html
  commentId: N:PFVR.Spells.JetPack
  fullName: PFVR.Spells.JetPack
  nameWithType: PFVR.Spells.JetPack
- uid: PFVR.Spells.JetPack.Engine
  name: Engine
  href: api/PFVR.Spells.JetPack.Engine.html
  commentId: T:PFVR.Spells.JetPack.Engine
  fullName: PFVR.Spells.JetPack.Engine
  nameWithType: Engine
- uid: PFVR.Spells.JetPack.Engine.isBoosting
  name: isBoosting
  href: api/PFVR.Spells.JetPack.Engine.html#PFVR_Spells_JetPack_Engine_isBoosting
  commentId: P:PFVR.Spells.JetPack.Engine.isBoosting
  fullName: PFVR.Spells.JetPack.Engine.isBoosting
  nameWithType: Engine.isBoosting
- uid: PFVR.Spells.JetPack.Engine.isBoosting*
  name: isBoosting
  href: api/PFVR.Spells.JetPack.Engine.html#PFVR_Spells_JetPack_Engine_isBoosting_
  commentId: Overload:PFVR.Spells.JetPack.Engine.isBoosting
  isSpec: "True"
  fullName: PFVR.Spells.JetPack.Engine.isBoosting
  nameWithType: Engine.isBoosting
- uid: PFVR.Spells.JetPack.Engine.isTurnedOn
  name: isTurnedOn
  href: api/PFVR.Spells.JetPack.Engine.html#PFVR_Spells_JetPack_Engine_isTurnedOn
  commentId: P:PFVR.Spells.JetPack.Engine.isTurnedOn
  fullName: PFVR.Spells.JetPack.Engine.isTurnedOn
  nameWithType: Engine.isTurnedOn
- uid: PFVR.Spells.JetPack.Engine.isTurnedOn*
  name: isTurnedOn
  href: api/PFVR.Spells.JetPack.Engine.html#PFVR_Spells_JetPack_Engine_isTurnedOn_
  commentId: Overload:PFVR.Spells.JetPack.Engine.isTurnedOn
  isSpec: "True"
  fullName: PFVR.Spells.JetPack.Engine.isTurnedOn
  nameWithType: Engine.isTurnedOn
- uid: PFVR.Spells.JetPack.Engine.propulsion
  name: propulsion
  href: api/PFVR.Spells.JetPack.Engine.html#PFVR_Spells_JetPack_Engine_propulsion
  commentId: P:PFVR.Spells.JetPack.Engine.propulsion
  fullName: PFVR.Spells.JetPack.Engine.propulsion
  nameWithType: Engine.propulsion
- uid: PFVR.Spells.JetPack.Engine.propulsion*
  name: propulsion
  href: api/PFVR.Spells.JetPack.Engine.html#PFVR_Spells_JetPack_Engine_propulsion_
  commentId: Overload:PFVR.Spells.JetPack.Engine.propulsion
  isSpec: "True"
  fullName: PFVR.Spells.JetPack.Engine.propulsion
  nameWithType: Engine.propulsion
- uid: PFVR.Spells.JetPack.SpellState
  name: SpellState
  href: api/PFVR.Spells.JetPack.SpellState.html
  commentId: T:PFVR.Spells.JetPack.SpellState
  fullName: PFVR.Spells.JetPack.SpellState
  nameWithType: SpellState
- uid: PFVR.Spells.JetPack.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.JetPack.SpellState.html#PFVR_Spells_JetPack_SpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.JetPack.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.JetPack.SpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.JetPack.SpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.JetPack.SpellState.html#PFVR_Spells_JetPack_SpellState_OnEnter_
  commentId: Overload:PFVR.Spells.JetPack.SpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.JetPack.SpellState.OnEnter
  nameWithType: SpellState.OnEnter
- uid: PFVR.Spells.JetPack.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.JetPack.SpellState.html#PFVR_Spells_JetPack_SpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.JetPack.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.JetPack.SpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.JetPack.SpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.JetPack.SpellState.html#PFVR_Spells_JetPack_SpellState_OnExit_
  commentId: Overload:PFVR.Spells.JetPack.SpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.JetPack.SpellState.OnExit
  nameWithType: SpellState.OnExit
- uid: PFVR.Spells.JetPack.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.JetPack.SpellState.html#PFVR_Spells_JetPack_SpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.JetPack.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.JetPack.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.JetPack.SpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.JetPack.SpellState.html#PFVR_Spells_JetPack_SpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.JetPack.SpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.JetPack.SpellState.OnUpdate
  nameWithType: SpellState.OnUpdate
- uid: PFVR.Spells.LaserBolt
  name: PFVR.Spells.LaserBolt
  href: api/PFVR.Spells.LaserBolt.html
  commentId: N:PFVR.Spells.LaserBolt
  fullName: PFVR.Spells.LaserBolt
  nameWithType: PFVR.Spells.LaserBolt
- uid: PFVR.Spells.LaserBolt.Bolt
  name: Bolt
  href: api/PFVR.Spells.LaserBolt.Bolt.html
  commentId: T:PFVR.Spells.LaserBolt.Bolt
  fullName: PFVR.Spells.LaserBolt.Bolt
  nameWithType: Bolt
- uid: PFVR.Spells.LaserBolt.Bolt.velocity
  name: velocity
  href: api/PFVR.Spells.LaserBolt.Bolt.html#PFVR_Spells_LaserBolt_Bolt_velocity
  commentId: P:PFVR.Spells.LaserBolt.Bolt.velocity
  fullName: PFVR.Spells.LaserBolt.Bolt.velocity
  nameWithType: Bolt.velocity
- uid: PFVR.Spells.LaserBolt.Bolt.velocity*
  name: velocity
  href: api/PFVR.Spells.LaserBolt.Bolt.html#PFVR_Spells_LaserBolt_Bolt_velocity_
  commentId: Overload:PFVR.Spells.LaserBolt.Bolt.velocity
  isSpec: "True"
  fullName: PFVR.Spells.LaserBolt.Bolt.velocity
  nameWithType: Bolt.velocity
- uid: PFVR.Spells.LaserBolt.SpellState
  name: SpellState
  href: api/PFVR.Spells.LaserBolt.SpellState.html
  commentId: T:PFVR.Spells.LaserBolt.SpellState
  fullName: PFVR.Spells.LaserBolt.SpellState
  nameWithType: SpellState
- uid: PFVR.Spells.LaserBolt.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.LaserBolt.SpellState.html#PFVR_Spells_LaserBolt_SpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.LaserBolt.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.LaserBolt.SpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.LaserBolt.SpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.LaserBolt.SpellState.html#PFVR_Spells_LaserBolt_SpellState_OnEnter_
  commentId: Overload:PFVR.Spells.LaserBolt.SpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.LaserBolt.SpellState.OnEnter
  nameWithType: SpellState.OnEnter
- uid: PFVR.Spells.LaserBolt.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.LaserBolt.SpellState.html#PFVR_Spells_LaserBolt_SpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.LaserBolt.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.LaserBolt.SpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.LaserBolt.SpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.LaserBolt.SpellState.html#PFVR_Spells_LaserBolt_SpellState_OnExit_
  commentId: Overload:PFVR.Spells.LaserBolt.SpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.LaserBolt.SpellState.OnExit
  nameWithType: SpellState.OnExit
- uid: PFVR.Spells.LaserBolt.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.LaserBolt.SpellState.html#PFVR_Spells_LaserBolt_SpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.LaserBolt.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.LaserBolt.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.LaserBolt.SpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.LaserBolt.SpellState.html#PFVR_Spells_LaserBolt_SpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.LaserBolt.SpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.LaserBolt.SpellState.OnUpdate
  nameWithType: SpellState.OnUpdate
- uid: PFVR.Spells.LaserRay
  name: PFVR.Spells.LaserRay
  href: api/PFVR.Spells.LaserRay.html
  commentId: N:PFVR.Spells.LaserRay
  fullName: PFVR.Spells.LaserRay
  nameWithType: PFVR.Spells.LaserRay
- uid: PFVR.Spells.LaserRay.BasicRay
  name: BasicRay
  href: api/PFVR.Spells.LaserRay.BasicRay.html
  commentId: T:PFVR.Spells.LaserRay.BasicRay
  fullName: PFVR.Spells.LaserRay.BasicRay
  nameWithType: BasicRay
- uid: PFVR.Spells.LaserRay.BasicRay.isCutting
  name: isCutting
  href: api/PFVR.Spells.LaserRay.BasicRay.html#PFVR_Spells_LaserRay_BasicRay_isCutting
  commentId: P:PFVR.Spells.LaserRay.BasicRay.isCutting
  fullName: PFVR.Spells.LaserRay.BasicRay.isCutting
  nameWithType: BasicRay.isCutting
- uid: PFVR.Spells.LaserRay.BasicRay.isCutting*
  name: isCutting
  href: api/PFVR.Spells.LaserRay.BasicRay.html#PFVR_Spells_LaserRay_BasicRay_isCutting_
  commentId: Overload:PFVR.Spells.LaserRay.BasicRay.isCutting
  isSpec: "True"
  fullName: PFVR.Spells.LaserRay.BasicRay.isCutting
  nameWithType: BasicRay.isCutting
- uid: PFVR.Spells.LaserRay.BasicRay.Start
  name: Start()
  href: api/PFVR.Spells.LaserRay.BasicRay.html#PFVR_Spells_LaserRay_BasicRay_Start
  commentId: M:PFVR.Spells.LaserRay.BasicRay.Start
  fullName: PFVR.Spells.LaserRay.BasicRay.Start()
  nameWithType: BasicRay.Start()
- uid: PFVR.Spells.LaserRay.BasicRay.Start*
  name: Start
  href: api/PFVR.Spells.LaserRay.BasicRay.html#PFVR_Spells_LaserRay_BasicRay_Start_
  commentId: Overload:PFVR.Spells.LaserRay.BasicRay.Start
  isSpec: "True"
  fullName: PFVR.Spells.LaserRay.BasicRay.Start
  nameWithType: BasicRay.Start
- uid: PFVR.Spells.LaserRay.SpellState
  name: SpellState
  href: api/PFVR.Spells.LaserRay.SpellState.html
  commentId: T:PFVR.Spells.LaserRay.SpellState
  fullName: PFVR.Spells.LaserRay.SpellState
  nameWithType: SpellState
- uid: PFVR.Spells.LaserRay.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.LaserRay.SpellState.html#PFVR_Spells_LaserRay_SpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.LaserRay.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.LaserRay.SpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.LaserRay.SpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.LaserRay.SpellState.html#PFVR_Spells_LaserRay_SpellState_OnEnter_
  commentId: Overload:PFVR.Spells.LaserRay.SpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.LaserRay.SpellState.OnEnter
  nameWithType: SpellState.OnEnter
- uid: PFVR.Spells.LaserRay.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.LaserRay.SpellState.html#PFVR_Spells_LaserRay_SpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.LaserRay.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.LaserRay.SpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.LaserRay.SpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.LaserRay.SpellState.html#PFVR_Spells_LaserRay_SpellState_OnExit_
  commentId: Overload:PFVR.Spells.LaserRay.SpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.LaserRay.SpellState.OnExit
  nameWithType: SpellState.OnExit
- uid: PFVR.Spells.LaserRay.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.LaserRay.SpellState.html#PFVR_Spells_LaserRay_SpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.LaserRay.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.LaserRay.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.LaserRay.SpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.LaserRay.SpellState.html#PFVR_Spells_LaserRay_SpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.LaserRay.SpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.LaserRay.SpellState.OnUpdate
  nameWithType: SpellState.OnUpdate
- uid: PFVR.Spells.Shield
  name: PFVR.Spells.Shield
  href: api/PFVR.Spells.Shield.html
  commentId: N:PFVR.Spells.Shield
  fullName: PFVR.Spells.Shield
  nameWithType: PFVR.Spells.Shield
- uid: PFVR.Spells.Shield.HamsterBall
  name: HamsterBall
  href: api/PFVR.Spells.Shield.HamsterBall.html
  commentId: T:PFVR.Spells.Shield.HamsterBall
  fullName: PFVR.Spells.Shield.HamsterBall
  nameWithType: HamsterBall
- uid: PFVR.Spells.Shield.HamsterBall.Explode
  name: Explode()
  href: api/PFVR.Spells.Shield.HamsterBall.html#PFVR_Spells_Shield_HamsterBall_Explode
  commentId: M:PFVR.Spells.Shield.HamsterBall.Explode
  fullName: PFVR.Spells.Shield.HamsterBall.Explode()
  nameWithType: HamsterBall.Explode()
- uid: PFVR.Spells.Shield.HamsterBall.Explode*
  name: Explode
  href: api/PFVR.Spells.Shield.HamsterBall.html#PFVR_Spells_Shield_HamsterBall_Explode_
  commentId: Overload:PFVR.Spells.Shield.HamsterBall.Explode
  isSpec: "True"
  fullName: PFVR.Spells.Shield.HamsterBall.Explode
  nameWithType: HamsterBall.Explode
- uid: PFVR.Spells.Shield.HamsterBall.onCollision
  name: onCollision
  href: api/PFVR.Spells.Shield.HamsterBall.html#PFVR_Spells_Shield_HamsterBall_onCollision
  commentId: E:PFVR.Spells.Shield.HamsterBall.onCollision
  fullName: PFVR.Spells.Shield.HamsterBall.onCollision
  nameWithType: HamsterBall.onCollision
- uid: PFVR.Spells.Shield.IShield
  name: IShield
  href: api/PFVR.Spells.Shield.IShield.html
  commentId: T:PFVR.Spells.Shield.IShield
  fullName: PFVR.Spells.Shield.IShield
  nameWithType: IShield
- uid: PFVR.Spells.Shield.IShield.Explode
  name: Explode()
  href: api/PFVR.Spells.Shield.IShield.html#PFVR_Spells_Shield_IShield_Explode
  commentId: M:PFVR.Spells.Shield.IShield.Explode
  fullName: PFVR.Spells.Shield.IShield.Explode()
  nameWithType: IShield.Explode()
- uid: PFVR.Spells.Shield.IShield.Explode*
  name: Explode
  href: api/PFVR.Spells.Shield.IShield.html#PFVR_Spells_Shield_IShield_Explode_
  commentId: Overload:PFVR.Spells.Shield.IShield.Explode
  isSpec: "True"
  fullName: PFVR.Spells.Shield.IShield.Explode
  nameWithType: IShield.Explode
- uid: PFVR.Spells.Shield.IShield.onCollision
  name: onCollision
  href: api/PFVR.Spells.Shield.IShield.html#PFVR_Spells_Shield_IShield_onCollision
  commentId: E:PFVR.Spells.Shield.IShield.onCollision
  fullName: PFVR.Spells.Shield.IShield.onCollision
  nameWithType: IShield.onCollision
- uid: PFVR.Spells.Shield.KnightShield
  name: KnightShield
  href: api/PFVR.Spells.Shield.KnightShield.html
  commentId: T:PFVR.Spells.Shield.KnightShield
  fullName: PFVR.Spells.Shield.KnightShield
  nameWithType: KnightShield
- uid: PFVR.Spells.Shield.KnightShield.Explode
  name: Explode()
  href: api/PFVR.Spells.Shield.KnightShield.html#PFVR_Spells_Shield_KnightShield_Explode
  commentId: M:PFVR.Spells.Shield.KnightShield.Explode
  fullName: PFVR.Spells.Shield.KnightShield.Explode()
  nameWithType: KnightShield.Explode()
- uid: PFVR.Spells.Shield.KnightShield.Explode*
  name: Explode
  href: api/PFVR.Spells.Shield.KnightShield.html#PFVR_Spells_Shield_KnightShield_Explode_
  commentId: Overload:PFVR.Spells.Shield.KnightShield.Explode
  isSpec: "True"
  fullName: PFVR.Spells.Shield.KnightShield.Explode
  nameWithType: KnightShield.Explode
- uid: PFVR.Spells.Shield.KnightShield.onCollision
  name: onCollision
  href: api/PFVR.Spells.Shield.KnightShield.html#PFVR_Spells_Shield_KnightShield_onCollision
  commentId: E:PFVR.Spells.Shield.KnightShield.onCollision
  fullName: PFVR.Spells.Shield.KnightShield.onCollision
  nameWithType: KnightShield.onCollision
- uid: PFVR.Spells.Shield.SpellState
  name: SpellState
  href: api/PFVR.Spells.Shield.SpellState.html
  commentId: T:PFVR.Spells.Shield.SpellState
  fullName: PFVR.Spells.Shield.SpellState
  nameWithType: SpellState
- uid: PFVR.Spells.Shield.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.Shield.SpellState.html#PFVR_Spells_Shield_SpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.Shield.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.Shield.SpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.Shield.SpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.Shield.SpellState.html#PFVR_Spells_Shield_SpellState_OnEnter_
  commentId: Overload:PFVR.Spells.Shield.SpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.Shield.SpellState.OnEnter
  nameWithType: SpellState.OnEnter
- uid: PFVR.Spells.Shield.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.Shield.SpellState.html#PFVR_Spells_Shield_SpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.Shield.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.Shield.SpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.Shield.SpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.Shield.SpellState.html#PFVR_Spells_Shield_SpellState_OnExit_
  commentId: Overload:PFVR.Spells.Shield.SpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.Shield.SpellState.OnExit
  nameWithType: SpellState.OnExit
- uid: PFVR.Spells.Shield.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.Shield.SpellState.html#PFVR_Spells_Shield_SpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.Shield.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.Shield.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.Shield.SpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.Shield.SpellState.html#PFVR_Spells_Shield_SpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.Shield.SpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.Shield.SpellState.OnUpdate
  nameWithType: SpellState.OnUpdate
- uid: PFVR.Spells.TimeStop
  name: PFVR.Spells.TimeStop
  href: api/PFVR.Spells.TimeStop.html
  commentId: N:PFVR.Spells.TimeStop
  fullName: PFVR.Spells.TimeStop
  nameWithType: PFVR.Spells.TimeStop
- uid: PFVR.Spells.TimeStop.SpellState
  name: SpellState
  href: api/PFVR.Spells.TimeStop.SpellState.html
  commentId: T:PFVR.Spells.TimeStop.SpellState
  fullName: PFVR.Spells.TimeStop.SpellState
  nameWithType: SpellState
- uid: PFVR.Spells.TimeStop.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnEnter(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.TimeStop.SpellState.html#PFVR_Spells_TimeStop_SpellState_OnEnter_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.TimeStop.SpellState.OnEnter(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.TimeStop.SpellState.OnEnter(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnEnter(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.TimeStop.SpellState.OnEnter*
  name: OnEnter
  href: api/PFVR.Spells.TimeStop.SpellState.html#PFVR_Spells_TimeStop_SpellState_OnEnter_
  commentId: Overload:PFVR.Spells.TimeStop.SpellState.OnEnter
  isSpec: "True"
  fullName: PFVR.Spells.TimeStop.SpellState.OnEnter
  nameWithType: SpellState.OnEnter
- uid: PFVR.Spells.TimeStop.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnExit(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.TimeStop.SpellState.html#PFVR_Spells_TimeStop_SpellState_OnExit_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.TimeStop.SpellState.OnExit(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.TimeStop.SpellState.OnExit(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnExit(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.TimeStop.SpellState.OnExit*
  name: OnExit
  href: api/PFVR.Spells.TimeStop.SpellState.html#PFVR_Spells_TimeStop_SpellState_OnExit_
  commentId: Overload:PFVR.Spells.TimeStop.SpellState.OnExit
  isSpec: "True"
  fullName: PFVR.Spells.TimeStop.SpellState.OnExit
  nameWithType: SpellState.OnExit
- uid: PFVR.Spells.TimeStop.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  name: OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
  href: api/PFVR.Spells.TimeStop.SpellState.html#PFVR_Spells_TimeStop_SpellState_OnUpdate_PFVR_Player_PlayerBehaviour_PFVR_Player_PlayerHandBehaviour_
  commentId: M:PFVR.Spells.TimeStop.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour,PFVR.Player.PlayerHandBehaviour)
  fullName: PFVR.Spells.TimeStop.SpellState.OnUpdate(PFVR.Player.PlayerBehaviour, PFVR.Player.PlayerHandBehaviour)
  nameWithType: SpellState.OnUpdate(PlayerBehaviour, PlayerHandBehaviour)
- uid: PFVR.Spells.TimeStop.SpellState.OnUpdate*
  name: OnUpdate
  href: api/PFVR.Spells.TimeStop.SpellState.html#PFVR_Spells_TimeStop_SpellState_OnUpdate_
  commentId: Overload:PFVR.Spells.TimeStop.SpellState.OnUpdate
  isSpec: "True"
  fullName: PFVR.Spells.TimeStop.SpellState.OnUpdate
  nameWithType: SpellState.OnUpdate
- uid: PFVR.VFX
  name: PFVR.VFX
  href: api/PFVR.VFX.html
  commentId: N:PFVR.VFX
  fullName: PFVR.VFX
  nameWithType: PFVR.VFX
- uid: PFVR.VFX.ChromaticAberrationOverSpeed
  name: ChromaticAberrationOverSpeed
  href: api/PFVR.VFX.ChromaticAberrationOverSpeed.html
  commentId: T:PFVR.VFX.ChromaticAberrationOverSpeed
  fullName: PFVR.VFX.ChromaticAberrationOverSpeed
  nameWithType: ChromaticAberrationOverSpeed
- uid: PFVR.VFX.ParticleSystemAnimator
  name: ParticleSystemAnimator
  href: api/PFVR.VFX.ParticleSystemAnimator.html
  commentId: T:PFVR.VFX.ParticleSystemAnimator
  fullName: PFVR.VFX.ParticleSystemAnimator
  nameWithType: ParticleSystemAnimator
- uid: PFVR.VFX.ParticleSystemAnimator.bursting
  name: bursting
  href: api/PFVR.VFX.ParticleSystemAnimator.html#PFVR_VFX_ParticleSystemAnimator_bursting
  commentId: F:PFVR.VFX.ParticleSystemAnimator.bursting
  fullName: PFVR.VFX.ParticleSystemAnimator.bursting
  nameWithType: ParticleSystemAnimator.bursting
- uid: PFVR.VFX.ParticleSystemBurster
  name: ParticleSystemBurster
  href: api/PFVR.VFX.ParticleSystemBurster.html
  commentId: T:PFVR.VFX.ParticleSystemBurster
  fullName: PFVR.VFX.ParticleSystemBurster
  nameWithType: ParticleSystemBurster
- uid: PFVR.VFX.ParticleSystemBurster.Burst(System.Single)
  name: Burst(Single)
  href: api/PFVR.VFX.ParticleSystemBurster.html#PFVR_VFX_ParticleSystemBurster_Burst_System_Single_
  commentId: M:PFVR.VFX.ParticleSystemBurster.Burst(System.Single)
  fullName: PFVR.VFX.ParticleSystemBurster.Burst(System.Single)
  nameWithType: ParticleSystemBurster.Burst(Single)
- uid: PFVR.VFX.ParticleSystemBurster.Burst*
  name: Burst
  href: api/PFVR.VFX.ParticleSystemBurster.html#PFVR_VFX_ParticleSystemBurster_Burst_
  commentId: Overload:PFVR.VFX.ParticleSystemBurster.Burst
  isSpec: "True"
  fullName: PFVR.VFX.ParticleSystemBurster.Burst
  nameWithType: ParticleSystemBurster.Burst
- uid: PFVR.VFX.ParticleSystemBurster.burstMultiplier
  name: burstMultiplier
  href: api/PFVR.VFX.ParticleSystemBurster.html#PFVR_VFX_ParticleSystemBurster_burstMultiplier
  commentId: F:PFVR.VFX.ParticleSystemBurster.burstMultiplier
  fullName: PFVR.VFX.ParticleSystemBurster.burstMultiplier
  nameWithType: ParticleSystemBurster.burstMultiplier
- uid: PFVR.VFX.ParticleSystemDestroyOnFinish
  name: ParticleSystemDestroyOnFinish
  href: api/PFVR.VFX.ParticleSystemDestroyOnFinish.html
  commentId: T:PFVR.VFX.ParticleSystemDestroyOnFinish
  fullName: PFVR.VFX.ParticleSystemDestroyOnFinish
  nameWithType: ParticleSystemDestroyOnFinish
- uid: PFVR.VFX.TracerParticles
  name: TracerParticles
  href: api/PFVR.VFX.TracerParticles.html
  commentId: T:PFVR.VFX.TracerParticles
  fullName: PFVR.VFX.TracerParticles
  nameWithType: TracerParticles
- uid: PFVR.VFX.TrailRendererScaleToSpeed
  name: TrailRendererScaleToSpeed
  href: api/PFVR.VFX.TrailRendererScaleToSpeed.html
  commentId: T:PFVR.VFX.TrailRendererScaleToSpeed
  fullName: PFVR.VFX.TrailRendererScaleToSpeed
  nameWithType: TrailRendererScaleToSpeed
